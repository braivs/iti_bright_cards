{"version":3,"sources":["n1-main/m1-ui/p1-header/Header.module.scss","n1-main/m1-ui/routes/Examples/Examples.module.scss","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.scss","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","reportWebVitals.ts","n1-main/m1-ui/p1-header/Header.tsx","n1-main/m1-ui/routes/Login.tsx","n1-main/m1-ui/routes/Registration.tsx","n1-main/m1-ui/routes/Profile.tsx","n1-main/m1-ui/routes/Page404.tsx","n1-main/m1-ui/routes/PasswordRecovery.tsx","n1-main/m1-ui/routes/PasswordNew.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m1-ui/routes/Examples/Examples.tsx","n1-main/m1-ui/p2-main/Main.tsx","n1-main/m1-ui/App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","item","to","Login","Registration","Profile","Page404","PasswordRecovery","PasswordNew","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","name","onChangeCallback","radio","Examples","text","setText","setChecked","setValue","arr","valueForSsSr","showAlert","alert","examples","column","testSpanError","blue","onClick","disabled","undefined","Main","exact","path","render","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8667344.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3WzfM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"examples\":\"Examples_examples__2IsXF\",\"column\":\"Examples_column__xf4HV\",\"testSpanError\":\"Examples_testSpanError__2zpN6\",\"blue\":\"Examples_blue__2yDbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1eFk0\",\"superInput\":\"SuperInputText_superInput__3ElrI\",\"errorInput\":\"SuperInputText_errorInput__2fdZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__28tTz\",\"default\":\"SuperButton_default__2wHvj\",\"red\":\"SuperButton_red__358cC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3tQnQ\",\"checkbox\":\"SuperCheckbox_checkbox__240O_\",\"spanClassName\":\"SuperCheckbox_spanClassName__1EQ_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__mzFZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__2M9k8\",\"label\":\"SuperRadio_label__2vyuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__bRdTl\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink className={s.item} to={'/login'}>Login</NavLink>\r\n            <NavLink className={s.item} to={'/registration'}>Registration</NavLink>\r\n            <NavLink className={s.item} to={'/profile'}>Profile</NavLink>\r\n            <NavLink className={s.item} to={'/404'}>404</NavLink>\r\n            <NavLink className={s.item} to={'/passwordrecovery'}>Recovery Password</NavLink>\r\n            <NavLink className={s.item} to={'/passwordnew'}>New Password</NavLink>\r\n            <NavLink className={s.item} to={'/tests'}>Tests</NavLink>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>Login</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <div>Registration</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>Profile</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div>Page404</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const PasswordRecovery = () => {\r\n    return (\r\n        <div>PasswordRecovery</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const PasswordNew = () => {\r\n    return (\r\n        <div>PasswordNew</div>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeChecked,\r\n    className, spanClassName,\r\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  }\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n  {\r\n    autoFocus, // игнорировать изменение этого пропса\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n    onEnter && onEnter() // оставлено на будущее, чтобы можно было возвращать событие по enter\r\n  }\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n    onBlur && onBlur(e)\r\n  }\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true) // включить editMode при двойном клике\r\n\r\n    onDoubleClick && onDoubleClick(e)\r\n  }\r\n\r\n  const spanClassName = `${s.editableSpan} ${className}`\r\n\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <SuperInputText\r\n            autoFocus // пропсу с булевым значением не обязательно указывать true\r\n            onBlur={onBlurCallback}\r\n            onEnter={onEnterCallback}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={onDoubleClickCallBack}\r\n            className={spanClassName}\r\n\r\n            {...restSpanProps}\r\n          >\r\n            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n            ✎ {children || restProps.value}\r\n                    </span>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: string[]\r\n  onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o, i) => (\r\n    <option className={s.option} key={'option-' + i} value={o}>{o}</option>\r\n  )) : []\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.scss'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => { // map options with key\r\n        return <label className={s.label} key={name + '-' + i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Examples.module.scss'\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../common/c6-SuperRadio/SuperRadio\";\r\n\r\nexport const Examples = () => {\r\n    const [text, setText] = useState<string>('') // for SuperInputText\r\n    const [checked, setChecked] = useState<boolean>(false) // for SuperCheckbox\r\n    const [value, setValue] = useState<string>('') // for SuperEditableSpan\r\n    const arr = ['x', 'y', 'z'] // for SuperSelect & SuperRadio\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect & SuperRadio\r\n\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => { // for SuperButton\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.examples}>\r\n            <div>This is examples of common components.</div>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <div>с1-SuperInputText:</div>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, работает ли смешивание классов\r\n                />\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <div>с2-SuperButton:</div>\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <div>с3-SuperCheckbox:</div>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div>\r\n                <div>с4-SuperEditableSpan:</div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <div>с5-SuperSelect:</div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={valueForSsSr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div>\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={value}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Header} from \"../p1-header/Header\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {Login} from \"../routes/Login\";\r\nimport {Registration} from \"../routes/Registration\";\r\nimport {Profile} from \"../routes/Profile\";\r\nimport {Page404} from \"../routes/Page404\";\r\nimport {PasswordRecovery} from \"../routes/PasswordRecovery\";\r\nimport {PasswordNew} from \"../routes/PasswordNew\";\r\nimport {Examples} from \"../routes/Examples/Examples\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Route exact path={'/login'} render={() => <Login/>}/>\r\n            <Route exact path={'/registration'} render={() => <Registration/>}/>\r\n            <Route exact path={'/profile'} render={() => <Profile/>}/>\r\n            <Route exact path={'/404'} render={() => <Page404/>}/>\r\n            <Route exact path={'/passwordrecovery'} render={() => <PasswordRecovery/>}/>\r\n            <Route exact path={'/passwordnew'} render={() => <PasswordNew/>}/>\r\n            <Route exact path={'/tests'} render={() => <Examples/>}/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport {HashRouter, NavLink} from 'react-router-dom';\nimport './App.css';\nimport {Examples} from \"./routes/Examples/Examples\";\nimport {Route} from \"react-router-dom\";\nimport {Login} from \"./routes/Login\";\nimport {Registration} from \"./routes/Registration\";\nimport {Profile} from \"./routes/Profile\";\nimport {Page404} from \"./routes/Page404\";\nimport {PasswordRecovery} from \"./routes/PasswordRecovery\";\nimport {PasswordNew} from \"./routes/PasswordNew\";\nimport {Main} from \"./p2-main/Main\";\n\nexport const App = () => {\n    return (\n        <div className=\"App\">\n            <HashRouter />\n            <Main />\n            {/*hashRouter, provider*/}\n            <>\n                {/*в хэдер добавим навлинки чтобы прыгать по проекту через хэдер, а не через логику*/}\n                {/*<p2-main/>*/}\n                    {/* внутри p2-main отрисовываем Header и роуты */}\n                    {/*<Header/>*/}\n\n            </>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./n1-main/m1-ui/App\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}