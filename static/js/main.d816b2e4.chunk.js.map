{"version":3,"sources":["n2-features/f0-test/Examples/Examples.module.scss","n1-main/m1-ui/p1-header/Header.module.scss","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.scss","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","n2-features/f0-test/TestForReducer/TestForReducer.module.scss","reportWebVitals.ts","n1-main/m1-ui/p1-header/Header.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a2-register/Registration.tsx","n2-features/f1-auth/Profile.tsx","n2-features/f1-auth/Page404.tsx","n2-features/f1-auth/PasswordRecovery.tsx","n2-features/f1-auth/PasswordNew.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n2-features/f0-test/Examples/Examples.tsx","n1-main/m2-bll/testReducer.tsx","n2-features/f0-test/TestForReducer/TestForReducer.tsx","n1-main/m1-ui/p2-main/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","s","header","logo","links","item","to","Login","Registration","Profile","Page404","PasswordRecovery","PasswordNew","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","name","onChangeCallback","radio","Examples","text","setText","setChecked","setValue","arr","valueForSsSr","showAlert","alert","examples","column","inputContainer","testSpanError","blue","superButton","onClick","disabled","SuperEditableSpanContainer","undefined","radioContainer","initialState","testValue","TestForReducer","dispatch","useDispatch","reducerValue","useSelector","state","testReducer","testForReducer","newValue","Main","exact","path","render","from","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d816b2e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"examples\":\"Examples_examples__JFwFo\",\"column\":\"Examples_column__107su\",\"testSpanError\":\"Examples_testSpanError__2qXqO\",\"blue\":\"Examples_blue__308Br\",\"superButton\":\"Examples_superButton__mKBWf\",\"inputContainer\":\"Examples_inputContainer__tLGE5\",\"SuperEditableSpanContainer\":\"Examples_SuperEditableSpanContainer__3joY0\",\"radioContainer\":\"Examples_radioContainer__27FbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3WzfM\",\"links\":\"Header_links__T0bi1\",\"logo\":\"Header_logo__1rSd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1eFk0\",\"superInput\":\"SuperInputText_superInput__3ElrI\",\"errorInput\":\"SuperInputText_errorInput__2fdZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__28tTz\",\"default\":\"SuperButton_default__2wHvj\",\"red\":\"SuperButton_red__358cC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3tQnQ\",\"checkbox\":\"SuperCheckbox_checkbox__240O_\",\"spanClassName\":\"SuperCheckbox_spanClassName__1EQ_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__mzFZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__2M9k8\",\"label\":\"SuperRadio_label__2vyuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__bRdTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testForReducer\":\"TestForReducer_testForReducer__1od0B\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.logo}>BrightCards</div>\r\n            <div className={s.links}>\r\n                <NavLink className={s.item} to={'/login'}>Login</NavLink>\r\n                <NavLink className={s.item} to={'/registration'}>Registration</NavLink>\r\n                <NavLink className={s.item} to={'/profile'}>Profile</NavLink>\r\n                <NavLink className={s.item} to={'/404'}>404</NavLink>\r\n                <NavLink className={s.item} to={'/passwordrecovery'}>Recovery Password</NavLink>\r\n                <NavLink className={s.item} to={'/passwordnew'}>New Password</NavLink>\r\n                <NavLink className={s.item} to={'/tests'}>Tests</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>Login</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <div>Registration</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>Profile</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div>Page404</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const PasswordRecovery = () => {\r\n    return (\r\n        <div>PasswordRecovery</div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const PasswordNew = () => {\r\n    return (\r\n        <div>PasswordNew</div>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeChecked,\r\n    className, spanClassName,\r\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  }\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n  {\r\n    autoFocus, // игнорировать изменение этого пропса\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n    onEnter && onEnter() // оставлено на будущее, чтобы можно было возвращать событие по enter\r\n  }\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n    onBlur && onBlur(e)\r\n  }\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true) // включить editMode при двойном клике\r\n\r\n    onDoubleClick && onDoubleClick(e)\r\n  }\r\n\r\n  const spanClassName = `${s.editableSpan} ${className}`\r\n\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <SuperInputText\r\n            autoFocus // пропсу с булевым значением не обязательно указывать true\r\n            onBlur={onBlurCallback}\r\n            onEnter={onEnterCallback}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={onDoubleClickCallBack}\r\n            className={spanClassName}\r\n\r\n            {...restSpanProps}\r\n          >\r\n            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n            ✎ {children || restProps.value}\r\n                    </span>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: string[]\r\n  onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o, i) => (\r\n    <option className={s.option} key={'option-' + i} value={o}>{o}</option>\r\n  )) : []\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.scss'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => { // map options with key\r\n        return <label className={s.label} key={name + '-' + i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Examples.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../../n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\n\r\nexport const Examples = () => {\r\n    const [text, setText] = useState<string>('') // for SuperInputText\r\n    const [checked, setChecked] = useState<boolean>(false) // for SuperCheckbox\r\n    const [value, setValue] = useState<string>('') // for SuperEditableSpan\r\n    const arr = ['x', 'y', 'z'] // for SuperSelect & SuperRadio\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect & SuperRadio\r\n\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => { // for SuperButton\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.examples}>\r\n            <h1>This is examples of common components.</h1>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <h2>с1-SuperInputText:</h2>\r\n                <div className={s.inputContainer}>\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        spanClassName={s.testSpanError}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        className={s.blue} // проверьте, работает ли смешивание классов\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с2-SuperButton:</h2>\r\n                <SuperButton className={s.superButton}>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.superButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <SuperButton disabled className={s.superButton}>\r\n                    disabled\r\n                </SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с3-SuperCheckbox:</h2>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div>\r\n                <h2>с4-SuperEditableSpan:</h2>\r\n                <div className={s.SuperEditableSpanContainer}>\r\n                    <SuperEditableSpan\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с5-SuperSelect and SuperRadio:</h2>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={valueForSsSr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={s.radioContainer}>\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={valueForSsSr}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","const initialState: InitialStateType = {\r\n    testValue: ''\r\n}\r\n\r\nexport const testReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-TEST-VALUE':\r\n            return {...state, testValue: action.newValue}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTestValueAC = (newValue: string) =>\r\n    ({type: 'SET-TEST-VALUE', newValue} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    testValue: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setTestValueAC>","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setTestValueAC} from \"../../../n1-main/m2-bll/testReducer\";\r\nimport s from './TestForReducer.module.scss'\r\n\r\nexport const TestForReducer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let reducerValue = useSelector<AppStoreType, string>(state => state.testReducer.testValue)\r\n\r\n    return <div className={s.testForReducer}>\r\n        <div>Hi, I am test for reducer. I will set 'test value' to state and will show it at the input, if you click the\r\n            button.\r\n        </div>\r\n        <div>\r\n            <SuperInputText value={reducerValue}/>\r\n            <SuperButton onClick={() => {dispatch(setTestValueAC('test value'))}}>Click Me</SuperButton>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport {Header} from \"../p1-header/Header\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport {Registration} from \"../../../n2-features/f1-auth/a2-register/Registration\";\r\nimport {Profile} from \"../../../n2-features/f1-auth/Profile\";\r\nimport {Page404} from \"../../../n2-features/f1-auth/Page404\";\r\nimport {PasswordRecovery} from \"../../../n2-features/f1-auth/PasswordRecovery\";\r\nimport {PasswordNew} from \"../../../n2-features/f1-auth/PasswordNew\";\r\nimport {Examples} from \"../../../n2-features/f0-test/Examples/Examples\";\r\nimport {TestForReducer} from \"../../../n2-features/f0-test/TestForReducer/TestForReducer\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <TestForReducer />\r\n            <Switch>\r\n                <Route exact path={'/login'} render={() => <Login/>}/>\r\n                <Route exact path={'/registration'} render={() => <Registration/>}/>\r\n                <Route exact path={'/profile'} render={() => <Profile/>}/>\r\n                <Route exact path={'/404'} render={() => <Page404/>}/>\r\n                <Route exact path={'/passwordrecovery'} render={() => <PasswordRecovery/>}/>\r\n                <Route exact path={'/passwordnew'} render={() => <PasswordNew/>}/>\r\n                <Route exact path={'/tests'} render={() => <Examples/>}/>\r\n                <Redirect exact from={'/'} to={'/tests'}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport {Main} from \"./p2-main/Main\";\n\nexport const App = () => {\n    return (\n        <div className=\"App\">\n            <Main />\n        </div>\n    );\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {testReducer} from \"./testReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n    testReducer: testReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./n1-main/m1-ui/App\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./n1-main/m2-bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}