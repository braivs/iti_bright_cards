{"version":3,"sources":["n2-features/f1-auth/a4-passwordNew/PasswordNew.module.scss","n1-main/m1-ui/p1-header/Header.module.scss","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.module.scss","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss","n2-features/f1-auth/a1-login/Login.module.scss","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f1-auth/a2-register/Registration.module.scss","n2-features/f1-auth/a3-profile/profile.module.scss","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.scss","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","n2-features/f0-test/TestForReducer/TestForReducer.module.scss","n2-features/f0-test/Examples/Examples.module.scss","reportWebVitals.ts","n2-features/f1-auth/a1-login/AuthApi.ts","n2-features/f1-auth/a3-profile/profileReducer.ts","n2-features/f1-auth/a1-login/authReducer.ts","n1-main/m1-ui/p1-header/Header.tsx","n2-features/f1-auth/a2-register/RegistrationAPI.ts","n1-main/m2-bll/registrationReducer.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n2-features/f1-auth/a2-register/Registration.tsx","n2-features/f1-auth/a2-register/RegistrationContainer.tsx","n2-features/f1-auth/a3-profile/Profile.tsx","n2-features/f1-auth/Page404.tsx","n1-main/m2-bll/api/cards-api.ts","n1-main/m2-bll/recovery-reducer.ts","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.tsx","n2-features/f1-auth/a4-passwordNew/PasswordNew.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m2-bll/test-reducer.ts","n2-features/f0-test/TestForReducer/TestForReducer.tsx","n2-features/f0-test/Examples/Examples.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a1-login/LoginContainer.tsx","n1-main/m1-ui/p2-main/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","avatar","email","name","publicCardPacksCount","_id","setProfile","type","isLoggedIn","error","setIsLoggedId","value","setIsError","Header","dispatch","useDispatch","className","s","header","to","logo","links","item","onClick","res","statusText","catch","e","response","message","registrationAPI","password","isRegistered","registrationAC","setErrorMessageAC","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","currentTarget","key","SuperButton","red","finalClassName","button","default","Registration","props","setEmail","setPassword","repeatPassword","setRepeatPassword","register","useSelector","state","registration","style","form","testSpanError","superButton","RegistrationContainer","useState","a","errorMessage","registrationTC","Profile","useEffect","profile","auth","profileContainer","src","alt","Page404","cardsAPI","dataForPost","from","resetPasswordToken","forgot","info","errorText","setNew","forgotShowInfoAndErrorAC","infoText","setNewShowInfoAndErrorAC","PasswordRecovery","recoveryPassword","classColor","green","passwordRecovery","element","forgotPasswordTC","PasswordNew","newPassword","setNewPassword","newPassword2","setNewPassword2","matchStatus","setMatchStatus","token","useParams","passwordNew","oneSizeEl","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","onChangeCallback","radio","testValue","TestForReducer","reducerValue","testReducer","testForReducer","newValue","Examples","text","setText","setChecked","setValue","arr","valueForSsSr","showAlert","alert","examples","column","inputContainer","blue","disabled","SuperEditableSpanContainer","undefined","radioContainer","Login","border","rememberMe","setRememberMe","LoggedIn","LoginContainer","LoginTC","Main","exact","path","render","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,QAAU,6BAA6B,UAAY,+BAA+B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,mBCApQD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,KAAO,uB,mBCAvFD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,QAAU,kCAAkC,MAAQ,gCAAgC,MAAQ,gCAAgC,IAAM,gC,mBCAlND,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,WAAa,qC,mBCArHD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,OAAS,sBAAsB,KAAO,sB,mBCAnFD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,QAAU,6BAA6B,IAAM,2B,mBCApGD,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,SAAW,gCAAgC,cAAgB,uC,mBCAlHD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,8B,mBCA5DD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,QAAU,2B,mBCAjFD,EAAOC,QAAU,CAAC,OAAS,8B,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,4B,mBCA5DD,EAAOC,QAAU,CAAC,aAAe,0C,mBCAjCD,EAAOC,QAAU,CAAC,eAAiB,yC,4DCAnCD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,cAAgB,gCAAgC,KAAO,uBAAuB,YAAc,8BAA8B,eAAiB,iCAAiC,2BAA6B,6CAA6C,eAAiB,mC,4ECalVC,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,+DCNRQ,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,6BACTC,iBAAiB,IAIRC,EAAU,SACbC,GACF,OAAON,EAASO,KAAyB,cAAeD,IAFnDD,EAAU,WAKf,OAAOL,EAASO,KAAyB,aALpCF,EAAU,WAQf,OAAOL,EAASQ,OAAO,aCb3BC,EAAe,CACfC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,qBAAsB,EACtBC,IAAK,IA0BIC,EAAa,SAACT,GAEvB,MAAQ,CAACU,KAAM,sBAAuBN,OADmBJ,EAAlDI,OACuCC,MADWL,EAA1CK,MACsCC,KADIN,EAAnCM,KACqCC,qBADFP,EAA7BO,qBACqDC,IADxBR,EAAPQ,MC/BlDL,EAAe,CACfQ,YAAY,EACZC,MAAO,MAyBEC,EAAgB,SAACC,GAC1B,MAAQ,CAACJ,KAAM,yBAA0BI,UAGhCC,EAAa,SAACH,GACvB,MAAQ,CAACF,KAAM,qBAAsBE,U,OC/B5BI,EAAS,WAElB,IAAMC,EAAWC,cAKjB,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,cAAC,IAAD,CAASC,GAAI,WAAb,SAAyB,qBAAKH,UAAWC,IAAEG,KAAlB,2BACzB,sBAAKJ,UAAWC,IAAEI,MAAlB,UACI,cAAC,IAAD,CAASL,UAAWC,IAAEK,KAAMH,GAAI,SAAhC,mBACA,cAAC,IAAD,CAASH,UAAWC,IAAEK,KAAMH,GAAI,gBAAhC,0BACA,cAAC,IAAD,CAASH,UAAWC,IAAEK,KAAMH,GAAI,WAAhC,qBACA,cAAC,IAAD,CAASH,UAAWC,IAAEK,KAAMH,GAAI,oBAAhC,8BACA,cAAC,IAAD,CAASH,UAAWC,IAAEK,KAAMH,GAAI,SAAhC,mBACA,cAAC,IAAD,CAASH,UAAWC,IAAEK,KAAMH,GAAI,SAAUI,QAbvC,WACXT,GD0DsB,SAACA,GAC3BlB,IAAiBX,MAAK,SAAAuC,GACK,OAAnBA,EAAIC,YACJX,EAASJ,GAAc,OAG7BgB,OAAM,SAAAC,GACAA,EAAEC,SAAWd,EAASF,EAAWe,EAAEC,SAAS/B,KAAKY,QAC3CK,EAASF,EAAWe,EAAEE,QAAU,yCCtDlC,4B,uCCpBVtC,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,6BACTC,iBAAiB,IAaRmC,EAAkB,SACd5B,EAAe6B,GACxB,OAAOxC,EAASO,KAAT,gBAAoC,CAAEI,QAAO6B,cCd/C/B,EAAe,CACxBS,MAAO,KACPuB,cAAc,GAeLC,EAAiB,SAACD,GAAD,MAA4B,CAACzB,KAAM,oBAAqByB,iBACzEE,EAAoB,SAACzB,GAAD,MAA2B,CAACF,KAAM,oBAAqBE,U,kHCkCzE0B,EA1C2C,SAAC,GAUrD,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZ9B,EAKH,EALGA,MACAO,EAIH,EAJGA,UAAWwB,EAId,EAJcA,cAERC,EAEN,iBAcKC,EAAkB,UAAMzB,IAAER,MAAR,YAAiB+B,GAAgC,IACnEG,EAAmB,UAAM1B,IAAE2B,MAAR,YAAiBnC,EAAQQ,IAAE4B,WAAa5B,IAAE6B,WAA1C,YAAwD9B,GAEjF,OACI,qCACI,mCAEIoB,SApBa,SAACT,GACtBS,GACGA,EAAST,GAEZU,GAAgBA,EAAaV,EAAEoB,cAAcpC,QAiBrC2B,WAfe,SAACX,GACxBW,GAAcA,EAAWX,GAEzBY,GACa,UAAVZ,EAAEqB,KACFT,KAWKvB,UAAW2B,GAEPF,IAEPhC,GAAS,sBAAMO,UAAW0B,EAAjB,SAAsCjC,Q,uDC1B7CwC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKlC,EAGR,EAHQA,UACFyB,EAEN,iBACKU,EAAc,UAAMlC,IAAEmC,OAAR,YAAkBF,EAAMjC,IAAEiC,IAAMjC,IAAEoC,QAAlC,YAA6CrC,GAEjE,OACI,oCACIA,UAAWmC,GACPV,K,iBCHHa,EAAe,SAACC,GACzB,IACIrD,EAOAqD,EAPArD,MACAsD,EAMAD,EANAC,SACAzB,EAKAwB,EALAxB,SACA0B,EAIAF,EAJAE,YACAC,EAGAH,EAHAG,eACAC,EAEAJ,EAFAI,kBACAC,EACAL,EADAK,SAGEnD,EAAQoD,aAAyC,SAAAC,GAAK,OAAIA,EAAMC,aAAatD,SAEnF,OACI,mCACI,sBAAKO,UAAWgD,IAAMC,KAAtB,UAEI,kCACI,6CACA,cAAC,EAAD,CACItD,MAAOT,EACPmC,aAAcmB,EACdxC,UAAWC,IAAEiD,mBAIrB,kCACI,gDACA,cAAC,EAAD,CACI3D,KAAM,WACNI,MAAOoB,EACPM,aAAcoB,EACdzC,UAAWC,IAAEiD,mBAIrB,kCACI,uDACA,cAAC,EAAD,CACI3D,KAAM,WACNI,MAAO+C,EACPrB,aAAcsB,EACd3C,UAAWC,IAAEiD,mBAIV,OAAVzD,GAAkB,qBAAKO,UAAWgD,IAAMvD,MAAtB,SAA8BA,IAEjD,cAAC,EAAD,CAAac,QAASqC,EAAU5C,UAAWC,IAAEkD,YAA7C,gCC3DHC,EAAwB,WACjC,MAA0BC,mBAAS,IAAnC,mBAAOnE,EAAP,KAAcsD,EAAd,KACA,EAAgCa,mBAAS,IAAzC,mBAAOtC,EAAP,KAAiB0B,EAAjB,KACA,EAA4CY,mBAAS,IAArD,mBAAOX,EAAP,KAAuBC,EAAvB,KAEM7C,EAAWC,cAWjB,OAVqB8C,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,aAAa/B,gBAWzE,cAAC,IAAD,CAAUb,GAAI,WAIrB,8BACI,cAAC,EAAD,CACIjB,MAAOA,EACPsD,SAAUA,EACVzB,SAAUA,EACV2B,eAAgBA,EAChBD,YAAaA,EACbE,kBAAmBA,EACnBC,SArBK,WAET9C,EADAiB,IAAa2B,EJSK,SAACxD,EAAe6B,GAC1C,8CAAO,WAAOjB,GAAP,eAAAwD,EAAA,+EAEwBxC,EAA6B5B,EAAO6B,GAF5D,cAGCjB,EAASmB,GAAe,IAHzB,gDAMOsC,EAAe,KAAE3C,SAAW,KAAEA,SAAS/B,KAAKY,MAC7C,KAAEoB,QAAU,oCACjBf,EAASoB,EAAkBqC,IAC3BzD,EAASmB,GAAe,IATzB,yDAAP,sDITiBuC,CAAetE,EAAO6B,GAEtBG,EAAkB,4B,iBCX1BuC,EAAU,WACnB,IAAM3D,EAAWC,cACjB2D,qBAAU,WACN5D,GR4C0B,SAACA,GAC/BlB,IAAaX,MAAK,SAAAuC,GACa,OAAnBA,EAAIC,aACJX,EAASJ,GAAc,IACvBI,EAASR,EAAWkB,EAAI3B,WAGlC6B,OAAM,SAAAC,GACAA,EAAEC,UAAYd,EAASJ,GAAc,YQnD1C,IACH,MAMImD,aAA8C,SAAAC,GAAK,OAAIA,EAAMa,WAL7D1E,EADJ,EACIA,OAEAE,GAHJ,EAEID,MAFJ,EAGIC,MACAC,EAJJ,EAIIA,qBAJJ,EAKIC,IAKJ,OAHmBwD,aAAmC,SAAAC,GAAK,OAAIA,EAAMc,KAAKpE,cAOlE,qBAAKQ,UAAWC,IAAE4D,iBAAlB,SACI,sBAAK7D,UAAWC,IAAE0D,QAAlB,UACK1E,EAAS,qBAAK6E,IAAK7E,EAAQ8E,IAAI,KAAO,KACvC,+BAAO5E,IACP,2HAAwBC,UAP7B,cAAC,IAAD,CAAUe,GAAG,YCtBf6D,GAAU,WACnB,OACI,2C,oBCEFzF,GAAWC,IAAMC,OAAN,aAEbC,QAAS,uCANI,CACbC,iBAAiB,KASRsF,GAAW,SACH/E,GACb,IAAMgF,EAAc,CAChBhF,QACAiF,KAAM,gCACNtD,QAAQ,oGAEZ,OAAOtC,GAASO,KAAmB,cAAeoF,IAP7CD,GAAW,SASLlD,EAAkBqD,GAC7B,OAAO7F,GAASO,KAAmB,yBAA0B,CAACiC,WAAUqD,wBCnB1EpF,GAAe,CACjBqF,OAAQ,CACJC,KAAM,GACNC,UAAW,IAEfC,OAAQ,CACJF,KAAM,GACNC,UAAW,KAgBNE,GAA2B,SAACC,EAAkBH,GAAnB,MACnC,CAAChF,KAAM,kCAAmC8E,OAAQ,CAACK,WAAUH,eACrDI,GAA2B,SAACD,EAAkBH,GAAnB,MACnC,CAAChF,KAAM,mCAAoCiF,OAAQ,CAACE,WAAUH,eCrBtDK,GAAmB,WAC5B,MAA0BvB,mBAAiB,IAA3C,mBAAOnE,EAAP,KAAcsD,EAAd,KACM1C,EAAWC,cACb2E,EAAW7B,aAAkC,SAAAC,GAAK,OAAIA,EAAM+B,iBAAiBR,OAAOC,QACpFC,EAAY1B,aAAkC,SAAAC,GAAK,OAAIA,EAAM+B,iBAAiBR,OAAOE,aAErF9D,EAAa,GACbqE,EAAa,GACA,KAAbJ,GACAjE,EAAaiE,EAAW,gDACxBI,EAAa7E,KAAE8E,QAEftE,EAAa8D,EACbO,EAAa7E,KAAEiC,KAMnB,OACI,sBAAKlC,UAAWC,KAAE+E,iBAAlB,UACI,sEACA,mBAAGhF,UAAWC,KAAEgF,QAAhB,uEACA,qBAAKjF,UAAWC,KAAEgF,QAAlB,SACI,gDAEI,cAAC,EAAD,CAAgBtF,MAAOT,EAAOmC,aAAcmB,EAAUxC,UAAWC,KAAE2B,aAG3E,qBAAK5B,UAAWC,KAAEgF,QAAlB,SAA2B,cAAC,EAAD,CAAa1E,QAdzB,WACnBT,EDOwB,SAACZ,GAC7B,OAAO,SAACY,GACJmE,GAA0B/E,GACrBjB,MAAK,SAAAuC,GACFV,EAAS2E,GAAyBjE,EAAI3B,KAAKyF,KAAM,QAEpD5D,OAAM,SAAAF,GACHV,EAAS2E,GAAyB,GAAIjE,EAAII,SAAS/B,KAAKY,YCdvDyF,CAAiBhG,KAaK,uBAC3B,qBAAKc,UAAW8E,EAAhB,SAA6BrE,Q,oBC7B5B0E,GAAc,WACvB,MAAsC9B,mBAAiB,IAAvD,mBAAO+B,EAAP,KAAoBC,EAApB,KACA,EAAwChC,mBAAiB,IAAzD,mBAAOiC,EAAP,KAAqBC,EAArB,KACIb,EAAW7B,aAAkC,SAAAC,GAAK,OAAIA,EAAM+B,iBAAiBL,OAAOF,QACpFC,EAAY1B,aAAkC,SAAAC,GAAK,OAAIA,EAAM+B,iBAAiBL,OAAOD,aACnFzE,EAAWC,cACjB,EAAsCsD,mBAAS,IAA/C,mBAAOmC,EAAP,KAAoBC,EAApB,KAEOC,EAASC,cAATD,MAYHjF,EAAa,GACbqE,EAAa,GASjB,MARiB,KAAbJ,GACAjE,EAAaiE,EACbI,EAAa7E,KAAE8E,QAEftE,EAAa8D,EACbO,EAAa7E,KAAEiC,KAIf,sBAAKlC,UAAWC,KAAE2F,YAAlB,UACI,sEACA,mBAAG5F,UAAWC,KAAEgF,QAAhB,yHAEA,qBAAKjF,UAAWC,KAAEgF,QAAlB,SACI,wBAAOjF,UAAWC,KAAE4F,UAApB,UACI,gDACA,cAAC,EAAD,CAAgBlG,MAAOyF,EAAa/D,aAAcgE,EAAgB9F,KAAM,WACxDS,UAAWC,KAAE2B,aAGrC,qBAAK5B,UAAWC,KAAEgF,QAAlB,SACI,wBAAOjF,UAAWC,KAAE4F,UAApB,UACI,yDACA,cAAC,EAAD,CAAgBlG,MAAO2F,EAAcjE,aAAckE,EAAiBhG,KAAM,WAC1DS,UAAWC,KAAE2B,aAGrC,qBAAK5B,UAAWC,KAAEgF,QAAlB,SAA2B,cAAC,EAAD,CAAa1E,QAtCzB,WFuBK,IAACQ,EAAkBqD,EEtBvCgB,IAAgBE,EAChBG,EAAe,2BAEfA,EAAe,IACf3F,GFkBqBiB,EElBKqE,EFkBahB,EElBAsB,EFmBxC,SAAC5F,GACJmE,GAAwBlD,EAAUqD,GAC7BnG,MAAK,SAAAuC,GACFV,EAAS6E,GAAyBnE,EAAI3B,KAAKyF,KAAM,QAEpD5D,OAAM,SAAAF,GACHV,EAAS6E,GAAyB,GAAInE,EAAII,SAAS/B,KAAKY,gBEQKO,UAAWC,KAAEmC,OAAnD,+BAE3B,qBAAKpC,UAAWC,KAAEiC,IAAlB,SAAwBsD,IACxB,qBAAKxF,UAAW8E,EAAhB,SAA6BrE,Q,oGCnB1BqF,GA/ByC,SAAC,GASpD,EAPDvG,KAOE,IANF6B,EAMC,EANDA,SAAU2E,EAMT,EANSA,gBACV/F,EAKC,EALDA,UACAgG,GAIC,EALUxE,cAKV,EAJDwE,UAEGvE,EAEF,kBAMGE,EAAmB,UAAM1B,KAAEgG,SAAR,YAAoBjG,GAAwB,IAErE,OACE,wBAAOA,UAAWC,KAAEiG,MAApB,UACE,mCACE3G,KAAM,WACN6B,SAXmB,SAACT,GACxBS,GAAYA,EAAST,GACrBoF,GAAmBA,EAAgBpF,EAAEoB,cAAcoE,UAU/CnG,UAAW2B,GAEPF,IAELuE,GAAY,sBAAMhG,UAAWC,KAAEuB,cAAnB,SAAmCwE,Q,gHCyCvCI,GA1D4C,SAAC,GASvD,EAPDC,UAOE,IANFC,EAMC,EANDA,OACA/E,EAKC,EALDA,QACAgF,EAIC,EAJDA,UAEG9E,EAEF,kBACH,EAAgC4B,oBAAkB,GAAlD,mBAAOmD,EAAP,KAAiBC,EAAjB,KACA,EAA+DF,GAAa,GAArEP,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,cAAe1G,EAAhC,EAAgCA,UAAc2G,EAA9C,kBAkBMnF,EAAa,UAAMvB,KAAE2G,aAAR,YAAwB5G,GAE3C,OACE,mCACGwG,EAEG,cAAC,EAAD,aACEH,WAAS,EACTC,OAnBa,SAAC3F,GACtB8F,GAAY,GAEZH,GAAUA,EAAO3F,IAiBTY,QAzBc,WACtBkF,GAAY,GAEZlF,GAAWA,MAwBCE,IAGN,+CACEiF,cArBoB,SAAC/F,GAC7B8F,GAAY,GAEZC,GAAiBA,EAAc/F,IAmBvBX,UAAWwB,GAEPmF,GAJN,wBAOKX,GAAYvE,EAAU9B,a,+DCpCtBkH,GAxBqC,SAAC,GAM/C,IAJFC,EAIC,EAJDA,QACA1F,EAGC,EAHDA,SAAU2F,EAGT,EAHSA,eACPtF,EAEF,kBACGuF,EAAuBF,EAAUA,EAAQG,KAAI,SAACC,EAAGC,GAAJ,OACjD,wBAAQnH,UAAWC,KAAEmH,OAA4BzH,MAAOuH,EAAxD,SAA4DA,GAA1B,UAAYC,MAC3C,GAQL,OACE,gDAAQnH,UAAWC,KAAEoH,OAAQjG,SAPN,SAACT,GACxBS,GAAYA,EAAST,GACrBoG,GAAkBA,EAAepG,EAAEoB,cAAcpC,SAKY8B,GAA7D,aACGuF,M,qFCeQM,GAlCmC,SAAC,GAO9C,EALG/H,KAKF,IALQJ,EAKT,EALSA,KACN2H,EAIH,EAJGA,QAASnH,EAIZ,EAJYA,MACTyB,EAGH,EAHGA,SAAU2F,EAGb,EAHaA,eAIRQ,GADL,kBACwB,SAAC5G,GACxBS,GAAYA,EAAST,GACrBoG,GAAkBA,EAAepG,EAAEoB,cAAcpC,SAG7CqH,EAAuBF,EAAUA,EAAQG,KAAI,SAACC,EAAGC,GACnD,OAAO,wBAAOnH,UAAWC,KAAEiG,MAApB,UACH,uBACIlG,UAAWC,KAAEuH,MACbjI,KAAM,QACNJ,KAAMA,EACNgH,QAASe,IAAMvH,EACfA,MAAOuH,EACP9F,SAAUmG,IAEbL,IATkC/H,EAAO,IAAMgI,MAWnD,GAEL,OACI,mCACKH,KCvCPhI,GAAiC,CACnCyI,UAAW,I,oBCOFC,GAAiB,WAE1B,IAAM5H,EAAWC,cACb4H,EAAe9E,aAAkC,SAAAC,GAAK,OAAIA,EAAM8E,YAAYH,aAEhF,OAAO,sBAAKzH,UAAWC,KAAE4H,eAAlB,UACH,sJAGA,gCACI,cAAC,EAAD,CAAgBlI,MAAOgI,IACvB,cAAC,EAAD,CAAapH,QAAS,WAAOT,EDLpC,CAACP,KAAM,iBAAkBuI,SCKmC,gBAArD,6BCTCC,GAAW,WACpB,MAAwB1E,mBAAiB,IAAzC,mBAAO2E,EAAP,KAAaC,EAAb,KACA,EAA8B5E,oBAAkB,GAAhD,mBAAO8C,EAAP,KAAgB+B,EAAhB,KACA,EAA0B7E,mBAAiB,IAA3C,mBAAO1D,EAAP,KAAcwI,EAAd,KACMC,EAAM,CAAC,IAAK,IAAK,KACvB,EAAuC/E,mBAAS+E,EAAI,IAApD,mBAAOC,EAAP,KAAqBtB,EAArB,KAEMtH,EAAQuI,EAAO,GAAK,QAEpBM,EAAY,WACV7I,EACA8I,MAAM,gFAENA,MAAMP,IAOd,OACI,sBAAKhI,UAAWC,IAAEuI,SAAlB,UACI,cAAC,GAAD,IACA,wEACA,uBACA,sBAAKxI,UAAWC,IAAEwI,OAAlB,UACI,yDACA,qBAAKzI,UAAWC,IAAEyI,eAAlB,SACI,cAAC,EAAD,CACI/I,MAAOqI,EACP3G,aAAc4G,EACd1G,QAAS+G,EACT7I,MAAOA,EACP+B,cAAevB,IAAEiD,kBAGzB,8BACI,cAAC,EAAD,CACIlD,UAAWC,IAAE0I,YAIzB,uBAEA,sBAAK3I,UAAWC,IAAEwI,OAAlB,UACI,sDACA,cAAC,EAAD,CAAazI,UAAWC,IAAEkD,YAA1B,qBAGA,cAAC,EAAD,CACIjB,KAAG,EACH3B,QAAS+H,EACTtI,UAAWC,IAAEkD,YAHjB,qBAOA,cAAC,EAAD,CAAayF,UAAQ,EAAC5I,UAAWC,IAAEkD,YAAnC,yBAIJ,uBAEA,sBAAKnD,UAAWC,IAAEwI,OAAlB,UACI,wDACA,cAAC,GAAD,CACItC,QAASA,EACTJ,gBAAiBmC,EAFrB,wBAQA,cAAC,GAAD,CAAe/B,QAASA,EAAS/E,SAtDxB,SAACT,GAAD,OAAsCuH,EAAWvH,EAAEoB,cAAcoE,eAwD9E,uBAEA,gCACI,4DACA,qBAAKnG,UAAWC,IAAE4I,2BAAlB,SACI,cAAC,GAAD,CACIlJ,MAAOA,EACP0B,aAAc8G,EACd5B,UAAW,CAACP,SAAUrG,OAAQmJ,EAAY,wBAKtD,uBAEA,sBAAK9I,UAAWC,IAAEwI,OAAlB,UACI,qEACA,cAAC,GAAD,CACI3B,QAASsB,EACTzI,MAAO0I,EACPtB,eAAgBA,IAEpB,qBAAK/G,UAAWC,IAAE8I,eAAlB,SACI,cAAC,GAAD,CACIjC,QAASsB,EACTzI,MAAO0I,EACPtB,eAAgBA,a,oBCzF3BiC,GAAkC,SAACzG,GAC5C,IAUM9C,EAAQoD,aAAyC,SAAAC,GAAK,OAAIA,EAAMc,KAAKnE,SAC3E,OACI,qBAAKO,UAAWC,KAAEgD,KAAlB,SACI,+BACI,sBAAKjD,UAAWC,KAAEgJ,OAAlB,UACI,qBAAKjJ,UAAWC,KAAE+H,KAAlB,qBACA,8BAAK,cAAC,EAAD,CAAgBrI,MAAO4C,EAAMrD,MAAOkC,SAhBrC,SAACT,GACjB4B,EAAMC,SAAS7B,EAAEoB,cAAcpC,YAgBnB,8BAAK,cAAC,EAAD,CAAgBJ,KAAM,WAAYI,MAAO4C,EAAMxB,SAAUK,SAdvD,SAACT,GACpB4B,EAAME,YAAY9B,EAAEoB,cAAcpC,YAcrBF,EAAQ,+BAAOA,IAAgB,KAChC,8BAAK,cAAC,GAAD,CAAe0G,QAAS5D,EAAM2G,WAAY9H,SAbxC,SAACT,GACpB4B,EAAM4G,cAAcxI,EAAEoB,cAAcoE,UAYiDnG,UAAWC,KAAEgG,SAAUD,SAAU,kBAC1G,8BAAK,cAAC,EAAD,CAAaA,SAAU,QAASzF,QAASgC,EAAM6G,aACpD,cAAC,IAAD,CAASjJ,GAAI,oBAAb,qCClCPkJ,GAA2B,WAEpC,MAA0BhG,mBAAiB,IAA3C,mBAAOnE,EAAP,KAAcsD,EAAd,KACA,EAAgCa,mBAAiB,IAAjD,mBAAOtC,EAAP,KAAiB0B,EAAjB,KACA,EAAoCY,oBAAkB,GAAtD,mBAAO6F,EAAP,KAAmBC,EAAnB,KACMrJ,EAAWC,cASjB,OARmB8C,aAAmC,SAAAC,GAAK,OAAIA,EAAMc,KAAKpE,cAS/D,cAAC,IAAD,CAAUW,GAAG,aAEjB,cAAC,GAAD,CAAOjB,MAAOA,EAAO6B,SAAUA,EAAUmI,WAAYA,EAC9C1G,SAAUA,EAAUC,YAAaA,EAAa0G,cAAeA,EAAeC,SAV7E,WACbtJ,EtBuBmB,SAACZ,EAAe6B,EAAkBmI,GAAlC,OAA0D,SAACpJ,GAC9ElB,EAAc,CAACM,QAAO6B,WAAUmI,eAAajL,MAAK,SAAAuC,GACnB,OAAnBA,EAAIC,aACJX,EAASJ,GAAc,IACvBI,EAASR,EAAWkB,EAAI3B,WAGlC6B,OAAM,SAAAC,GACAA,EAAEC,SAAWd,EAASF,EAAWe,EAAEC,SAAS/B,KAAKY,QAC3CK,EAASF,EAAWe,EAAEE,QAAU,sCsBhCrCyI,CAAQpK,EAAO6B,EAAUmI,IAClC1G,EAAS,IACTC,EAAY,QCRH8G,GAAO,WAChB,OACI,gCACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,SAAUC,OAAQ,kBAAM,cAAC,GAAD,OAG3C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,gBAAiBC,OAAQ,kBAAM,cAAC,EAAD,OAClD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,WAAYC,OAAQ,kBAAM,cAAC,EAAD,OAC7C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,OAAQC,OAAQ,kBAAM,cAAC,GAAD,OACzC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,oBAAqBC,OAAQ,kBAAM,cAAC,GAAD,OACtD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,eAAgBC,OAAQ,kBAAM,cAAC,GAAD,OACjD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM,SAAUC,OAAQ,kBAAM,cAAC,GAAD,OAC3C,cAAC,IAAD,CAAUF,OAAK,EAACrF,KAAM,IAAKhE,GAAI,WAC/B,cAAC,IAAD,CAAUgE,KAAM,IAAKhE,GAAI,gBCvB5BwJ,GAAM,WACf,OACI,qBAAK3J,UAAU,MAAf,SACI,cAAC,GAAD,O,kBCCN4J,GAAWC,aAAgB,CAC7BjC,YPLuB,WAA+C,IAA9C9E,EAA6C,uDAArC9D,GAAc8K,EAAuB,uCACrE,MACS,mBADDA,EAAOvK,KAEA,2BAAIuD,GAAX,IAAkB2E,UAAWqC,EAAOhC,WAE7BhF,GOCfC,atBD+B,WAAiE,IAAhED,EAA+D,uDAAvD9D,EAAc8K,EAAyC,uCAC/F,OAAQA,EAAOvK,MACX,IAAM,oBACF,OAAO,2BAAIuD,GAAX,IAAkB9B,aAAc8I,EAAO9I,eAE3C,IAAM,oBACF,OAAO,2BAAI8B,GAAX,IAAkBrD,MAAOqK,EAAOrK,QAEpC,QACI,OAAOqD,IsBPf+B,iBdI2B,WAAiE,IAAhE/B,EAA+D,uDAAvD9D,GAAc8K,EAAyC,uCAC3F,OAAQA,EAAOvK,MACX,IAAK,kCACD,OAAO,2BAAIuD,GAAX,IAAkBuB,OAAQ,CAACC,KAAMwF,EAAOzF,OAAOK,SAAUH,UAAWuF,EAAOzF,OAAOE,aACtF,IAAK,mCACD,OAAO,2BAAIzB,GAAX,IAAkB0B,OAAQ,CAACF,KAAMwF,EAAOtF,OAAOE,SAAUH,UAAWuF,EAAOtF,OAAOD,aACtF,QACI,OAAOzB,IcVfc,KzBKuB,WAAoF,IAAnFd,EAAkF,uDAAxD9D,EAAc8K,EAA0C,uCAC1G,OAAQA,EAAOvK,MACX,IAAK,yBACD,OAAO,2BAAIuD,GAAX,IAAkBtD,WAAYsK,EAAOnK,QACzC,IAAK,qBACD,OAAO,2BAAImD,GAAX,IAAkBrD,MAAOqK,EAAOrK,QACpC,QACI,OAAO,eAAIqD,KyBXnBa,Q1BO0B,WAAwF,IAAvFb,EAAsF,uDAA1D9D,EAAc8K,EAA4C,uCACjH,MACS,wBADDA,EAAOvK,KAEA,2BACAuD,GADP,IACc7D,OAAQ6K,EAAO7K,OAAQC,MAAO4K,EAAO5K,MAAOC,KAAM2K,EAAO3K,KACnEC,qBAAsB0K,EAAO1K,qBAAsBC,IAAKyK,EAAOzK,MAG5D,eAAIyD,M0BXViH,GAAQC,aAAYJ,GAAUK,aAAgBC,OAK3DC,OAAOJ,MAAQA,GCZfK,IAASV,OACL,cAAC,IAAMW,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,GAAD,UAIZO,SAASC,eAAe,SAS5BzM,M","file":"static/js/main.bee8f212.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordNew\":\"PasswordNew_passwordNew__3U7hm\",\"button\":\"PasswordNew_button__2jsGp\",\"element\":\"PasswordNew_element__hqSEL\",\"oneSizeEl\":\"PasswordNew_oneSizeEl__1hdAq\",\"input\":\"PasswordNew_input__2guLv\",\"green\":\"PasswordNew_green__3ioqn\",\"red\":\"PasswordNew_red__2g0BO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1u2ma\",\"links\":\"Header_links__2Dvg6\",\"logo\":\"Header_logo__3KjhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecovery\":\"PasswordRecovery_passwordRecovery__2lPVB\",\"element\":\"PasswordRecovery_element__3j8nH\",\"input\":\"PasswordRecovery_input__2TtCs\",\"green\":\"PasswordRecovery_green__1htuQ\",\"red\":\"PasswordRecovery_red__1ZGOT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__SFqUa\",\"superInput\":\"SuperInputText_superInput__1T9tG\",\"errorInput\":\"SuperInputText_errorInput__VTwkq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__1HqbJ\",\"border\":\"Login_border__M095U\",\"text\":\"Login_text__FEXtM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__2rKOy\",\"default\":\"SuperButton_default__1ooIF\",\"red\":\"SuperButton_red__tc9nL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__L3pKz\",\"checkbox\":\"SuperCheckbox_checkbox__2geWl\",\"spanClassName\":\"SuperCheckbox_spanClassName__3KYDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Registration_form__2AadA\",\"error\":\"Registration_error__1Dv7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__2-Jak\",\"profile\":\"profile_profile__3RVq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__f51oV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__3b3OY\",\"label\":\"SuperRadio_label__2mS8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__24nPO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testForReducer\":\"TestForReducer_testForReducer__3oQMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"examples\":\"Examples_examples__3jVb8\",\"column\":\"Examples_column__2J-tp\",\"testSpanError\":\"Examples_testSpanError__3omRZ\",\"blue\":\"Examples_blue__3PP9W\",\"superButton\":\"Examples_superButton__1UrOv\",\"inputContainer\":\"Examples_inputContainer__tLjDk\",\"SuperEditableSpanContainer\":\"Examples_SuperEditableSpanContainer__unBHP\",\"radioContainer\":\"Examples_radioContainer__3uBYb\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios, {AxiosResponse} from 'axios'\r\nimport {InitialProfileType, SetProfileType} from \"../a3-profile/profileReducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: AuthLoginType) {\r\n        return instance.post<InitialProfileType>('/auth/login', data);\r\n    },\r\n    me() {\r\n        return instance.post<InitialProfileType>('/auth/me')\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/me')\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    export const authAPI = {\r\n        login(data: AuthLoginType) {\r\n            return instance.post<AuthLoginType, AxiosResponse<ResponseType<{ userId: number }>>>('auth/login', data)\r\n\r\n\r\n        },\r\n        */\r\n\r\nexport type AuthLoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../a1-login/AuthApi\";\r\n\r\n\r\nlet initialState = {\r\n    avatar: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    _id: '',\r\n}\r\n\r\nexport type InitialProfileType = {\r\n    avatar: string\r\n    email: string\r\n    name: string\r\n    publicCardPacksCount: number\r\n    _id: string\r\n}\r\n\r\nexport const profileReducer = (state: InitialProfileType = initialState, action: ActionsType): InitialProfileType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-PROFILE':\r\n            return {\r\n                ...state, avatar: action.avatar, email: action.email, name: action.name,\r\n                publicCardPacksCount: action.publicCardPacksCount, _id: action._id\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n//ActionsCreators\r\n\r\nexport const setProfile = (data: InitialProfileType) => {\r\n    const {avatar, email, name, publicCardPacksCount, _id} = data\r\n    return ({type: 'profile/SET-PROFILE', avatar, email, name, publicCardPacksCount, _id} as const)\r\n}\r\n\r\n\r\n//Thunks\r\n\r\n\r\n//Types\r\n\r\nexport type SetProfileType = ReturnType<typeof setProfile>\r\n\r\n\r\ntype ActionsType = SetProfileType","import {Dispatch} from 'redux'\r\nimport {authAPI, AuthLoginType} from \"./AuthApi\";\r\nimport {setProfile, SetProfileType} from \"../a3-profile/profileReducer\";\r\n\r\n\r\nlet initialState = {\r\n    isLoggedIn: false,\r\n    error: null\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n}\r\n\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'login/SET-IS-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return {...state}\r\n    }\r\n\r\n}\r\n\r\n\r\n//ActionsCreators\r\n\r\nexport const setIsLoggedId = (value: boolean) => {\r\n    return ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n}\r\n\r\nexport const setIsError = (error: string) => {\r\n    return ({type: 'login/SET-IS-ERROR', error} as const)\r\n}\r\n\r\n//Thunks\r\nexport const LoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType | SetProfileType>) => {\r\n    authAPI.login({email, password, rememberMe}).then(res => {\r\n            if (res.statusText === 'OK') {\r\n                dispatch(setIsLoggedId(true))\r\n                dispatch(setProfile(res.data))\r\n            }\r\n        }\r\n    ).catch(e => {\r\n            e.response ? dispatch(setIsError(e.response.data.error))\r\n                : dispatch(setIsError(e.message + ', more details in the console'));\r\n        }\r\n    )\r\n}\r\n\r\nexport const InitializeTC = () => (dispatch: Dispatch) => {\r\n    authAPI.me().then(res => {\r\n            if (res.statusText === 'OK') {\r\n                dispatch(setIsLoggedId(true))\r\n                dispatch(setProfile(res.data))\r\n            }\r\n        }\r\n    ).catch(e => {\r\n            e.response && dispatch(setIsLoggedId(false))\r\n\r\n        }\r\n    )\r\n}\r\nexport const LogoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI.logout().then(res => {\r\n        if (res.statusText === 'OK') {\r\n            dispatch(setIsLoggedId(false))\r\n        }\r\n        }\r\n    ).catch(e => {\r\n            e.response ? dispatch(setIsError(e.response.data.error))\r\n                : dispatch(setIsError(e.message + ', more details in the console'));\r\n        }\r\n    )\r\n}\r\n\r\n\r\n//Types\r\n\r\ntype SetIsLoggedIdType = ReturnType<typeof setIsLoggedId>\r\ntype SetIsErrorType = ReturnType<typeof setIsError>\r\n\r\ntype ActionsType = SetIsLoggedIdType | SetIsErrorType","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {LogoutTC} from \"../../../n2-features/f1-auth/a1-login/authReducer\";\r\n\r\nexport const Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const logout = () => {\r\n        dispatch(LogoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={'/profile'}><div className={s.logo}>BrightCards</div></NavLink>\r\n            <div className={s.links}>\r\n                <NavLink className={s.item} to={'/login'}>Login</NavLink>\r\n                <NavLink className={s.item} to={'/registration'}>Registration</NavLink>\r\n                <NavLink className={s.item} to={'/profile'}>Profile</NavLink>\r\n                <NavLink className={s.item} to={'/passwordrecovery'}>PasswordRecovery</NavLink>\r\n                <NavLink className={s.item} to={'/tests'}>Tests</NavLink>\r\n                <NavLink className={s.item} to={'/login'} onClick={logout}>Log out</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n/*type ResponseType = {\r\n    info: string\r\n    response: {\r\n        data: {\r\n            email: string\r\n            password: string\r\n        }\r\n    }\r\n}*/\r\n\r\nexport const registrationAPI = {\r\n    registration(email: string, password: string ){\r\n        return instance.post<any>(`auth/register`, { email, password} )\r\n    }\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"../../n2-features/f1-auth/a2-register/RegistrationAPI\";\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const initialState = {\r\n    error: null as null | string,\r\n    isRegistered: false\r\n}\r\nexport const registrationReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case  'REGISTRATION-USER':\r\n            return {...state, isRegistered: action.isRegistered}\r\n\r\n        case  'SET-ERROR-MESSAGE':\r\n            return {...state, error: action.error}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const registrationAC = (isRegistered: boolean) => ({type: 'REGISTRATION-USER', isRegistered} as const)\r\nexport const setErrorMessageAC = (error: string | null) => ({type: 'SET-ERROR-MESSAGE', error} as const)\r\n\r\nexport const registrationTC = (email: string, password: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            const response = await registrationAPI.registration(email, password)\r\n            dispatch(registrationAC(true))\r\n\r\n        } catch (e: any) {\r\n            const errorMessage = e.response ? e.response.data.error :\r\n                (e.message + ', more details in the the console')\r\n            dispatch(setErrorMessageAC(errorMessage))\r\n            dispatch(registrationAC(false))\r\n        }\r\n    }\r\n}\r\nexport type RegistrationType = ReturnType<typeof registrationAC>\r\nexport type SetErrorMessageType = ReturnType<typeof setErrorMessageAC>\r\n\r\ntype ActionType = RegistrationType | SetErrorMessageType","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                // type={'password'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from '../../../n1-main/m2-bll/store'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"../../f0-test/Examples/Examples.module.scss\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport style from './Registration.module.scss'\r\n\r\n\r\ntype PropsType = {\r\n    email: string\r\n    setEmail: (email: string) => void\r\n    password: string\r\n    setPassword: (password: string) => void\r\n    repeatPassword: string\r\n    setRepeatPassword: (repeatPassword: string) => void\r\n    register: () => void\r\n}\r\nexport const Registration = (props: PropsType) => {\r\n    const {\r\n        email,\r\n        setEmail,\r\n        password,\r\n        setPassword,\r\n        repeatPassword,\r\n        setRepeatPassword,\r\n        register\r\n    } = props\r\n\r\n    const error = useSelector<AppStoreType, null | string>(state => state.registration.error)\r\n\r\n    return (\r\n        <>\r\n            <div className={style.form}>\r\n\r\n                <label>\r\n                    <div>Your email</div>\r\n                    <SuperInputText\r\n                        value={email}\r\n                        onChangeText={setEmail}\r\n                        className={s.testSpanError}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <div>Your password</div>\r\n                    <SuperInputText\r\n                        type={'password'}\r\n                        value={password}\r\n                        onChangeText={setPassword}\r\n                        className={s.testSpanError}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <div>Repeat your password</div>\r\n                    <SuperInputText\r\n                        type={'password'}\r\n                        value={repeatPassword}\r\n                        onChangeText={setRepeatPassword}\r\n                        className={s.testSpanError}\r\n                    />\r\n\r\n                </label>\r\n                {error !== null && <div className={style.error}>{error}</div>}\r\n\r\n                <SuperButton onClick={register} className={s.superButton}>\r\n                    registration\r\n                </SuperButton>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {registrationTC, setErrorMessageAC} from \"../../../n1-main/m2-bll/registrationReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Registration} from \"./Registration\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const RegistrationContainer = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.registration.isRegistered)\r\n\r\n    const register = () => {\r\n        if (password === repeatPassword) {\r\n            dispatch(registrationTC(email, password))\r\n        } else {\r\n            dispatch(setErrorMessageAC('password mismatch'))\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Registration\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                repeatPassword={repeatPassword}\r\n                setPassword={setPassword}\r\n                setRepeatPassword={setRepeatPassword}\r\n                register={register}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {InitialProfileType, SetProfileType} from \"./profileReducer\";\r\nimport s from './profile.module.scss'\r\nimport {InitializeTC} from \"../a1-login/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(InitializeTC())\r\n    }, [])\r\n    const {\r\n        avatar,\r\n        email,\r\n        name,\r\n        publicCardPacksCount,\r\n        _id\r\n    } = useSelector<AppStoreType, InitialProfileType>(state => state.profile)\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to='/login' />\r\n    }\r\n    return (\r\n            <div className={s.profileContainer}>\r\n                <div className={s.profile}>\r\n                    {avatar ? <img src={avatar} alt=\"\"/> : null}\r\n                    <span>{name}</span>\r\n                    <span>Количество карт: {publicCardPacksCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div>Page404</div>\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    ...settings\r\n})\r\n\r\nexport const cardsAPI = {\r\n    recoveryPassword(email: string) {\r\n        const dataForPost = {\r\n            email,\r\n            from: \"Briws <brightwiths@gmail.com>\",\r\n            message: `<div>password recovery link:<a href='http://localhost:3000/#/passwordnew/$token$'>link</a></div>`\r\n        }\r\n        return instance.post<ResponseType>('auth/forgot', dataForPost)\r\n    },\r\n    changePassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<ResponseType>('/auth/set-new-password', {password, resetPasswordToken})\r\n    }\r\n}\r\n\r\ntype ResponseType = {\r\n    info: string\r\n    response: {\r\n        data: {\r\n            error: string\r\n        }\r\n    }\r\n}\r\n","import {cardsAPI} from \"./api/cards-api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState = {\r\n    forgot: {\r\n        info: '',\r\n        errorText: ''\r\n    },\r\n    setNew: {\r\n        info: '',\r\n        errorText: ''\r\n    }\r\n\r\n}\r\n\r\nexport const recoveryReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"FORGOT-PASS/SHOW-INFO-AND-ERROR\":\r\n            return {...state, forgot: {info: action.forgot.infoText, errorText: action.forgot.errorText}}\r\n        case \"RESTORE-PASS/SHOW-INFO-AND-ERROR\":\r\n            return {...state, setNew: {info: action.setNew.infoText, errorText: action.setNew.errorText}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const forgotShowInfoAndErrorAC = (infoText: string, errorText: string) =>\r\n    ({type: 'FORGOT-PASS/SHOW-INFO-AND-ERROR', forgot: {infoText, errorText}} as const)\r\nexport const setNewShowInfoAndErrorAC = (infoText: string, errorText: string) =>\r\n    ({type: 'RESTORE-PASS/SHOW-INFO-AND-ERROR', setNew: {infoText, errorText}} as const)\r\n\r\nexport const forgotPasswordTC = (email: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        cardsAPI.recoveryPassword(email)\r\n            .then(res => {\r\n                dispatch(forgotShowInfoAndErrorAC(res.data.info, ''))\r\n            })\r\n            .catch(res => {\r\n                dispatch(forgotShowInfoAndErrorAC('', res.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        cardsAPI.changePassword(password, resetPasswordToken)\r\n            .then(res => {\r\n                dispatch(setNewShowInfoAndErrorAC(res.data.info, ''))\r\n            })\r\n            .catch(res => {\r\n                dispatch(setNewShowInfoAndErrorAC('', res.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    forgot: {\r\n        info: string\r\n        errorText: string\r\n    }\r\n    setNew: {\r\n        info: string\r\n        errorText: string\r\n    }\r\n\r\n}\r\ntype ActionType = ReturnType<typeof forgotShowInfoAndErrorAC> | ReturnType<typeof setNewShowInfoAndErrorAC>\r\n","import React, {useState} from 'react';\r\nimport s from './PasswordRecovery.module.scss'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"../../../n1-main/m2-bll/recovery-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    let infoText = useSelector<AppStoreType, string>(state => state.recoveryPassword.forgot.info)\r\n    let errorText = useSelector<AppStoreType, string>(state => state.recoveryPassword.forgot.errorText)\r\n\r\n    let statusText = ''\r\n    let classColor = ''\r\n    if (infoText !== '') {\r\n        statusText = infoText + ' You need to click recover link in you email.'\r\n        classColor = s.green\r\n    } else {\r\n        statusText = errorText\r\n        classColor = s.red\r\n    }\r\n    const onClickHandler = () => {\r\n        dispatch(forgotPasswordTC(email))\r\n    }\r\n\r\n    return (\r\n        <div className={s.passwordRecovery}>\r\n            <h1>This page will recover you password.</h1>\r\n            <p className={s.element}>Please enter you email to input bellow and click recover.</p>\r\n            <div className={s.element}>\r\n                <label>\r\n                    Your email:\r\n                    <SuperInputText value={email} onChangeText={setEmail} className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}><SuperButton onClick={onClickHandler} >Recover</SuperButton></div>\r\n            <div className={classColor}>{statusText}</div>\r\n        </div>\r\n\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport s from './PasswordNew.module.scss'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewPasswordTC} from \"../../../n1-main/m2-bll/recovery-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const PasswordNew = () => {\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const [newPassword2, setNewPassword2] = useState<string>('')\r\n    let infoText = useSelector<AppStoreType, string>(state => state.recoveryPassword.setNew.info)\r\n    let errorText = useSelector<AppStoreType, string>(state => state.recoveryPassword.setNew.errorText)\r\n    const dispatch = useDispatch()\r\n    const [matchStatus, setMatchStatus] = useState('')\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n\r\n    const onClickHandler = () => {\r\n        if (newPassword !== newPassword2) {\r\n            setMatchStatus('passwords do not match')\r\n        } else {\r\n            setMatchStatus('')\r\n            dispatch(setNewPasswordTC(newPassword, token))\r\n        }\r\n    }\r\n\r\n    let statusText = ''\r\n    let classColor = ''\r\n    if (infoText !== '') {\r\n        statusText = infoText\r\n        classColor = s.green\r\n    } else {\r\n        statusText = errorText\r\n        classColor = s.red\r\n    }\r\n\r\n    return (\r\n        <div className={s.passwordNew}>\r\n            <h1>This page for changing you password.</h1>\r\n            <p className={s.element}>It will take token from address link and new password from inputs and then new\r\n                password will be set to you.</p>\r\n            <div className={s.element}>\r\n                <label className={s.oneSizeEl}>\r\n                    <div>New password:</div>\r\n                    <SuperInputText value={newPassword} onChangeText={setNewPassword} type={'password'}\r\n                                    className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}>\r\n                <label className={s.oneSizeEl}>\r\n                    <div>Password confirmation:</div>\r\n                    <SuperInputText value={newPassword2} onChangeText={setNewPassword2} type={'password'}\r\n                                    className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}><SuperButton onClick={onClickHandler} className={s.button}>Change\r\n                password</SuperButton></div>\r\n            <div className={s.red}>{matchStatus}</div>\r\n            <div className={classColor}>{statusText}</div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeChecked,\r\n    className, spanClassName,\r\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  }\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n  {\r\n    autoFocus, // игнорировать изменение этого пропса\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n    onEnter && onEnter() // оставлено на будущее, чтобы можно было возвращать событие по enter\r\n  }\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n    onBlur && onBlur(e)\r\n  }\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true) // включить editMode при двойном клике\r\n\r\n    onDoubleClick && onDoubleClick(e)\r\n  }\r\n\r\n  const spanClassName = `${s.editableSpan} ${className}`\r\n\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <SuperInputText\r\n            autoFocus // пропсу с булевым значением не обязательно указывать true\r\n            onBlur={onBlurCallback}\r\n            onEnter={onEnterCallback}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={onDoubleClickCallBack}\r\n            className={spanClassName}\r\n\r\n            {...restSpanProps}\r\n          >\r\n            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n            ✎ {children || restProps.value}\r\n                    </span>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: string[]\r\n  onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o, i) => (\r\n    <option className={s.option} key={'option-' + i} value={o}>{o}</option>\r\n  )) : []\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.scss'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => { // map options with key\r\n        return <label className={s.label} key={name + '-' + i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","const initialState: InitialStateType = {\r\n    testValue: ''\r\n}\r\n\r\nexport const testReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-TEST-VALUE':\r\n            return {...state, testValue: action.newValue}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTestValueAC = (newValue: string) =>\r\n    ({type: 'SET-TEST-VALUE', newValue} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    testValue: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setTestValueAC>","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setTestValueAC} from \"../../../n1-main/m2-bll/test-reducer\";\r\nimport s from './TestForReducer.module.scss'\r\n\r\nexport const TestForReducer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let reducerValue = useSelector<AppStoreType, string>(state => state.testReducer.testValue)\r\n\r\n    return <div className={s.testForReducer}>\r\n        <div>Hi, I am test for reducer. I will set 'test value' to state and will show it at the input, if you click the\r\n            button.\r\n        </div>\r\n        <div>\r\n            <SuperInputText value={reducerValue}/>\r\n            <SuperButton onClick={() => {dispatch(setTestValueAC('test value'))}}>Click Me</SuperButton>\r\n        </div>\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Examples.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../../n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {TestForReducer} from \"../TestForReducer/TestForReducer\";\r\n\r\nexport const Examples = () => {\r\n    const [text, setText] = useState<string>('') // for SuperInputText\r\n    const [checked, setChecked] = useState<boolean>(false) // for SuperCheckbox\r\n    const [value, setValue] = useState<string>('') // for SuperEditableSpan\r\n    const arr = ['x', 'y', 'z'] // for SuperSelect & SuperRadio\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect & SuperRadio\r\n\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => { // for SuperButton\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.examples}>\r\n            <TestForReducer />\r\n            <h1>This is examples of common components.</h1>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <h2>с1-SuperInputText:</h2>\r\n                <div className={s.inputContainer}>\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        spanClassName={s.testSpanError}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        className={s.blue} // проверьте, работает ли смешивание классов\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с2-SuperButton:</h2>\r\n                <SuperButton className={s.superButton}>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.superButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <SuperButton disabled className={s.superButton}>\r\n                    disabled\r\n                </SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с3-SuperCheckbox:</h2>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div>\r\n                <h2>с4-SuperEditableSpan:</h2>\r\n                <div className={s.SuperEditableSpanContainer}>\r\n                    <SuperEditableSpan\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с5-SuperSelect and SuperRadio:</h2>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={valueForSsSr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={s.radioContainer}>\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={valueForSsSr}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport s from './Login.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\n\r\nexport type LoginPropsType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    setEmail: (s: string) => void,\r\n    setPassword: (s: string) => void,\r\n    setRememberMe: (s: boolean) => void,\r\n    LoggedIn: () => void\r\n}\r\n\r\n\r\nexport const Login: React.FC<LoginPropsType> = (props) => {\r\n    const changeLogin = (e:any) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n    const changePassword = (e:any) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n    const changeRemember = (e:any) => {\r\n        props.setRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const error = useSelector<AppStoreType, string | null>(state => state.auth.error)\r\n    return (\r\n        <div className={s.form}>\r\n            <form>\r\n                <div className={s.border}>\r\n                    <div className={s.text}>Sign In</div>\r\n                    <div><SuperInputText value={props.email} onChange={changeLogin}/></div>\r\n                    <div><SuperInputText type={\"password\"} value={props.password} onChange={changePassword}/></div>\r\n                    {error ? <span>{error}</span> : null}\r\n                    <div><SuperCheckbox checked={props.rememberMe} onChange={changeRemember} className={s.checkbox} children={'Remember Me'}/></div>\r\n                    <div><SuperButton children={'Login'} onClick={props.LoggedIn}/></div>\r\n                    <NavLink to={'/passwordrecovery'}>Forgot password</NavLink>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {Login} from \"./Login\";\r\nimport {authAPI} from \"./AuthApi\";\r\nimport {LoginTC} from \"./authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const LoginContainer: React.FC = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\nconst LoggedIn = () => {\r\n    dispatch(LoginTC(email, password, rememberMe));\r\n    setEmail('');\r\n    setPassword('');\r\n\r\n}\r\n    if(isLoggedIn) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n    return <Login email={email} password={password} rememberMe={rememberMe}\r\n                  setEmail={setEmail} setPassword={setPassword} setRememberMe={setRememberMe} LoggedIn={LoggedIn}/>\r\n}","import React from 'react';\r\nimport {Header} from \"../p1-header/Header\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../../../n2-features/f1-auth/a1-login/Login\";\r\nimport {RegistrationContainer} from \"../../../n2-features/f1-auth/a2-register/RegistrationContainer\";\r\nimport {Profile} from \"../../../n2-features/f1-auth/a3-profile/Profile\";\r\nimport {Page404} from \"../../../n2-features/f1-auth/Page404\";\r\nimport {PasswordRecovery} from \"../../../n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery\";\r\nimport {PasswordNew} from \"../../../n2-features/f1-auth/a4-passwordNew/PasswordNew\";\r\nimport {Examples} from \"../../../n2-features/f0-test/Examples/Examples\";\r\nimport {LoginContainer} from \"../../../n2-features/f1-auth/a1-login/LoginContainer\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Switch>\r\n                <Route exact path={'/login'} render={() => <LoginContainer/>}/>\r\n                {/*<Route exact path={'/registration'} render={() => <Registration/>}/>*/}\r\n                {/*<Route exact path={'/login'} render={() => <Login/>}/>*/}\r\n                <Route exact path={'/registration'} render={() => <RegistrationContainer/>}/>\r\n                <Route exact path={'/profile'} render={() => <Profile/>}/>\r\n                <Route exact path={'/404'} render={() => <Page404/>}/>\r\n                <Route exact path={'/passwordrecovery'} render={() => <PasswordRecovery/>}/>\r\n                <Route exact path={'/passwordnew'} render={() => <PasswordNew/>}/>\r\n                <Route exact path={'/tests'} render={() => <Examples/>}/>\r\n                <Redirect exact from={'/'} to={'/tests'}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Main} from \"./p2-main/Main\";\r\n\r\nexport const App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Main />\r\n        </div>\r\n    );\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {testReducer} from \"./test-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {recoveryReducer} from \"./recovery-reducer\";\r\nimport {authReducer} from \"../../n2-features/f1-auth/a1-login/authReducer\";\r\nimport {profileReducer} from \"../../n2-features/f1-auth/a3-profile/profileReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    testReducer: testReducer,\r\n    registration: registrationReducer,\r\n    recoveryPassword: recoveryReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./n1-main/m1-ui/App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\n// new branch created\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n//j2\r\n\r\n//hello\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}