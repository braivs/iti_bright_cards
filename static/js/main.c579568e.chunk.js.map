{"version":3,"sources":["n2-features/f1-auth/a4-passwordNew/PasswordNew.module.scss","n1-main/m1-ui/p1-header/Header.module.scss","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.module.scss","n2-features/f2-table/Pagination/Pagination.module.css","n2-features/f2-table/Settings/Settings.module.scss","n2-features/f1-auth/a2-register/Registration.module.scss","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss","n2-features/f1-auth/a1-login/Login.module.scss","n2-features/f2-table/Range/Range.module.css","n2-features/f2-table/TableContent/TableContent.module.scss","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f2-table/SortPacks/SortPacks.module.css","n2-features/f1-auth/a3-profile/profile.module.scss","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.scss","n2-features/f2-table/Search/Search.module.css","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","n2-features/f0-test/TestForReducer/TestForReducer.module.scss","n1-main/m1-ui/common/components/Container.module.scss","n2-features/f0-test/Examples/Examples.module.scss","n2-features/f2-table/Table.module.scss","reportWebVitals.ts","n2-features/f1-auth/a1-login/AuthApi.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m1-ui/p1-header/Header.tsx","n2-features/f1-auth/a2-register/RegistrationAPI.ts","n1-main/m2-bll/registrationReducer.tsx","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n2-features/f1-auth/a2-register/Registration.tsx","n2-features/f1-auth/a2-register/RegistrationContainer.tsx","n2-features/f1-auth/a3-profile/Profile.tsx","n2-features/f1-auth/Page404.tsx","n1-main/m2-bll/api/cards-api.ts","n1-main/m2-bll/recovery-reducer.ts","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.tsx","n2-features/f1-auth/a4-passwordNew/PasswordNew.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m2-bll/test-reducer.ts","n2-features/f0-test/TestForReducer/TestForReducer.tsx","n2-features/f0-test/Examples/Examples.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a1-login/LoginContainer.tsx","n1-main/m2-bll/table-reducer.ts","n2-features/f2-table/Pagination/Pagination.tsx","n2-features/f2-table/Range/Range.tsx","n2-features/f2-table/Search/Search.tsx","n2-features/f2-table/Settings/Settings.tsx","n2-features/f2-table/SortPacks/SortPacks.tsx","n2-features/f2-table/TableContent/TableContent.tsx","n1-main/m2-bll/cards-reducer.ts","n2-features/f2-table/Table.tsx","n1-main/m1-ui/p2-main/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","avatar","email","name","publicCardPacksCount","_id","setProfile","type","isLoggedIn","error","isInitilize","setIsLoggedId","value","setIsError","Header","dispatch","useDispatch","className","s","header","to","logo","links","item","link","onClick","res","catch","e","response","message","registrationAPI","password","isRegistered","registrationAC","setErrorMessageAC","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","currentTarget","key","SuperButton","red","finalClassName","button","default","Registration","props","setEmail","setPassword","repeatPassword","setRepeatPassword","register","useSelector","state","registration","style","block","form","text","testSpanError","placeholder","superButton","RegistrationContainer","useState","a","errorMessage","registrationTC","Profile","auth","profile","profileContainer","src","alt","Page404","cardsAPI","dataForPost","from","resetPasswordToken","userId","pageCount","page","cardPacksTotalCount","packName","sortPacks","min","max","get","params","user_id","cardPackName","cardsPack","cardPackId","newName","put","cardsPack_id","card","forgot","info","errorText","setNew","forgotShowInfoAndErrorAC","infoText","setNewShowInfoAndErrorAC","PasswordRecovery","recoveryPassword","statusText","classColor","green","passwordRecovery","element","forgotPasswordTC","PasswordNew","newPassword","setNewPassword","newPassword2","setNewPassword2","matchStatus","setMatchStatus","token","useParams","passwordNew","oneSizeEl","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","onChangeCallback","radio","testValue","TestForReducer","reducerValue","testReducer","testForReducer","newValue","Examples","setText","setChecked","setValue","arr","valueForSsSr","showAlert","alert","examples","column","inputContainer","blue","disabled","SuperEditableSpanContainer","undefined","radioContainer","Login","onSubmit","LoggedIn","border","rememberMe","setRememberMe","LoginContainer","preventDefault","LoginTC","cardPacks","userIdAfterRadio","setCurrentPageAC","setUserIdAfterRadioAC","sortPacksAC","getCardsPackTC","getState","table","toString","cardPacs","setTotalCountAC","console","log","Pagination","pagesCount","Math","ceil","pages","push","portionCount","portion","setPortion","leftNumber","rightNumber","correctValue","filter","p","pagination","btn","currentPageHandler","PriceRange","values","setValues","step","renderTrack","onMouseDown","onTouchStart","band","ref","height","width","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","slider","numSlider","toFixed","backgroundColor","Search","setState","onClickHandler","search","Settings","settings","settingEl","setPageCountHandler","radioLabel","superRadioArr","profileOrPublic","onChangeProfileOrPublic","SortPacks","TableContent","tableContent","tableHeader","headerModel","m","id","tableBody","bodyModel","v1","cards","getCardsTC","Table","cardsPacks","userID","packid","selectedCardsPack","find","useEffect","CardsPackHeader","CardsHeader","cardHeader","el","delCardsPackHandler","deleteCardsPackTC","updateCardsPackHandler","updateCardPackTC","delCardsHandler","cardId","deleteCardTC","updateCardsHandler","updateCardTC","cardsPackMapped","exact","cardsCount","updated","cardsMapped","question","answer","created","sContainer","container","Number","setPageCountAC","selectedCardPackInfo","elementHeader","elementValue","Main","path","render","App","isInitialize","finally","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c579568e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordNew\":\"PasswordNew_passwordNew__3Za9l\",\"button\":\"PasswordNew_button__kp8yD\",\"element\":\"PasswordNew_element__16pNw\",\"oneSizeEl\":\"PasswordNew_oneSizeEl__2oSpF\",\"input\":\"PasswordNew_input__65_-5\",\"green\":\"PasswordNew_green__2XfFb\",\"red\":\"PasswordNew_red__1h1_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__ybBX3\",\"links\":\"Header_links__1djiI\",\"link\":\"Header_link__23Zun\",\"logo\":\"Header_logo__1coaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecovery\":\"PasswordRecovery_passwordRecovery__1whVr\",\"element\":\"PasswordRecovery_element__4HSGB\",\"input\":\"PasswordRecovery_input__3gJPB\",\"green\":\"PasswordRecovery_green__13Acw\",\"red\":\"PasswordRecovery_red__3NsED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2-hGZ\",\"select\":\"Pagination_select__lHxGQ\",\"item\":\"Pagination_item__1VjEB\",\"btn\":\"Pagination_btn__3b7gO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__On4tP\",\"settingEl\":\"Settings_settingEl__1oX5s\",\"radioLabel\":\"Settings_radioLabel__12VIB\",\"input\":\"Settings_input__1dvdB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Registration_block__3Tll_\",\"form\":\"Registration_form__2kEsu\",\"text\":\"Registration_text__1SQGs\",\"error\":\"Registration_error__3uPVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__w07ee\",\"superInput\":\"SuperInputText_superInput__2HlE6\",\"errorInput\":\"SuperInputText_errorInput__1ozK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__3Ue8W\",\"border\":\"Login_border__2VO3F\",\"text\":\"Login_text__7469u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Range_block__3VGWl\",\"band\":\"Range_band__8DObD\",\"slider\":\"Range_slider__3uXue\",\"numSlider\":\"Range_numSlider__1Iu6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContent\":\"TableContent_tableContent___Z9BN\",\"tableHeader\":\"TableContent_tableHeader__6R13q\",\"tableBody\":\"TableContent_tableBody__3Wv8k\",\"bodyModel\":\"TableContent_bodyModel__1Bdhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__3jpWt\",\"default\":\"SuperButton_default__3yytt\",\"red\":\"SuperButton_red__1kg3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3PNXY\",\"checkbox\":\"SuperCheckbox_checkbox__wFLxS\",\"spanClassName\":\"SuperCheckbox_spanClassName__wA-DT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"SortPacks_block__1LiIP\",\"btn\":\"SortPacks_btn__yUtML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__22CiP\",\"profile\":\"profile_profile__10fn9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__VzKwG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__GhWCk\",\"label\":\"SuperRadio_label__3IPyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Search_block__396XV\",\"search\":\"Search_search__EoK3V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__18Wkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testForReducer\":\"TestForReducer_testForReducer__3EvIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2ztWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"examples\":\"Examples_examples__2yY-S\",\"column\":\"Examples_column__x_3zH\",\"testSpanError\":\"Examples_testSpanError__1sOZm\",\"blue\":\"Examples_blue__26Rzu\",\"superButton\":\"Examples_superButton__6ZYvs\",\"inputContainer\":\"Examples_inputContainer__2-1tf\",\"SuperEditableSpanContainer\":\"Examples_SuperEditableSpanContainer__1hjBy\",\"radioContainer\":\"Examples_radioContainer__26Dxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__3mw9D\",\"input\":\"Table_input__ZTPhL\",\"button\":\"Table_button__3PIoL\",\"selectedCardPackInfo\":\"Table_selectedCardPackInfo__3Aw59\",\"element\":\"Table_element__3rdNr\",\"elementHeader\":\"Table_elementHeader__1zHuN\",\"elementValue\":\"Table_elementValue__2oUdI\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios, {AxiosResponse} from 'axios'\r\nimport {InitialProfileType, SetProfileType} from \"../../../n1-main/m2-bll/profileReducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: AuthLoginType) {\r\n        return instance.post<InitialProfileType>('/auth/login', data);\r\n    },\r\n    me() {\r\n        return instance.post<InitialProfileType>('/auth/me',{})\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/me')\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    export const authAPI = {\r\n        login(data: AuthLoginType) {\r\n            return instance.post<AuthLoginType, AxiosResponse<ResponseType<{ userId: number }>>>('auth/login', data)\r\n\r\n\r\n        },\r\n        */\r\n\r\nexport type AuthLoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../n2-features/f1-auth/a1-login/AuthApi\";\r\n\r\n\r\nlet initialState = {\r\n    avatar: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    _id: '',\r\n}\r\n\r\nexport type InitialProfileType = {\r\n    avatar: string\r\n    email: string\r\n    name: string\r\n    publicCardPacksCount: number\r\n    _id: string\r\n}\r\n//1\r\nexport const profileReducer = (state: InitialProfileType = initialState, action: ActionsType): InitialProfileType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-PROFILE':\r\n            return {\r\n                ...state, avatar: action.avatar, email: action.email, name: action.name,\r\n                publicCardPacksCount: action.publicCardPacksCount, _id: action._id\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n//ActionsCreators\r\n\r\nexport const setProfile = (data: InitialProfileType) => {\r\n    const {avatar, email, name, publicCardPacksCount, _id} = data\r\n    return ({type: 'profile/SET-PROFILE', avatar, email, name, publicCardPacksCount, _id} as const)\r\n}\r\n\r\n\r\n//Thunks\r\n\r\n\r\n//Types\r\n\r\nexport type SetProfileType = ReturnType<typeof setProfile>\r\n\r\n\r\ntype ActionsType = SetProfileType","import {Dispatch} from 'redux'\r\nimport {authAPI, AuthLoginType} from \"../../n2-features/f1-auth/a1-login/AuthApi\";\r\nimport {setProfile, SetProfileType} from \"./profileReducer\";\r\n\r\n\r\nlet initialState = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n    isInitilize: false\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n    isInitilize: boolean\r\n}\r\n\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'login/SET-IS-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'login/SET-IS-INITIALIZE':\r\n            return {...state, isInitilize: action.isInitilize}\r\n        default:\r\n            return {...state}\r\n    }\r\n\r\n}\r\n\r\n\r\n//ActionsCreators\r\n\r\nexport const setIsLoggedId = (value: boolean) => {\r\n    return ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n}\r\nexport const setIsInitialize = (isInitilize: boolean) => {\r\n    return ({type: 'login/SET-IS-INITIALIZE', isInitilize} as const)\r\n}\r\n\r\nexport const setIsError = (error: string) => {\r\n    return ({type: 'login/SET-IS-ERROR', error} as const)\r\n}\r\n\r\n//Thunks\r\nexport const LoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType | SetProfileType>) => {\r\n    authAPI.login({email, password, rememberMe}).then(res => {\r\n            dispatch(setIsLoggedId(true))\r\n            dispatch(setProfile(res.data))\r\n\r\n        }\r\n    ).catch(e => {\r\n            e.response ? dispatch(setIsError(e.response.data.error))\r\n                : dispatch(setIsError(e.message + ', more details in the console'));\r\n        }\r\n    )\r\n}\r\n\r\nexport const InitializeTC = () => (dispatch: Dispatch) => {\r\n    authAPI.me().then(res => {\r\n            dispatch(setIsLoggedId(true))\r\n            dispatch(setProfile(res.data))\r\n        }\r\n    ).catch(e => {\r\n            dispatch(setIsLoggedId(false))\r\n        }\r\n    ).finally(() => {\r\n        dispatch(setIsInitialize(true))\r\n    })\r\n}\r\nexport const LogoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI.logout().then(res => {\r\n            dispatch(setIsLoggedId(false))\r\n\r\n        }\r\n    ).catch(e => {\r\n            e.response ? dispatch(setIsError(e.response.data.error))\r\n                : dispatch(setIsError(e.message + ', more details in the console'));\r\n        }\r\n    )\r\n}\r\n\r\n\r\n//Types\r\n\r\ntype SetIsLoggedIdType = ReturnType<typeof setIsLoggedId>\r\ntype SetIsErrorType = ReturnType<typeof setIsError>\r\ntype SetIsInitializeType = ReturnType<typeof setIsInitialize>\r\n\r\ntype ActionsType = SetIsLoggedIdType | SetIsErrorType | SetIsInitializeType","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {LogoutTC} from \"../../m2-bll/authReducer\";\r\n\r\nexport const Header = () => {\r\n    const dispatch = useDispatch()\r\n    const logout = () => {\r\n        dispatch(LogoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={'/profile'}><div className={s.logo}>BrightCards</div></NavLink>\r\n            <div className={s.links}>\r\n                <NavLink className={s.item} to={'/table'}>Table</NavLink>\r\n                <NavLink className={s.item} to={'/login'}>Login</NavLink>\r\n                <NavLink className={s.item} to={'/registration'}>Registration</NavLink>\r\n                <NavLink className={s.item} to={'/profile'}>Profile</NavLink>\r\n                <NavLink className={s.item} to={'/passwordrecovery'}>PasswordRecovery</NavLink>\r\n                <NavLink className={s.item} to={'/tests'}>Tests</NavLink>\r\n                <a className={s.link} onClick={logout}>Log out</a>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\ntype ResponseType = {\r\n    addedUser: {\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        rememberMe: boolean\r\n        updated: string\r\n        _id: string\r\n    }\r\n}\r\n\r\nexport const registrationAPI = {\r\n    registration(email: string, password: string ){\r\n        return instance.post<ResponseType>(`auth/register`, { email, password} )\r\n    }\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"../../n2-features/f1-auth/a2-register/RegistrationAPI\";\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const initialState = {\r\n    error: null as null | string,\r\n    isRegistered: false\r\n}\r\nexport const registrationReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case  'REGISTRATION-USER':\r\n            return {...state, isRegistered: action.isRegistered}\r\n\r\n        case  'SET-ERROR-MESSAGE':\r\n            return {...state, error: action.error}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const registrationAC = (isRegistered: boolean) => ({type: 'REGISTRATION-USER', isRegistered} as const)\r\nexport const setErrorMessageAC = (error: string | null) => ({type: 'SET-ERROR-MESSAGE', error} as const)\r\n\r\nexport const registrationTC = (email: string, password: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            const response = await registrationAPI.registration(email, password)\r\n            dispatch(registrationAC(true))\r\n\r\n        } catch (e: any) {\r\n            const errorMessage = e.response ? e.response.data.error :\r\n                (e.message + ', more details in the the console')\r\n            dispatch(setErrorMessageAC(errorMessage))\r\n            dispatch(registrationAC(false))\r\n        }\r\n    }\r\n}\r\nexport type RegistrationType = ReturnType<typeof registrationAC>\r\nexport type SetErrorMessageType = ReturnType<typeof setErrorMessageAC>\r\n\r\ntype ActionType = RegistrationType | SetErrorMessageType","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                // type={'password'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from '../../../n1-main/m2-bll/store'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"../../f0-test/Examples/Examples.module.scss\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport style from './Registration.module.scss'\r\nimport {setErrorMessageAC} from \"../../../n1-main/m2-bll/registrationReducer\";\r\n\r\n\r\ntype PropsType = {\r\n    email: string\r\n    setEmail: (email: string) => void\r\n    password: string\r\n    setPassword: (password: string) => void\r\n    repeatPassword: string\r\n    setRepeatPassword: (repeatPassword: string) => void\r\n    register: () => void\r\n}\r\nexport const Registration = (props: PropsType) => {\r\n    const {\r\n        email,\r\n        setEmail,\r\n        password,\r\n        setPassword,\r\n        repeatPassword,\r\n        setRepeatPassword,\r\n        register\r\n    } = props\r\n\r\n    const error = useSelector<AppStoreType, null | string>(state => state.registration.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const emailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setErrorMessageAC(''))\r\n    }\r\n\r\n    const setPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n        dispatch(setErrorMessageAC(''))\r\n    }\r\n    const setRepeatPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatPassword(e.currentTarget.value)\r\n        dispatch(setErrorMessageAC(''))\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.block}>\r\n            <div className={style.form}>\r\n                <p className={style.text}>Registration</p>\r\n\r\n                <label>\r\n                    <SuperInputText\r\n                        value={email}\r\n                        onChange={emailHandler}\r\n                        className={`${s.testSpanError}${style.placeholder}`}\r\n                        placeholder={'enter your email'}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <SuperInputText\r\n                        type={'password'}\r\n                        value={password}\r\n                        onChange={setPasswordHandler}\r\n                        className={s.testSpanError}\r\n                        placeholder={'enter  your password'}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <SuperInputText\r\n                        type={'password'}\r\n                        value={repeatPassword}\r\n                        onChange={setRepeatPasswordHandler}\r\n                        className={s.testSpanError}\r\n                        placeholder={'repeat  your password'}\r\n                    />\r\n                </label>\r\n\r\n                {error !== null && <div className={style.error}>{error}</div>}\r\n\r\n                <div>\r\n                    <SuperButton onClick={register} className={s.superButton}>\r\n                        registration\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {registrationTC, setErrorMessageAC} from \"../../../n1-main/m2-bll/registrationReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Registration} from \"./Registration\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const RegistrationContainer = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.registration.isRegistered)\r\n\r\n    const register = () => {\r\n        dispatch(setErrorMessageAC(null))\r\n        if (password === repeatPassword) {\r\n            dispatch(registrationTC(email, password))\r\n        } else {\r\n            dispatch(setErrorMessageAC('password mismatch'))\r\n        }\r\n        setEmail('')\r\n        setPassword('')\r\n        setRepeatPassword('')\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Registration\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                repeatPassword={repeatPassword}\r\n                setPassword={setPassword}\r\n                setRepeatPassword={setRepeatPassword}\r\n                register={register}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {InitialProfileType, SetProfileType} from \"../../../n1-main/m2-bll/profileReducer\";\r\nimport s from './profile.module.scss'\r\nimport {InitializeTC} from \"../../../n1-main/m2-bll/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Profile = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const {\r\n        avatar,\r\n        email,\r\n        name,\r\n        publicCardPacksCount,\r\n        _id\r\n    } = useSelector<AppStoreType, InitialProfileType>(state => state.profile)\r\n\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to='/login' />\r\n    }\r\n    return (\r\n            <div className={s.profileContainer}>\r\n                <div className={s.profile}>\r\n                    {avatar ? <img src={avatar} alt=\"\"/> : null}\r\n                    <span>{name}</span>\r\n                    <span>Количество карт: {publicCardPacksCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div>Page404</div>\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    ...settings\r\n})\r\n\r\nexport const cardsAPI = {\r\n    recoveryPassword(email: string) {\r\n        const dataForPost = {\r\n            email,\r\n            from: \"Briws <brightwiths@gmail.com>\",\r\n            message: `<div>password recovery link:<a href='http://localhost:3000/#/passwordnew/$token$'>link</a></div>` // todo: need to change this before yarn deploy\r\n        }\r\n        return instance.post<ResponseType>('auth/forgot', dataForPost)\r\n    },\r\n    changePassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<ResponseType>('auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n    getCardsPack(userId: string, pageCount: string, page: number, cardPacksTotalCount: number,\r\n                 packName: string,sortPacks: string, min: number, max: number) {\r\n        return instance.get<CardsResponseType>(`cards/pack`, {params: {\r\n                user_id: userId, pageCount, page, cardPacksTotalCount,packName,\r\n                sortPacks, min, max,\r\n            }})\r\n    },\r\n    addCardPack(cardPackName: string) {\r\n        const dataForPost: addCardsPostType = {\r\n            cardsPack: {\r\n                name: cardPackName\r\n            }\r\n        }\r\n        return instance.post('cards/pack', dataForPost)\r\n    },\r\n    deleteCardPack(cardPackId: string) {\r\n        return instance.delete(`cards/pack?id=${cardPackId}`)\r\n    },\r\n    updateCardPack(cardPackId: string, newName: string) {\r\n        const dataForPost: updateCardsPostType = {\r\n            cardsPack: {\r\n                _id: cardPackId,\r\n                name: newName,\r\n            }\r\n        }\r\n        return instance.put('cards/pack', dataForPost)\r\n    },\r\n    getCards(cardsPack_id: string) {\r\n        return instance.get<ResponseType<cardDataType>>('/cards/card', {params: {cardsPack_id}})\r\n    },\r\n    addCard(cardsPack_id: string) {\r\n        const dataForPost = {\r\n            card: {\r\n                cardsPack_id\r\n            }\r\n        }\r\n        return instance.post('cards/card', dataForPost)\r\n    },\r\n    deleteCard(cardsPack_id: string) {\r\n        return instance.delete(`cards/card?id=${cardsPack_id}`)\r\n    },\r\n    updateCard(cardsPack_id: string) {\r\n        const dataForPost: updateCardsPostType = {\r\n            cardsPack: {\r\n                _id: cardsPack_id\r\n            }\r\n        }\r\n        return instance.put('cards/pack', dataForPost)\r\n    },\r\n}\r\n\r\ntype ResponseType<D = {}> = {\r\n    info: string\r\n    response: {\r\n        data: D\r\n    }\r\n}\r\n\r\nexport type CardsPackType = {\r\n    cardsCount: number\r\n    created: string\r\n    deckCover?: string\r\n    grade: number // средняя оценка карточек\r\n    more_id: string\r\n    name: string\r\n    path: string // папка\r\n    private: boolean\r\n    rating: number // лайки\r\n    shots: number // количество попыток\r\n    type: string // ещё будет \"folder\" (папка)\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\ntype CardsResponseType = {\r\n    cardPacks: Array<CardsPackType>\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}\r\ntype addCardsPostType = {\r\n    cardsPack: {\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: \"url\" | \"base64\"\r\n        private?: boolean\r\n        type?: string\r\n    }\r\n}\r\ntype updateCardsPostType = {\r\n    cardsPack: {\r\n        _id: string\r\n        name?: string // не обязательно\r\n    }\r\n}\r\n\r\ntype cardDataType = {\r\n    cards: Array<CardsPackType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}","import {cardsAPI} from \"./api/cards-api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState = {\r\n    forgot: {\r\n        info: '',\r\n        errorText: ''\r\n    },\r\n    setNew: {\r\n        info: '',\r\n        errorText: ''\r\n    }\r\n}\r\n\r\nexport const recoveryReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"FORGOT-PASS/SHOW-INFO-AND-ERROR\":\r\n            return {...state, forgot: {info: action.forgot.infoText, errorText: action.forgot.errorText}}\r\n        case \"RESTORE-PASS/SHOW-INFO-AND-ERROR\":\r\n            return {...state, setNew: {info: action.setNew.infoText, errorText: action.setNew.errorText}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const forgotShowInfoAndErrorAC = (infoText: string, errorText: string) =>\r\n    ({type: 'FORGOT-PASS/SHOW-INFO-AND-ERROR', forgot: {infoText, errorText}} as const)\r\nexport const setNewShowInfoAndErrorAC = (infoText: string, errorText: string) =>\r\n    ({type: 'RESTORE-PASS/SHOW-INFO-AND-ERROR', setNew: {infoText, errorText}} as const)\r\n\r\nexport const forgotPasswordTC = (email: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        cardsAPI.recoveryPassword(email)\r\n            .then(res => {\r\n                dispatch(forgotShowInfoAndErrorAC(res.data.info, ''))\r\n            })\r\n            .catch(res => {\r\n                dispatch(forgotShowInfoAndErrorAC('', res.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        cardsAPI.changePassword(password, resetPasswordToken)\r\n            .then(res => {\r\n                dispatch(setNewShowInfoAndErrorAC(res.data.info, ''))\r\n            })\r\n            .catch(res => {\r\n                dispatch(setNewShowInfoAndErrorAC('', res.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    forgot: {\r\n        info: string\r\n        errorText: string\r\n    }\r\n    setNew: {\r\n        info: string\r\n        errorText: string\r\n    }\r\n\r\n}\r\ntype ActionType = ReturnType<typeof forgotShowInfoAndErrorAC> | ReturnType<typeof setNewShowInfoAndErrorAC>\r\n","import React, {useState} from 'react';\r\nimport s from './PasswordRecovery.module.scss'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"../../../n1-main/m2-bll/recovery-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    let infoText = useSelector<AppStoreType, string>(state => state.recoveryPassword.forgot.info)\r\n    let errorText = useSelector<AppStoreType, string>(state => state.recoveryPassword.forgot.errorText)\r\n\r\n    let statusText = ''\r\n    let classColor = ''\r\n    if (infoText !== '') {\r\n        statusText = infoText + ' You need to click recover link in you email.'\r\n        classColor = s.green\r\n    } else {\r\n        statusText = errorText\r\n        classColor = s.red\r\n    }\r\n    const onClickHandler = () => {\r\n        dispatch(forgotPasswordTC(email))\r\n    }\r\n\r\n    return (\r\n        <div className={s.passwordRecovery}>\r\n            <h1>This page will recover you password.</h1>\r\n            <p className={s.element}>Please enter you email to input bellow and click recover.</p>\r\n            <div className={s.element}>\r\n                <label>\r\n                    Your email:\r\n                    <SuperInputText value={email} onChangeText={setEmail} className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}><SuperButton onClick={onClickHandler} >Recover</SuperButton></div>\r\n            <div className={classColor}>{statusText}</div>\r\n        </div>\r\n\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport s from './PasswordNew.module.scss'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewPasswordTC} from \"../../../n1-main/m2-bll/recovery-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const PasswordNew = () => {\r\n    // test\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const [newPassword2, setNewPassword2] = useState<string>('')\r\n    let infoText = useSelector<AppStoreType, string>(state => state.recoveryPassword.setNew.info)\r\n    let errorText = useSelector<AppStoreType, string>(state => state.recoveryPassword.setNew.errorText)\r\n    const dispatch = useDispatch()\r\n    const [matchStatus, setMatchStatus] = useState('')\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n\r\n    const onClickHandler = () => {\r\n        if (newPassword !== newPassword2) {\r\n            setMatchStatus('passwords do not match')\r\n        } else {\r\n            setMatchStatus('')\r\n            dispatch(setNewPasswordTC(newPassword, token))\r\n        }\r\n    }\r\n\r\n    let statusText = ''\r\n    let classColor = ''\r\n    if (infoText !== '') {\r\n        statusText = infoText\r\n        classColor = s.green\r\n    } else {\r\n        statusText = errorText\r\n        classColor = s.red\r\n    }\r\n\r\n    return (\r\n        <div className={s.passwordNew}>\r\n            <h1>This page for changing you password.</h1>\r\n            <p className={s.element}>It will take token from address link and new password from inputs and then new\r\n                password will be set to you.</p>\r\n            <div className={s.element}>\r\n                <label className={s.oneSizeEl}>\r\n                    <div>New password:</div>\r\n                    <SuperInputText value={newPassword} onChangeText={setNewPassword} type={'password'}\r\n                                    className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}>\r\n                <label className={s.oneSizeEl}>\r\n                    <div>Password confirmation:</div>\r\n                    <SuperInputText value={newPassword2} onChangeText={setNewPassword2} type={'password'}\r\n                                    className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}><SuperButton onClick={onClickHandler} className={s.button}>Change\r\n                password</SuperButton></div>\r\n            <div className={s.red}>{matchStatus}</div>\r\n            <div className={classColor}>{statusText}</div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeChecked,\r\n    className, spanClassName,\r\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  }\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n  {\r\n    autoFocus, // игнорировать изменение этого пропса\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n    onEnter && onEnter() // оставлено на будущее, чтобы можно было возвращать событие по enter\r\n  }\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n    onBlur && onBlur(e)\r\n  }\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true) // включить editMode при двойном клике\r\n\r\n    onDoubleClick && onDoubleClick(e)\r\n  }\r\n\r\n  const spanClassName = `${s.editableSpan} ${className}`\r\n\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <SuperInputText\r\n            autoFocus // пропсу с булевым значением не обязательно указывать true\r\n            onBlur={onBlurCallback}\r\n            onEnter={onEnterCallback}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={onDoubleClickCallBack}\r\n            className={spanClassName}\r\n\r\n            {...restSpanProps}\r\n          >\r\n            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n            ✎ {children || restProps.value}\r\n                    </span>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: string[]\r\n  onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o, i) => (\r\n    <option className={s.option} key={'option-' + i} value={o}>{o}</option>\r\n  )) : []\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.scss'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => { // map options with key\r\n        return <label className={s.label} key={name + '-' + i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","const initialState: InitialStateType = {\r\n    testValue: ''\r\n}\r\n\r\nexport const testReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-TEST-VALUE':\r\n            return {...state, testValue: action.newValue}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTestValueAC = (newValue: string) =>\r\n    ({type: 'SET-TEST-VALUE', newValue} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    testValue: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setTestValueAC>","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setTestValueAC} from \"../../../n1-main/m2-bll/test-reducer\";\r\nimport s from './TestForReducer.module.scss'\r\n\r\nexport const TestForReducer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let reducerValue = useSelector<AppStoreType, string>(state => state.testReducer.testValue)\r\n\r\n    return <div className={s.testForReducer}>\r\n        <div>Hi, I am test for reducer. I will set 'test value' to state and will show it at the input, if you click the\r\n            button.\r\n        </div>\r\n        <div>\r\n            <SuperInputText value={reducerValue}/>\r\n            <SuperButton onClick={() => {dispatch(setTestValueAC('test value'))}}>Click Me</SuperButton>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Examples.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../../n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {TestForReducer} from \"../TestForReducer/TestForReducer\";\r\n\r\nexport const Examples = () => {\r\n    const [text, setText] = useState<string>('') // for SuperInputText\r\n    const [checked, setChecked] = useState<boolean>(false) // for SuperCheckbox\r\n    const [value, setValue] = useState<string>('') // for SuperEditableSpan\r\n    const arr = ['x', 'y', 'z'] // for SuperSelect & SuperRadio\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect & SuperRadio\r\n\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => { // for SuperButton\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.examples}>\r\n            <TestForReducer />\r\n            <h1>This is examples of common components.</h1>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <h2>с1-SuperInputText:</h2>\r\n                <div className={s.inputContainer}>\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        spanClassName={s.testSpanError}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        className={s.blue} // проверьте, работает ли смешивание классов\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с2-SuperButton:</h2>\r\n                <SuperButton className={s.superButton}>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.superButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <SuperButton disabled className={s.superButton}>\r\n                    disabled\r\n                </SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с3-SuperCheckbox:</h2>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div>\r\n                <h2>с4-SuperEditableSpan:</h2>\r\n                <div className={s.SuperEditableSpanContainer}>\r\n                    <SuperEditableSpan\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с5-SuperSelect and SuperRadio:</h2>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={valueForSsSr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={s.radioContainer}>\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={valueForSsSr}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {FormEvent, MouseEvent} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport s from './Login.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\n\r\nexport type LoginPropsType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    setEmail: (s: string) => void,\r\n    setPassword: (s: string) => void,\r\n    setRememberMe: (s: boolean) => void,\r\n    LoggedIn: (e: FormEvent<HTMLFormElement>) => void\r\n}\r\n\r\n//todo: need to fix any\r\nexport const Login: React.FC<LoginPropsType> = (props) => {\r\n    const changeLogin = (e:any) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n    const changePassword = (e:any) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n    const changeRemember = (e:any) => {\r\n        props.setRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const error = useSelector<AppStoreType, string | null>(state => state.auth.error)\r\n    return (\r\n        <div className={s.form}>\r\n            <form onSubmit={props.LoggedIn}>\r\n                <div className={s.border}>\r\n                    <div className={s.text}>Sign In</div>\r\n                    <div><SuperInputText value={props.email} onChange={changeLogin}/></div>\r\n                    <div><SuperInputText type={\"password\"} value={props.password} onChange={changePassword}/></div>\r\n                    {error ? <span>{error}</span> : null}\r\n                    <div><SuperCheckbox checked={props.rememberMe} onChange={changeRemember} className={s.checkbox} children={'Remember Me'}/></div>\r\n                    <div><SuperButton children={'Login'} /></div>\r\n                    <NavLink to={'/passwordrecovery'}>Forgot password</NavLink>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, {FormEvent, useState} from 'react';\r\nimport {Login} from \"./Login\";\r\nimport {authAPI} from \"./AuthApi\";\r\nimport {LoginTC} from \"../../../n1-main/m2-bll/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const LoginContainer: React.FC = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const LoggedIn = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(LoginTC(email, password, rememberMe));\r\n        setEmail('');\r\n        setPassword('');\r\n\r\n    }\r\n    if (isLoggedIn) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    return <Login email={email} password={password} rememberMe={rememberMe}\r\n                  setEmail={setEmail} setPassword={setPassword} setRememberMe={setRememberMe} LoggedIn={LoggedIn}/>\r\n}","import {Dispatch} from \"react\";\r\nimport {cardsAPI, CardsPackType} from \"./api/cards-api\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\nconst initialState: InitialStateType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 10,\r\n    pageCount: 5,\r\n    page: 1,\r\n    userIdAfterRadio: '',\r\n    packName: '',\r\n    sortPacks:'',\r\n    max: 4,\r\n    min: 0,\r\n\r\n}\r\n\r\nexport const tableReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TABLE/SET-CARD-PACKS\":\r\n            return {...state, cardPacks: action.cardPacs}\r\n        case \"TABLE/SET-CURRENT-PAGE\":\r\n            return {...state, page: action.page}\r\n        case \"TABLE/SET-TOTAL-COUNT\":\r\n            return {...state, cardPacksTotalCount: action.cardPacksTotalCount}\r\n        case \"TABLE/SET-PAGE-COUNT\":\r\n            return {...state, pageCount: action.pageCount}\r\n        case \"TABLE/SET-USER-ID-AFTER-RADIO\":\r\n            return {...state, userIdAfterRadio: action.userIdAfterRadio}\r\n        case \"TABLE/SET-SEARCH-PACK-NAME\":\r\n            return {...state, packName: action.packName}\r\n        case \"TABLE/SORT-PACKS\":\r\n            return {...state, sortPacks: action.sortPacks}\r\n        case \"TABLE/SET-CARDS-COUNT\":\r\n            return {...state, max: action.max, min: action.min}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    cardPacks: Array<CardsPackType>\r\n    cardPacksTotalCount: number\r\n    pageCount: number\r\n    page: number\r\n    userIdAfterRadio: string\r\n    packName: string\r\n    sortPacks: string\r\n    min: number\r\n    max: number\r\n\r\n}\r\n\r\nexport const setSearchPackNameAC = (packName: string) =>\r\n    ({type: 'TABLE/SET-SEARCH-PACK-NAME', packName} as const)\r\n\r\nexport const setCardPacksAC = (cardPacs: Array<CardsPackType>) =>\r\n    ({type: 'TABLE/SET-CARD-PACKS', cardPacs} as const)\r\n\r\nexport const setCurrentPageAC = (page: number) =>\r\n    ({type: 'TABLE/SET-CURRENT-PAGE', page} as const)\r\n\r\nexport const setTotalCountAC = (cardPacksTotalCount: number) =>\r\n    ({type: 'TABLE/SET-TOTAL-COUNT', cardPacksTotalCount,} as const)\r\n\r\nexport const setPageCountAC = (pageCount: number) =>\r\n    ({type: 'TABLE/SET-PAGE-COUNT', pageCount,} as const)\r\n\r\nexport const setUserIdAfterRadioAC = (userIdAfterRadio: string) =>\r\n    ({type: 'TABLE/SET-USER-ID-AFTER-RADIO', userIdAfterRadio} as const)\r\n\r\nexport const sortPacksAC = (sortPacks: string) =>\r\n    ({type: 'TABLE/SORT-PACKS', sortPacks} as const)\r\n\r\nexport const setCardsCountAC = (min: number,max: number ) =>  //минимальное и максимальное число карт\r\n    ({type: 'TABLE/SET-CARDS-COUNT', min, max,} as const)\r\n\r\nexport const getCardsPackTC = () => {\r\n    return (dispatch: Dispatch<ActionType>, getState: () => AppStoreType) => {\r\n        const page = getState().table.page\r\n        const cardPacksTotalCount = getState().table.cardPacksTotalCount\r\n        const packName = getState().table.packName\r\n        const pageCount = getState().table.pageCount.toString()\r\n        const userIdAfterRadio = getState().table.userIdAfterRadio\r\n        const sortPacks = getState().table.sortPacks\r\n        const min = getState().table.min\r\n        const max = getState().table.max\r\n\r\n        cardsAPI.getCardsPack(userIdAfterRadio, pageCount, page, cardPacksTotalCount,\r\n            packName, sortPacks, min, max,)\r\n            .then((res) => {\r\n                dispatch(setCardPacksAC(res.data.cardPacks))\r\n                dispatch(setTotalCountAC(res.data.cardPacksTotalCount))\r\n                dispatch(setCurrentPageAC(res.data.page))\r\n                console.log('getCardsPack then:', res.data.cardPacks)\r\n            })\r\n            .catch((res) => {\r\n                console.log('getCardsPack catch:', res.response.data.error)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const addCardsPackTC = (cardPackName: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsAPI.addCardPack(cardPackName)\r\n            .then(res => {\r\n                console.log('addCardsPackTC then:', res)\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('addCardsPackTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCardsPackTC = (cardPackId: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsAPI.deleteCardPack(cardPackId)\r\n            .then(res => {\r\n                console.log('deleteCardsPackTC then:', res)\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('deleteCardsPackTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateCardPackTC = (cardPackId: string, newName: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsAPI.updateCardPack(cardPackId, newName)\r\n            .then(res => {\r\n                console.log('updateCardPackTC then:', res)\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('updateCardPackTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setCardPacksAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalCountAC>\r\n    | ReturnType<typeof setPageCountAC>\r\n    | ReturnType<typeof setUserIdAfterRadioAC>\r\n    | ReturnType<typeof setSearchPackNameAC>\r\n    | ReturnType<typeof sortPacksAC>\r\n    | ReturnType<typeof setCardsCountAC>\r\n    | ReturnType<typeof setSearchPackNameAC>\r\n\r\ntype AppThunk = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport style from './Pagination.module.css'\r\nimport {getCardsPackTC, setCurrentPageAC} from \"../../../n1-main/m2-bll/table-reducer\";\r\nimport SuperButton from '../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton';\r\n\r\nconst Pagination = () => {\r\n    let pageCount = useSelector<AppStoreType, any>(state => state.table.pageCount) // кол-во элементов на одной стр\r\n    let cardPacksTotalCount = useSelector<AppStoreType, number>(state => state.table.cardPacksTotalCount)// кол-во колод\r\n    let page = useSelector<AppStoreType, number>(state => state.table.page)// выбранная страница\r\n    const dispatch = useDispatch()\r\n\r\n    const currentPageHandler = (page: number) => {\r\n        dispatch(setCurrentPageAC(page))\r\n    }\r\n\r\n    let pagesCount = Math.ceil(cardPacksTotalCount / pageCount); //количество страниц всех!!! до пагинатора\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionSize = 10; // порция которая видна в пагинации\r\n    const portionCount = Math.ceil(pagesCount / portionSize) // количество порций по 10 страниц\r\n\r\n    const [portion, setPortion] = useState(1)\r\n    const leftNumber = (portion - 1) * portionSize + 1\r\n    const rightNumber = portion * portionSize\r\n    const correctValue = pages.filter((p) => p ? p >= leftNumber && p <= rightNumber : '')\r\n\r\n    return (\r\n        <div className={style.pagination}> {portion > 1 &&\r\n        <SuperButton onClick={() => {\r\n            setPortion(portion - 1)\r\n        }} className={style.btn}>Prev\r\n        </SuperButton>\r\n        }\r\n            {correctValue.map(p => {\r\n                return (\r\n                    <span\r\n                        key={p}\r\n                        className={`${style.item} ${page === p ? style.select : style.item}`}\r\n                        onClick={() => currentPageHandler(p)}>{p}\r\n                    </span>\r\n                )\r\n\r\n            })}\r\n            {portionCount > portion && <SuperButton onClick={() => {\r\n                setPortion(portion + 1)\r\n            }} className={style.btn}>Next\r\n            </SuperButton>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {getTrackBackground, Range} from 'react-range';\r\nimport style from './Range.module.css'\r\n\r\ntype  PropsType = {\r\n    values: number[]\r\n    setValues: ([]: number[]) => void\r\n}\r\nconst PriceRange: React.FC<PropsType> =props=> {\r\n     const {values, setValues} = props\r\n    return (\r\n        <div className={style.block}>\r\n            <h3>amount of cards</h3>\r\n        <Range\r\n            values={values}\r\n            step={1}\r\n            min={0}\r\n            max={100}\r\n            onChange={values => setValues(values)}\r\n            renderTrack={({props, children}) => (\r\n                <div\r\n                    onMouseDown={props.onMouseDown} //выполняется при нажатии клавиши\r\n                    onTouchStart={props.onTouchStart} //срабатывает при касании элемента(длинная)\r\n                    className={style.band}>\r\n\r\n                    <div\r\n                        ref={props.ref}\r\n                        style={{\r\n                            height: '5px',\r\n                            width: '100%',\r\n                            borderRadius: '4px',\r\n                            background: getTrackBackground({\r\n                                values: values,\r\n                                colors: ['#ccc', 'yellow', '#ccc'],\r\n                                min: 0,\r\n                                max: 100,\r\n                            }),\r\n                            alignSelf: 'center'}}>\r\n                        {children}\r\n\r\n                    </div>\r\n                </div>)}\r\n\r\n            renderThumb={({index, props, isDragged}) => (\r\n                <div\r\n                    {...props}\r\n                    className={style.slider}>\r\n\r\n                    <div className={style.numSlider}>\r\n                        {values[index].toFixed(0)}\r\n                        {/*// 10.12345 => 10; (1) => 10.1; (2) > 10.12; ...*/}\r\n                    </div>\r\n\r\n                    <div style={{\r\n                            height: '16px',\r\n                            width: '5px',\r\n                            backgroundColor: isDragged ? '#fbbf62' : '#CCC'}}/>\r\n                </div>)}\r\n        />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PriceRange;","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCardsCountAC, setSearchPackNameAC} from \"../../../n1-main/m2-bll/table-reducer\";\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport style from './Search.module.css'\r\nimport PriceRange from \"../Range/Range\";\r\n\r\nconst Search = () => {\r\n    const dispatch = useDispatch()\r\n    const [state, setState] = useState('')\r\n\r\n    const [values, setValues] = useState([0, 100]);\r\n    const currentHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setState(e.currentTarget.value)\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        dispatch(setSearchPackNameAC(state))\r\n        dispatch(setCardsCountAC(values[0], values[1]))\r\n        setState('')\r\n    }\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            onClickHandler()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.block}>\r\n\r\n            <SuperInputText\r\n                value={state}\r\n                onChange={currentHandler}\r\n                onKeyPress={onKeyPressHandler}\r\n                placeholder={'enter name'}/>\r\n\r\n            <PriceRange\r\n                values={values}\r\n                setValues={setValues}/>\r\n\r\n            <SuperButton\r\n                onClick={onClickHandler}\r\n                className={style.search}>Search\r\n            </SuperButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, {ChangeEvent} from 'react';\r\nimport s from './Settings.module.scss';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\ntype PropsType = {\r\n    setPageCountHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n    superRadioArr: Array<string>\r\n    profileOrPublic: string\r\n    onChangeProfileOrPublic: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nexport const Settings = (props: PropsType) => {\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.table.pageCount).toString()\r\n\r\n    return <div className={s.settings}>\r\n        <h2>Settings:</h2>\r\n        <label className={s.settingEl}>\r\n            How much Card Packs to show:\r\n            <SuperInputText value={pageCount} onChange={props.setPageCountHandler} className={s.input}\r\n                            type={\"number\"}/>\r\n        </label>\r\n        <label className={`${s.radioLabel} ${s.settingEl}`}>\r\n            <div>Profile Card Packs only or Public:</div>\r\n            <SuperRadio\r\n                options={props.superRadioArr}\r\n                value={props.profileOrPublic}\r\n                onChangeOption={props.onChangeProfileOrPublic}\r\n                className={s.radio}\r\n            />\r\n        </label>\r\n    </div>\r\n}","import React from 'react';\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport style from './SortPacks.module.css';\r\nimport {sortPacksAC} from \"../../../n1-main/m2-bll/table-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst SortPacks = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const upperSortHandler = () => {\r\n        dispatch(sortPacksAC('0created'))\r\n    }\r\n    const lowerSortHandler = () => {\r\n        dispatch(sortPacksAC('1created'))\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={style.block}>\r\n                <SuperButton className={style.btn} onClick={upperSortHandler}>\r\n                    ^\r\n                </SuperButton>\r\n                <SuperButton className={style.btn} onClick={lowerSortHandler}>\r\n                    v\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortPacks;","import React from 'react';\r\nimport {CardsPackType, CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport s from './TableContent.module.scss'\r\nimport {TableHeaderModelType} from \"../Table\";\r\nimport {v1} from \"uuid\";\r\nimport SortPacks from \"../SortPacks/SortPacks\";\r\n\r\ntype BodyType = {\r\n    id: string,\r\n    element: Array<string | number | JSX.Element>\r\n}\r\ntype PropsType = {\r\n    headerModel: TableHeaderModelType\r\n    bodyModel: Array<BodyType>\r\n}\r\n\r\n\r\nexport const TableContent: React.FC<PropsType> = (props) => {\r\n    const userIdAfterRadio = useSelector<AppStoreType, string>(state => state.table.userIdAfterRadio)\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.table.pageCount).toString()\r\n    return (\r\n        <div className={s.tableContent}>\r\n            <SortPacks/>\r\n            <div className={s.tableHeader}>\r\n                {props.headerModel.map(m => <div key={m.id}>\r\n                    {m.element}\r\n                </div>)}\r\n            </div>\r\n            <div className={s.tableBody}>\r\n                {props.bodyModel.map(e => {\r\n                    return <div className={s.bodyModel} key={e.id}>{\r\n                        e.element.map(e => {\r\n                            return <div key={v1()}>{e}</div>\r\n                        })\r\n                    }</div>\r\n                })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {cardsAPI, CardsPackType, CardType} from \"./api/cards-api\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {getCardsPackTC} from \"./table-reducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    cards: []\r\n}\r\n\r\nexport const cardsReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"CARDS/SET-CARDS\":\r\n            return {...state, cards: action.cards}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype InitialStateType = {\r\n    cards: Array<CardType>\r\n}\r\n\r\nexport const setCardsAC = (cards: Array<CardType>) =>\r\n    ({type: 'CARDS/SET-CARDS', cards} as const)\r\n\r\n//todo: need to fix @ts-ignore here\r\nexport const getCardsTC = (cardsPack_id: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsAPI.getCards(cardsPack_id)\r\n            .then(res => {\r\n                console.log('getCardsTC then:', res.data)\r\n                // @ts-ignore\r\n                dispatch(setCardsAC(res.data.cards))\r\n\r\n            })\r\n            .catch(res => {\r\n                console.log('getCardsTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const addCardTC = (cardsPack_id: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsAPI.addCard(cardsPack_id)\r\n            .then(res => {\r\n                console.log('addCardTC then:', res)\r\n                dispatch(getCardsTC(cardsPack_id))\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('addCardTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateCardTC = (cardId: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsAPI.updateCard(cardId)\r\n            .then(res => {\r\n                // dispatch(getCardsTC(cardsPack_id))\r\n                console.log('updateCardTC then:', res)\r\n            })\r\n            .catch(res => {\r\n                console.log('updateCardTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCardTC = (cardId: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        // const packId = getState().table\r\n\r\n        cardsAPI.deleteCard(cardId)\r\n            .then(res => {\r\n                dispatch(getCardsTC(cardId))\r\n                console.log('deleteCardTC then:', res)\r\n            })\r\n            .catch(res => {\r\n                console.log('deleteCardTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setCardsAC>\r\n\r\ntype AppThunk = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport sContainer from '../../n1-main/m1-ui/common/components/Container.module.scss'\r\nimport s from './Table.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addCardsPackTC, deleteCardsPackTC,\r\n    getCardsPackTC,\r\n    setPageCountAC,\r\n    setUserIdAfterRadioAC, updateCardPackTC\r\n} from \"../../n1-main/m2-bll/table-reducer\";\r\nimport {AppStoreType} from \"../../n1-main/m2-bll/store\";\r\nimport {CardsPackType, CardType} from \"../../n1-main/m2-bll/api/cards-api\";\r\nimport SuperButton from \"../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport Pagination from \"./Pagination/Pagination\";\r\nimport Search from \"./Search/Search\";\r\nimport {Settings} from \"./Settings/Settings\";\r\nimport {TableContent} from \"./TableContent/TableContent\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {addCardTC, deleteCardTC, getCardsTC, updateCardTC} from \"../../n1-main/m2-bll/cards-reducer\";\r\nimport {v1} from \"uuid\";\r\n\r\nexport const Table = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cardsPacks = useSelector<AppStoreType, Array<CardsPackType>>(state => state.table.cardPacks)\r\n    const userID = useSelector<AppStoreType, string>(state => state.profile._id)\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.table.pageCount).toString()\r\n    const page = useSelector<AppStoreType, number>(state => state.table.page)\r\n    const packName = useSelector<AppStoreType, string>(state => state.table.packName)\r\n    const superRadioArr = ['Profile', 'Public']  // for SuperRadio in Settings\r\n    const sortPacks = useSelector<AppStoreType, string>(state => state.table.sortPacks)\r\n    const min = useSelector<AppStoreType, number>(state => state.table.min)\r\n    const max = useSelector<AppStoreType, number>(state => state.table.max)\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n\r\n    const [profileOrPublic, onChangeProfileOrPublic] = useState(superRadioArr[0]) // for SuperRadio is Settings\r\n    const {packid} = useParams<{ packid: string }>();\r\n\r\n    const selectedCardsPack = cardsPacks.find(e => e._id === packid)\r\n\r\n\r\n    useEffect(() => {\r\n        if (profileOrPublic === 'Public') {\r\n            dispatch(setUserIdAfterRadioAC(''))\r\n        } else {\r\n            dispatch(setUserIdAfterRadioAC(userID))\r\n        }\r\n        dispatch(getCardsPackTC())\r\n\r\n        // dispatch(getCardsTC())\r\n    }, [profileOrPublic, pageCount, page, packName, sortPacks, min, max])\r\n\r\n    // this doesn't work, when packId changed in the\r\n    useEffect(() => {\r\n        console.log(packid)\r\n        if (!!packid) {\r\n            console.log('packid', packid)\r\n            dispatch(getCardsTC(packid))\r\n        }\r\n        console.log('!!!cards',cards)\r\n    }, [packid])\r\n\r\n    const addPackButtonHandler = () => {\r\n        dispatch(addCardsPackTC('BrightPack'))\r\n    }\r\n\r\n    const addCardButtonHandler = () => {\r\n        dispatch(addCardTC(packid))\r\n    }\r\n\r\n    const setPageCountHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (Number(e.currentTarget.value) < 1) e.currentTarget.value = '1'\r\n        dispatch(setPageCountAC(Number(e.currentTarget.value)))\r\n    }\r\n\r\n\r\n    const CardsPackHeader: TableHeaderModelType = [\r\n        {id: '1', element: 'Name'},\r\n        {id: '2', element: 'cardsCount'},\r\n        {id: '3', element: 'updated'},\r\n        {id: '4', element: <SuperButton onClick={addPackButtonHandler}>Add CardPack</SuperButton>},\r\n    ]\r\n\r\n    const CardsHeader: TableHeaderModelType = [\r\n        {id: '1', element: 'answer'},\r\n        {id: '2', element: 'question'},\r\n        {id: '3', element: 'created'},\r\n        {id: '4', element: <SuperButton onClick={addCardButtonHandler}>Add Card</SuperButton>}\r\n    ]\r\n\r\n    let cardHeader = CardsHeader.map(el => {\r\n        return {id: v1(), element: el.element}\r\n    })\r\n\r\n    const delCardsPackHandler = (cardPackId: string) => {\r\n        dispatch(deleteCardsPackTC(cardPackId))\r\n    }\r\n    const updateCardsPackHandler = (cardPackId: string) => {\r\n        dispatch(updateCardPackTC(cardPackId, 'BrightUpdatedName'))\r\n    }\r\n\r\n    const delCardsHandler = (cardId: string) => {\r\n        dispatch(deleteCardTC(cardId))\r\n    }\r\n\r\n    const updateCardsHandler = (cardId: string) => {\r\n        dispatch(updateCardTC(cardId))\r\n    }\r\n\r\n    // remapping arrays for TableContent\r\n    const cardsPackMapped = cardsPacks.map(e => {\r\n        return {\r\n            id: e._id,\r\n            element: [\r\n                <NavLink className={s.item} exact to={`/table/${e._id}`}>{e.name}</NavLink>,\r\n                e.cardsCount,\r\n                e.updated,\r\n                <div><SuperButton className={s.button} onClick={() => delCardsPackHandler(e._id)}>del</SuperButton>\r\n                    <SuperButton className={s.button} onClick={() => updateCardsPackHandler(e._id)}>update</SuperButton>\r\n                </div>\r\n            ]\r\n        }\r\n    })\r\n\r\n    const cardsMapped = cards.map(e => {\r\n        return {id: e._id,\r\n            element: [\r\n                e.question,\r\n                e.answer,\r\n                e.created,\r\n                <div>\r\n                    <SuperButton className={s.button} onClick={() => delCardsHandler(e._id)}>del</SuperButton>\r\n                    <SuperButton className={s.button} onClick={() => updateCardsHandler(e._id)}>update</SuperButton>\r\n                </div>\r\n            ]}\r\n    })\r\n\r\n\r\n    console.log('cardsPackMapped', cardsPackMapped)\r\n    console.log('cardsMapped', cardsMapped)\r\n\r\n\r\n    return (\r\n        <div className={`${sContainer.container} ${s.table}`}>\r\n            <h1>This is table of Card Packs.</h1>\r\n            <Search/>\r\n            <Settings setPageCountHandler={setPageCountHandler}\r\n                      superRadioArr={superRadioArr}\r\n                      profileOrPublic={profileOrPublic}\r\n                      onChangeProfileOrPublic={onChangeProfileOrPublic}\r\n            />\r\n\r\n            <TableContent headerModel={CardsPackHeader} bodyModel={cardsPackMapped}/>\r\n            <Pagination/>\r\n\r\n            <h1>This is table of Cards for selected Card Pack.</h1>\r\n\r\n            <div className={s.selectedCardPackInfo}>\r\n                <div className={s.element}>\r\n                    <div className={s.elementHeader}>Selected CardPack Name:</div>\r\n                    <div className={s.elementValue}>{selectedCardsPack ? selectedCardsPack.name : ''}</div>\r\n                </div>\r\n                <div className={s.element}>\r\n                    <div className={s.elementHeader}>Selected CardPack updated:</div>\r\n                    <div className={s.elementValue}>{selectedCardsPack ? selectedCardsPack.updated : ''}</div>\r\n                </div>\r\n                <div className={s.element}>\r\n                    <div className={s.elementHeader}>Selected CardPack id:</div>\r\n                    <div className={s.elementValue}>{packid}</div>\r\n                </div>\r\n            </div>\r\n            <TableContent headerModel={cardHeader} bodyModel={cardsMapped}/>\r\n\r\n\r\n            {/**/}\r\n\r\n            {/*<TableContent headerModel={CardsPackHeader} bodyModel={cardsPacks}/>*/}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\ntype HeaderModelElementType = {\r\n    id: string,\r\n    element: string | JSX.Element\r\n}\r\n\r\nexport type TableHeaderModelType = Array<HeaderModelElementType>\r\n","import React from 'react';\r\nimport {Header} from \"../p1-header/Header\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {RegistrationContainer} from \"../../../n2-features/f1-auth/a2-register/RegistrationContainer\";\r\nimport {Profile} from \"../../../n2-features/f1-auth/a3-profile/Profile\";\r\nimport {Page404} from \"../../../n2-features/f1-auth/Page404\";\r\nimport {PasswordRecovery} from \"../../../n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery\";\r\nimport {PasswordNew} from \"../../../n2-features/f1-auth/a4-passwordNew/PasswordNew\";\r\nimport {Examples} from \"../../../n2-features/f0-test/Examples/Examples\";\r\nimport {LoginContainer} from \"../../../n2-features/f1-auth/a1-login/LoginContainer\";\r\nimport {Table} from \"../../../n2-features/f2-table/Table\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Switch>\r\n                <Route path={'/table/:packid?'} render={() => <Table />}/>\r\n                <Route exact path={'/login'} render={() => <LoginContainer/>}/>\r\n                <Route exact path={'/registration'} render={() => <RegistrationContainer/>}/>\r\n                <Route exact path={'/profile'} render={() => <Profile/>}/>\r\n                <Route exact path={'/404'} render={() => <Page404/>}/>\r\n                <Route exact path={'/passwordrecovery'} render={() => <PasswordRecovery/>}/>\r\n                <Route exact path={'/passwordnew/:token'} render={() => <PasswordNew/>}/>\r\n                <Route exact path={'/tests'} render={() => <Examples/>}/>\r\n                <Redirect exact from={'/'} to={'/profile'}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"./p2-main/Main\";\r\nimport {InitializeTC} from \"../m2-bll/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../m2-bll/store\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useDispatch()\r\n    const isInitialize = useSelector<AppStoreType, boolean>(state => state.auth.isInitilize)\r\n    useEffect(() => {\r\n        dispatch(InitializeTC())\r\n    }, [])\r\n    return (\r\n        <div className=\"App\">\r\n            {isInitialize && <Main/>}\r\n        </div>\r\n    );\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {testReducer} from \"./test-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {recoveryReducer} from \"./recovery-reducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {tableReducer} from \"./table-reducer\";\r\nimport {cardsReducer} from \"./cards-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    testReducer: testReducer,\r\n    registration: registrationReducer,\r\n    recoveryPassword: recoveryReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    table: tableReducer,\r\n    cards: cardsReducer,\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./n1-main/m1-ui/App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\n// new branch created\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n//j2\r\n\r\n//hello\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}