{"version":3,"sources":["n2-features/f0-test/Examples/Examples.module.scss","n2-features/f2-table/Pagination/Pagination.module.css","n2-features/f1-auth/a4-passwordNew/PasswordNew.module.scss","n2-features/f2-table/Table/Table.module.scss","n1-main/m1-ui/p1-header/Header.module.scss","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.module.scss","n2-features/f2-table/Settings/Settings.module.scss","n2-features/f1-auth/a2-register/Registration.module.scss","n2-features/f1-auth/a1-login/Login.module.scss","n2-features/f2-table/Range/Range.module.css","n2-features/f2-table/TableContent/TableContent.module.scss","n2-features/f2-table/SortPacks/SortPacks.module.css","n2-features/f3-modal/Modal/Modal.module.scss","n2-features/f2-table/Learn/Learn.module.scss","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f1-auth/a3-profile/profile.module.scss","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.scss","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","n2-features/f0-test/TestForReducer/TestForReducer.module.scss","n1-main/m1-ui/common/components/Container.module.scss","n2-features/f2-table/Search/Search.module.css","n2-features/f3-modal/ModalUpdateCardsPack/ModalUpdateCardsPack.module.scss","n2-features/f2-table/Select/Select.module.scss","reportWebVitals.ts","n2-features/f1-auth/a1-login/AuthApi.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m1-ui/p1-header/Header.tsx","n2-features/f1-auth/a2-register/RegistrationAPI.ts","n1-main/m2-bll/registrationReducer.ts","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n2-features/f1-auth/a2-register/Registration.tsx","n2-features/f1-auth/a2-register/RegistrationContainer.tsx","n2-features/f1-auth/a3-profile/Profile.tsx","n2-features/f1-auth/Page404.tsx","n1-main/m2-bll/api/cardsPack-api.ts","n1-main/m2-bll/api/passwordRecovery-api.ts","n1-main/m2-bll/recovery-reducer.ts","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.tsx","n2-features/f1-auth/a4-passwordNew/PasswordNew.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m2-bll/test-reducer.ts","n2-features/f0-test/TestForReducer/TestForReducer.tsx","n2-features/f0-test/Examples/Examples.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a1-login/LoginContainer.tsx","n1-main/m2-bll/cardsPack-reducer.ts","n2-features/f2-table/Pagination/Pagination.tsx","n2-features/f2-table/Range/Range.tsx","n2-features/f2-table/Search/Search.tsx","n2-features/f2-table/Settings/Settings.tsx","n2-features/f2-table/TableContent/TableContent.tsx","n2-features/f2-table/SortPacks/SortPacks.tsx","n1-main/m2-bll/modal-reducer.ts","n2-features/f3-modal/Modal/Modal.tsx","n2-features/f3-modal/ModalAddCardsPack/ModalAddCardsPack.tsx","n2-features/f3-modal/ModalDelCardsPack/ModalDelCardsPack.tsx","n2-features/f3-modal/ModalUpdateCardsPack/ModalUpdateCardsPack.tsx","n2-features/f2-table/Table/Table.tsx","n2-features/f2-table/CustomHooks/CustomDebounce.tsx","n2-features/f2-table/CustomHooks/CustomRangeDebounse.tsx","n1-main/m2-bll/api/cards-api.ts","n1-main/m2-bll/cards-reducer.ts","n2-features/f2-table/Select/Select.tsx","n2-features/f2-table/Pagination/CardsPagination.tsx","n2-features/f3-modal/ModalDelCard/ModalDelCard.tsx","n2-features/f3-modal/ModalAddCard/ModalAddCard.tsx","n2-features/f3-modal/ModalUpdateCard/ModalUpdateCard.tsx","n2-features/f2-table/Cards/Cards.tsx","n2-features/f2-table/Learn/Learn.tsx","n2-features/f2-table/Learn/LearnContainer.tsx","n1-main/m1-ui/p2-main/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","initialState","avatar","email","name","publicCardPacksCount","_id","setProfile","type","isLoggedIn","error","isInitilize","setIsLoggedId","value","setIsError","Header","dispatch","useDispatch","className","s","header","to","logo","links","item","link","onClick","res","catch","e","response","message","registrationAPI","password","isRegistered","registrationAC","setErrorMessageAC","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","currentTarget","key","SuperButton","red","finalClassName","button","default","Registration","props","setEmail","setPassword","repeatPassword","setRepeatPassword","register","useSelector","state","registration","style","block","form","text","testSpanError","placeholder","superButton","RegistrationContainer","useState","a","errorMessage","registrationTC","Profile","auth","profile","profileContainer","src","alt","Page404","cardsPackInstance","cardsPackApi","userId","pageCount","page","packName","sortPacks","min","max","get","params","user_id","cardPackName","dataForPost","cardsPack","cardPackId","newName","put","recoveryPasswordInstanceHeroku","passwordRecoveryApi","from","resetPasswordToken","forgot","info","errorText","setNew","forgotShowInfoAndErrorAC","infoText","setNewShowInfoAndErrorAC","PasswordRecovery","recoveryPassword","statusText","classColor","green","passwordRecovery","element","forgotPasswordTC","PasswordNew","newPassword","setNewPassword","newPassword2","setNewPassword2","matchStatus","setMatchStatus","token","useParams","passwordNew","oneSizeEl","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","onChangeCallback","radio","testValue","TestForReducer","reducerValue","testReducer","testForReducer","newValue","Examples","setText","setChecked","setValue","arr","valueForSsSr","showAlert","alert","examples","column","inputContainer","blue","disabled","SuperEditableSpanContainer","undefined","radioContainer","Login","onSubmit","LoggedIn","border","rememberMe","setRememberMe","LoginContainer","preventDefault","LoginTC","cardPacks","cardPacksTotalCount","userIdAfterRadio","selectedCardPackId","setCurrentPageAC","setUserIdAfterRadioAC","sortPacksAC","setSelectedCardPack","getCardsPackTC","getState","table","toString","cardPack","console","log","Pagination","pagesCount","Math","ceil","pages","push","portionCount","portion","setPortion","leftNumber","rightNumber","correctValue","filter","p","pagination","btn","currentPageHandler","PriceRange","values","setValues","step","renderTrack","onMouseDown","onTouchStart","band","ref","height","width","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","slider","numSlider","toFixed","backgroundColor","Search","setSearchTerm","searchTerm","Settings","settings","settingEl","setPageCountHandler","radioLabel","superRadioArr","profileOrPublic","onChangeProfileOrPublic","TableContent","tableContent","tableHeader","headerModel","m","id","tableBody","bodyModel","SortPacks","container","upperSort","lowerCount","activeCardPackId","modalDelCardsPackShowHide","modalAddCardsPackShowHide","modalUpdateCardsPackShowHide","activeCardId","modalDelCardShowHide","modalAddCardShowHide","modalUpdateCardShowHide","setActiveCardPackAC","setActiveCardAC","Modal","modalShowHide","modalBackground","modalWindow","modalContent","close","ModalAddCardsPack","cardPackNameInModal","setCardPackNameInModal","modalAddCardPackShowHide","modal","ModalDelCardsPack","modalDelCardPackShowHide","ModalUpdateCardsPack","cardsPackName","setCardPackName","find","oldCardsPackName","useEffect","Table","userID","cardsPacks","debouncedSearchTerm","delay","setState","setTime","setTimeout","clearTimeout","useCustomDebounce","debouncedRange","range","setRange","useCustomRangeDebounce","CardsPackHeader","v1","cardsPackMapped","exact","cardsCount","updated","sContainer","Number","setPageCountAC","cardsAPI","cardsPack_id","question","answer","card","card_id","newQuestion","newAnswer","grade","cards","cardsTotalCount","setCurrentPageCardsAC","setPageCountCardsAC","getCardsTC","Select","pageCountCards","Array","keys","CardsPagination","pageCard","cardsTotalCountCards","pagesCountCards","ModalDelCard","cardId","ModalAddCard","setQuestion","setAnswer","sInput","target","addCardTC","ModalUpdateCard","oldCardQuestion","oldCardAnswer","Cards","packid","cardHeader","el","cardsMapped","created","shots","star","round","Learn","hidden","setHidden","submitHandler","setCardsGradeAC","setCardsGrade","body","g","gradeBtn","nextCard","getCard","sum","reduce","acc","rand","random","newSum","initialCard","comments","more_id","rating","__v","LearnContainer","cardsIndex","cp","setCards","initial","setInitial","length","Main","path","render","App","isInitialize","finally","reducers","combineReducers","action","c","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4a32bce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"examples\":\"Examples_examples__3Y-x3\",\"column\":\"Examples_column__3AMTo\",\"testSpanError\":\"Examples_testSpanError__1GNDN\",\"blue\":\"Examples_blue__37AhF\",\"superButton\":\"Examples_superButton__3t9vD\",\"inputContainer\":\"Examples_inputContainer__2tAGt\",\"SuperEditableSpanContainer\":\"Examples_SuperEditableSpanContainer__sQzOJ\",\"radioContainer\":\"Examples_radioContainer__2ETuY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__os06G\",\"select\":\"Pagination_select__18jBa\",\"item\":\"Pagination_item__2nTvC\",\"btn\":\"Pagination_btn__28X2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordNew\":\"PasswordNew_passwordNew__2Gdl7\",\"button\":\"PasswordNew_button__OddtN\",\"element\":\"PasswordNew_element__272Yx\",\"oneSizeEl\":\"PasswordNew_oneSizeEl__3Afzu\",\"input\":\"PasswordNew_input__1_NAq\",\"green\":\"PasswordNew_green__3mtGW\",\"red\":\"PasswordNew_red__3NNrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__jG0vY\",\"input\":\"Table_input__3qvYu\",\"button\":\"Table_button__z_dsg\",\"selectedCardPackInfo\":\"Table_selectedCardPackInfo__ToUAy\",\"element\":\"Table_element__2vyeE\",\"elementHeader\":\"Table_elementHeader__2cwJq\",\"elementValue\":\"Table_elementValue__2rU3m\",\"star\":\"Table_star__uttKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2BoMw\",\"links\":\"Header_links__3tOQK\",\"link\":\"Header_link__1x86B\",\"logo\":\"Header_logo__3FSwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__mnfHt\",\"superInput\":\"SuperInputText_superInput__2o2zh\",\"errorInput\":\"SuperInputText_errorInput__1kZRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecovery\":\"PasswordRecovery_passwordRecovery__1Wg5b\",\"element\":\"PasswordRecovery_element__4LRM2\",\"input\":\"PasswordRecovery_input__umD3A\",\"green\":\"PasswordRecovery_green__2KXij\",\"red\":\"PasswordRecovery_red__1D5RF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3hph3\",\"settingEl\":\"Settings_settingEl__3u00t\",\"radioLabel\":\"Settings_radioLabel__aPSqT\",\"input\":\"Settings_input__9LimK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Registration_block__1hJvi\",\"form\":\"Registration_form__1uUkR\",\"text\":\"Registration_text__1bo3n\",\"error\":\"Registration_error__2fvv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2nCaA\",\"border\":\"Login_border__blTeG\",\"text\":\"Login_text__3RsiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Range_block__3Ens6\",\"band\":\"Range_band__1VU7N\",\"slider\":\"Range_slider__DWGOY\",\"numSlider\":\"Range_numSlider__2S4JX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContent\":\"TableContent_tableContent__1FHdq\",\"tableHeader\":\"TableContent_tableHeader__2Ygrd\",\"tableBody\":\"TableContent_tableBody__1mYsg\",\"bodyModel\":\"TableContent_bodyModel__3fi2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SortPacks_container__3fwnW\",\"block\":\"SortPacks_block__2BOns\",\"btn\":\"SortPacks_btn__1zkfM\",\"elem\":\"SortPacks_elem__3mpwr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackground\":\"Modal_modalBackground__32uCC\",\"modalWindow\":\"Modal_modalWindow__25Itl\",\"modalContent\":\"Modal_modalContent__36hFk\",\"close\":\"Modal_close__OoBx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Learn_body__E2aFA\",\"grade\":\"Learn_grade__2y7a7\",\"gradeBtn\":\"Learn_gradeBtn__2PD7h\",\"btn\":\"Learn_btn__3iUyl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__2m2v9\",\"default\":\"SuperButton_default__r_uJs\",\"red\":\"SuperButton_red__vubyI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3x3vw\",\"checkbox\":\"SuperCheckbox_checkbox__BVH0R\",\"spanClassName\":\"SuperCheckbox_spanClassName__1877P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__1r5--\",\"profile\":\"profile_profile__2vcmC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__3uguB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__2otq7\",\"label\":\"SuperRadio_label__1RXYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__2K1Pl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testForReducer\":\"TestForReducer_testForReducer__2WOwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1duo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Search_block__lJgcx\",\"search\":\"Search_search__37_cZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ModalUpdateCardsPack_button__1UFg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__2F3Ig\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios, {AxiosResponse} from 'axios'\r\nimport {InitialProfileType, SetProfileType} from \"../../../n1-main/m2-bll/profileReducer\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: AuthLoginType) {\r\n        return instance.post<InitialProfileType>('/auth/login', data);\r\n    },\r\n    me() {\r\n        return instance.post<InitialProfileType>('/auth/me',{})\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/me')\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    export const authAPI = {\r\n        login(data: AuthLoginType) {\r\n            return instance.post<AuthLoginType, AxiosResponse<ResponseType<{ userId: number }>>>('auth/login', data)\r\n\r\n\r\n        },\r\n        */\r\n\r\nexport type AuthLoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../n2-features/f1-auth/a1-login/AuthApi\";\r\n\r\n\r\nlet initialState = {\r\n    avatar: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    _id: '',\r\n}\r\n\r\nexport type InitialProfileType = {\r\n    avatar: string\r\n    email: string\r\n    name: string\r\n    publicCardPacksCount: number\r\n    _id: string\r\n}\r\n//1\r\nexport const profileReducer = (state: InitialProfileType = initialState, action: ActionsType): InitialProfileType => {\r\n    switch (action.type) {\r\n        case 'profile/SET-PROFILE':\r\n            return {\r\n                ...state, avatar: action.avatar, email: action.email, name: action.name,\r\n                publicCardPacksCount: action.publicCardPacksCount, _id: action._id\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n//ActionsCreators\r\n\r\nexport const setProfile = (data: InitialProfileType) => {\r\n    const {avatar, email, name, publicCardPacksCount, _id} = data\r\n    return ({type: 'profile/SET-PROFILE', avatar, email, name, publicCardPacksCount, _id} as const)\r\n}\r\n\r\n\r\n//Thunks\r\n\r\n\r\n//Types\r\n\r\nexport type SetProfileType = ReturnType<typeof setProfile>\r\n\r\n\r\ntype ActionsType = SetProfileType","import {Dispatch} from 'redux'\r\nimport {authAPI, AuthLoginType} from \"../../n2-features/f1-auth/a1-login/AuthApi\";\r\nimport {setProfile, SetProfileType} from \"./profileReducer\";\r\n\r\n\r\nlet initialState = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n    isInitilize: false\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n    isInitilize: boolean\r\n}\r\n\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'login/SET-IS-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'login/SET-IS-INITIALIZE':\r\n            return {...state, isInitilize: action.isInitilize}\r\n        default:\r\n            return {...state}\r\n    }\r\n\r\n}\r\n\r\n\r\n//ActionsCreators\r\n\r\nexport const setIsLoggedId = (value: boolean) => {\r\n    return ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n}\r\nexport const setIsInitialize = (isInitilize: boolean) => {\r\n    return ({type: 'login/SET-IS-INITIALIZE', isInitilize} as const)\r\n}\r\n\r\nexport const setIsError = (error: string) => {\r\n    return ({type: 'login/SET-IS-ERROR', error} as const)\r\n}\r\n\r\n//Thunks\r\nexport const LoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType | SetProfileType>) => {\r\n    authAPI.login({email, password, rememberMe}).then(res => {\r\n            dispatch(setIsLoggedId(true))\r\n            dispatch(setProfile(res.data))\r\n\r\n        }\r\n    ).catch(e => {\r\n            e.response ? dispatch(setIsError(e.response.data.error))\r\n                : dispatch(setIsError(e.message + ', more details in the console'));\r\n        }\r\n    )\r\n}\r\n\r\nexport const InitializeTC = () => (dispatch: Dispatch) => {\r\n    authAPI.me().then(res => {\r\n            dispatch(setIsLoggedId(true))\r\n            dispatch(setProfile(res.data))\r\n        }\r\n    ).catch(e => {\r\n            dispatch(setIsLoggedId(false))\r\n        }\r\n    ).finally(() => {\r\n        dispatch(setIsInitialize(true))\r\n    })\r\n}\r\nexport const LogoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI.logout().then(res => {\r\n            dispatch(setIsLoggedId(false))\r\n\r\n        }\r\n    ).catch(e => {\r\n            e.response ? dispatch(setIsError(e.response.data.error))\r\n                : dispatch(setIsError(e.message + ', more details in the console'));\r\n        }\r\n    )\r\n}\r\n\r\n\r\n//Types\r\n\r\ntype SetIsLoggedIdType = ReturnType<typeof setIsLoggedId>\r\ntype SetIsErrorType = ReturnType<typeof setIsError>\r\ntype SetIsInitializeType = ReturnType<typeof setIsInitialize>\r\n\r\ntype ActionsType = SetIsLoggedIdType | SetIsErrorType | SetIsInitializeType","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {LogoutTC} from \"../../m2-bll/authReducer\";\r\n\r\nexport const Header = () => {\r\n    const dispatch = useDispatch()\r\n    const logout = () => {\r\n        dispatch(LogoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={'/profile'}><div className={s.logo}>BrightCards</div></NavLink>\r\n            <div className={s.links}>\r\n                <NavLink className={s.item} to={'/table'}>Table</NavLink>\r\n                <NavLink className={s.item} to={'/login'}>Login</NavLink>\r\n                <NavLink className={s.item} to={'/registration'}>Registration</NavLink>\r\n                <NavLink className={s.item} to={'/profile'}>Profile</NavLink>\r\n                <NavLink className={s.item} to={'/passwordrecovery'}>PasswordRecovery</NavLink>\r\n                <NavLink className={s.item} to={'/tests'}>Tests</NavLink>\r\n                <a className={s.link} onClick={logout}>Log out</a>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\ntype ResponseType = {\r\n    addedUser: {\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        rememberMe: boolean\r\n        updated: string\r\n        _id: string\r\n    }\r\n}\r\n\r\nexport const registrationAPI = {\r\n    registration(email: string, password: string ){\r\n        return instance.post<ResponseType>(`auth/register`, { email, password} )\r\n    }\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"../../n2-features/f1-auth/a2-register/RegistrationAPI\";\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const initialState = {\r\n    error: null as null | string,\r\n    isRegistered: false\r\n}\r\nexport const registrationReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case  'REGISTRATION-USER':\r\n            return {...state, isRegistered: action.isRegistered}\r\n\r\n        case  'SET-ERROR-MESSAGE':\r\n            return {...state, error: action.error}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const registrationAC = (isRegistered: boolean) => ({type: 'REGISTRATION-USER', isRegistered} as const)\r\nexport const setErrorMessageAC = (error: string | null) => ({type: 'SET-ERROR-MESSAGE', error} as const)\r\n\r\nexport const registrationTC = (email: string, password: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            const response = await registrationAPI.registration(email, password)\r\n            dispatch(registrationAC(true))\r\n\r\n        } catch (e: any) {\r\n            const errorMessage = e.response ? e.response.data.error :\r\n                (e.message + ', more details in the the console')\r\n            dispatch(setErrorMessageAC(errorMessage))\r\n            dispatch(registrationAC(false))\r\n        }\r\n    }\r\n}\r\nexport type RegistrationType = ReturnType<typeof registrationAC>\r\nexport type SetErrorMessageType = ReturnType<typeof setErrorMessageAC>\r\n\r\ntype ActionType = RegistrationType | SetErrorMessageType","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                // type={'password'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from '../../../n1-main/m2-bll/store'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"../../f0-test/Examples/Examples.module.scss\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport style from './Registration.module.scss'\r\nimport {setErrorMessageAC} from \"../../../n1-main/m2-bll/registrationReducer\";\r\n\r\n\r\ntype PropsType = {\r\n    email: string\r\n    setEmail: (email: string) => void\r\n    password: string\r\n    setPassword: (password: string) => void\r\n    repeatPassword: string\r\n    setRepeatPassword: (repeatPassword: string) => void\r\n    register: () => void\r\n}\r\nexport const Registration = (props: PropsType) => {\r\n    const {\r\n        email,\r\n        setEmail,\r\n        password,\r\n        setPassword,\r\n        repeatPassword,\r\n        setRepeatPassword,\r\n        register\r\n    } = props\r\n\r\n    const error = useSelector<AppStoreType, null | string>(state => state.registration.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const emailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setErrorMessageAC(''))\r\n    }\r\n\r\n    const setPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n        dispatch(setErrorMessageAC(''))\r\n    }\r\n    const setRepeatPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatPassword(e.currentTarget.value)\r\n        dispatch(setErrorMessageAC(''))\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.block}>\r\n            <div className={style.form}>\r\n                <p className={style.text}>Registration</p>\r\n\r\n                <label>\r\n                    <SuperInputText\r\n                        value={email}\r\n                        onChange={emailHandler}\r\n                        className={`${s.testSpanError}${style.placeholder}`}\r\n                        placeholder={'enter your email'}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <SuperInputText\r\n                        type={'password'}\r\n                        value={password}\r\n                        onChange={setPasswordHandler}\r\n                        className={s.testSpanError}\r\n                        placeholder={'enter  your password'}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <SuperInputText\r\n                        type={'password'}\r\n                        value={repeatPassword}\r\n                        onChange={setRepeatPasswordHandler}\r\n                        className={s.testSpanError}\r\n                        placeholder={'repeat  your password'}\r\n                    />\r\n                </label>\r\n\r\n                {error !== null && <div className={style.error}>{error}</div>}\r\n\r\n                <div>\r\n                    <SuperButton onClick={register} className={s.superButton}>\r\n                        registration\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {registrationTC, setErrorMessageAC} from \"../../../n1-main/m2-bll/registrationReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Registration} from \"./Registration\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const RegistrationContainer = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.registration.isRegistered)\r\n\r\n    const register = () => {\r\n        dispatch(setErrorMessageAC(null))\r\n        if (password === repeatPassword) {\r\n            dispatch(registrationTC(email, password))\r\n        } else {\r\n            dispatch(setErrorMessageAC('password mismatch'))\r\n        }\r\n        setEmail('')\r\n        setPassword('')\r\n        setRepeatPassword('')\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Registration\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                repeatPassword={repeatPassword}\r\n                setPassword={setPassword}\r\n                setRepeatPassword={setRepeatPassword}\r\n                register={register}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {InitialProfileType, SetProfileType} from \"../../../n1-main/m2-bll/profileReducer\";\r\nimport s from './profile.module.scss'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const Profile = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const {\r\n        avatar,\r\n        email,\r\n        name,\r\n        publicCardPacksCount,\r\n        _id\r\n    } = useSelector<AppStoreType, InitialProfileType>(state => state.profile)\r\n\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to='/login' />\r\n    }\r\n    return (\r\n            <div className={s.profileContainer}>\r\n                <div className={s.profile}>\r\n                    {avatar ? <img src={avatar} alt=\"\"/> : null}\r\n                    <span>{name}</span>\r\n                    <span>Количество карт: {publicCardPacksCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div>Page404</div>\r\n    );\r\n}","import axios from \"axios\";\r\nimport {SortPackType} from \"../cardsPack-reducer\";\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\n\r\nexport const cardsPackInstance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    ...settings\r\n})\r\n\r\nexport const cardsPackApi = {\r\n    getCardsPack(userId: string, pageCount: string, page: number,\r\n                 packName: string,sortPacks: SortPackType, min: number, max: number) {\r\n        return cardsPackInstance.get<GetCardsPackResponseType>(`cards/pack`, {params: {\r\n                user_id: userId, pageCount, page, packName,\r\n                sortPacks, min, max,\r\n            }})\r\n    },\r\n    addCardPack(cardPackName: string) {\r\n        const dataForPost: addCardsPackPostType = {\r\n            cardsPack: {\r\n                name: cardPackName\r\n            }\r\n        }\r\n        return cardsPackInstance.post<AddCardsPackResponseType>('cards/pack', dataForPost)\r\n    },\r\n    deleteCardPack(cardPackId: string) {\r\n        return cardsPackInstance.delete(`cards/pack?id=${cardPackId}`)\r\n    },\r\n    updateCardPack(cardPackId: string, newName: string) {\r\n        const dataForPost: updateCardsPackPostType = {\r\n            cardsPack: {\r\n                _id: cardPackId,\r\n                name: newName,\r\n            }\r\n        }\r\n        return cardsPackInstance.put('cards/pack', dataForPost)\r\n    },\r\n}\r\n\r\nexport type CardsPackType = {\r\n    cardsCount: number\r\n    created: string\r\n    deckCover?: string\r\n    grade: number // средняя оценка карточек\r\n    more_id: string\r\n    name: string\r\n    path: string // папка\r\n    private: boolean\r\n    rating: number // лайки\r\n    shots: number // количество попыток\r\n    type: string // ещё будет \"folder\" (папка)\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\ntype addCardsPackPostType = {\r\n    cardsPack: {\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: \"url\" | \"base64\"\r\n        private?: boolean\r\n        type?: string\r\n    }\r\n}\r\ntype updateCardsPackPostType = {\r\n    cardsPack: {\r\n        _id: string\r\n        name?: string // не обязательно\r\n    }\r\n}\r\ntype GetCardsPackResponseType = {\r\n    cardPacks: Array<CardsPackType>\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n\r\n}\r\ntype AddCardsPackResponseType = GetCardsPackResponseType & {\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n//DeleteCardPackResponse and updateCardPackResponse not typed because in task no need.\r\n\r\n// todo: Maybe need to type error.","import {cardsPackInstance} from \"./cardsPack-api\";\r\nimport axios from \"axios\";\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\n\r\nconst recoveryPasswordInstanceHeroku = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/', // this works only with heroku\r\n    ...settings\r\n})\r\n\r\nexport const passwordRecoveryApi = {\r\n    recoveryPassword(email: string) {\r\n        const dataForPost = {\r\n            email,\r\n            from: \"Briws <brightwiths@gmail.com>\",\r\n            /*message: `<div>password recovery link:<a href='http://localhost:3000/#/passwordnew/$token$'>link</a></div>`*/\r\n            message: `<div>password recovery link:<a href='https://neko-back.herokuapp.com/2.0/#/passwordnew/$token$'>link</a></div>`\r\n            // todo: need to change this before yarn deploy\r\n        }\r\n        return recoveryPasswordInstanceHeroku.post<ResponseType>('auth/forgot', dataForPost)\r\n    },\r\n    changePassword(password: string, resetPasswordToken: string) {\r\n        return cardsPackInstance.post<ResponseType>('auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n}\r\n\r\ntype ResponseType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\n\r\n// todo: Maybe need to type error.\r\n","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi} from \"./api/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    forgot: {\r\n        info: '',\r\n        errorText: ''\r\n    },\r\n    setNew: {\r\n        info: '',\r\n        errorText: ''\r\n    }\r\n}\r\n\r\nexport const recoveryReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"FORGOT-PASS/SHOW-INFO-AND-ERROR\":\r\n            return {...state, forgot: {info: action.forgot.infoText, errorText: action.forgot.errorText}}\r\n        case \"RESTORE-PASS/SHOW-INFO-AND-ERROR\":\r\n            return {...state, setNew: {info: action.setNew.infoText, errorText: action.setNew.errorText}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const forgotShowInfoAndErrorAC = (infoText: string, errorText: string) =>\r\n    ({type: 'FORGOT-PASS/SHOW-INFO-AND-ERROR', forgot: {infoText, errorText}} as const)\r\nexport const setNewShowInfoAndErrorAC = (infoText: string, errorText: string) =>\r\n    ({type: 'RESTORE-PASS/SHOW-INFO-AND-ERROR', setNew: {infoText, errorText}} as const)\r\n\r\nexport const forgotPasswordTC = (email: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        passwordRecoveryApi.recoveryPassword(email)\r\n            .then(res => {\r\n                dispatch(forgotShowInfoAndErrorAC(res.data.info, ''))\r\n            })\r\n            .catch(res => {\r\n                dispatch(forgotShowInfoAndErrorAC('', res.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        passwordRecoveryApi.changePassword(password, resetPasswordToken)\r\n            .then(res => {\r\n                dispatch(setNewShowInfoAndErrorAC(res.data.info, ''))\r\n            })\r\n            .catch(res => {\r\n                dispatch(setNewShowInfoAndErrorAC('', res.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    forgot: {\r\n        info: string\r\n        errorText: string\r\n    }\r\n    setNew: {\r\n        info: string\r\n        errorText: string\r\n    }\r\n\r\n}\r\ntype ActionType = ReturnType<typeof forgotShowInfoAndErrorAC> | ReturnType<typeof setNewShowInfoAndErrorAC>\r\n","import React, {useState} from 'react';\r\nimport s from './PasswordRecovery.module.scss'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"../../../n1-main/m2-bll/recovery-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    let infoText = useSelector<AppStoreType, string>(state => state.recoveryPassword.forgot.info)\r\n    let errorText = useSelector<AppStoreType, string>(state => state.recoveryPassword.forgot.errorText)\r\n\r\n    let statusText = ''\r\n    let classColor = ''\r\n    if (infoText !== '') {\r\n        statusText = infoText + ' You need to click recover link in you email.'\r\n        classColor = s.green\r\n    } else {\r\n        statusText = errorText\r\n        classColor = s.red\r\n    }\r\n    const onClickHandler = () => {\r\n        dispatch(forgotPasswordTC(email))\r\n    }\r\n\r\n    return (\r\n        <div className={s.passwordRecovery}>\r\n            <h1>This page will recover you password.</h1>\r\n            <p className={s.element}>Please enter you email to input bellow and click recover.</p>\r\n            <div className={s.element}>\r\n                <label>\r\n                    Your email:\r\n                    <SuperInputText value={email} onChangeText={setEmail} className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}><SuperButton onClick={onClickHandler} >Recover</SuperButton></div>\r\n            <div className={classColor}>{statusText}</div>\r\n        </div>\r\n\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport s from './PasswordNew.module.scss'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewPasswordTC} from \"../../../n1-main/m2-bll/recovery-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const PasswordNew = () => {\r\n    // test\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const [newPassword2, setNewPassword2] = useState<string>('')\r\n    let infoText = useSelector<AppStoreType, string>(state => state.recoveryPassword.setNew.info)\r\n    let errorText = useSelector<AppStoreType, string>(state => state.recoveryPassword.setNew.errorText)\r\n    const dispatch = useDispatch()\r\n    const [matchStatus, setMatchStatus] = useState('')\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n\r\n    const onClickHandler = () => {\r\n        if (newPassword !== newPassword2) {\r\n            setMatchStatus('passwords do not match')\r\n        } else {\r\n            setMatchStatus('')\r\n            dispatch(setNewPasswordTC(newPassword, token))\r\n        }\r\n    }\r\n\r\n    let statusText = ''\r\n    let classColor = ''\r\n    if (infoText !== '') {\r\n        statusText = infoText\r\n        classColor = s.green\r\n    } else {\r\n        statusText = errorText\r\n        classColor = s.red\r\n    }\r\n\r\n    return (\r\n        <div className={s.passwordNew}>\r\n            <h1>This page for changing you password.</h1>\r\n            <p className={s.element}>It will take token from address link and new password from inputs and then new\r\n                password will be set to you.</p>\r\n            <div className={s.element}>\r\n                <label className={s.oneSizeEl}>\r\n                    <div>New password:</div>\r\n                    <SuperInputText value={newPassword} onChangeText={setNewPassword} type={'password'}\r\n                                    className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}>\r\n                <label className={s.oneSizeEl}>\r\n                    <div>Password confirmation:</div>\r\n                    <SuperInputText value={newPassword2} onChangeText={setNewPassword2} type={'password'}\r\n                                    className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}><SuperButton onClick={onClickHandler} className={s.button}>Change\r\n                password</SuperButton></div>\r\n            <div className={s.red}>{matchStatus}</div>\r\n            <div className={classColor}>{statusText}</div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeChecked,\r\n    className, spanClassName,\r\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  }\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n  {\r\n    autoFocus, // игнорировать изменение этого пропса\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n    onEnter && onEnter() // оставлено на будущее, чтобы можно было возвращать событие по enter\r\n  }\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n    onBlur && onBlur(e)\r\n  }\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true) // включить editMode при двойном клике\r\n\r\n    onDoubleClick && onDoubleClick(e)\r\n  }\r\n\r\n  const spanClassName = `${s.editableSpan} ${className}`\r\n\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <SuperInputText\r\n            autoFocus // пропсу с булевым значением не обязательно указывать true\r\n            onBlur={onBlurCallback}\r\n            onEnter={onEnterCallback}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={onDoubleClickCallBack}\r\n            className={spanClassName}\r\n\r\n            {...restSpanProps}\r\n          >\r\n            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n            ✎ {children || restProps.value}\r\n                    </span>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: string[]\r\n  onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o, i) => (\r\n    <option className={s.option} key={'option-' + i} value={o}>{o}</option>\r\n  )) : []\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.scss'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => { // map options with key\r\n        return <label className={s.label} key={name + '-' + i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","const initialState: InitialStateType = {\r\n    testValue: ''\r\n}\r\n\r\nexport const testReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-TEST-VALUE':\r\n            return {...state, testValue: action.newValue}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTestValueAC = (newValue: string) =>\r\n    ({type: 'SET-TEST-VALUE', newValue} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    testValue: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setTestValueAC>","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setTestValueAC} from \"../../../n1-main/m2-bll/test-reducer\";\r\nimport s from './TestForReducer.module.scss'\r\n\r\nexport const TestForReducer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let reducerValue = useSelector<AppStoreType, string>(state => state.testReducer.testValue)\r\n\r\n    return <div className={s.testForReducer}>\r\n        <div>Hi, I am test for reducer. I will set 'test value' to state and will show it at the input, if you click the\r\n            button.\r\n        </div>\r\n        <div>\r\n            <SuperInputText value={reducerValue}/>\r\n            <SuperButton onClick={() => {dispatch(setTestValueAC('test value'))}}>Click Me</SuperButton>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Examples.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../../n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {TestForReducer} from \"../TestForReducer/TestForReducer\";\r\n\r\nexport const Examples = () => {\r\n    const [text, setText] = useState<string>('') // for SuperInputText\r\n    const [checked, setChecked] = useState<boolean>(false) // for SuperCheckbox\r\n    const [value, setValue] = useState<string>('') // for SuperEditableSpan\r\n    const arr = ['x', 'y', 'z'] // for SuperSelect & SuperRadio\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect & SuperRadio\r\n\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => { // for SuperButton\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.examples}>\r\n            <TestForReducer />\r\n            <h1>This is examples of common components.</h1>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <h2>с1-SuperInputText:</h2>\r\n                <div className={s.inputContainer}>\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        spanClassName={s.testSpanError}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        className={s.blue} // проверьте, работает ли смешивание классов\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с2-SuperButton:</h2>\r\n                <SuperButton className={s.superButton}>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.superButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <SuperButton disabled className={s.superButton}>\r\n                    disabled\r\n                </SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с3-SuperCheckbox:</h2>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div>\r\n                <h2>с4-SuperEditableSpan:</h2>\r\n                <div className={s.SuperEditableSpanContainer}>\r\n                    <SuperEditableSpan\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с5-SuperSelect and SuperRadio:</h2>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={valueForSsSr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={s.radioContainer}>\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={valueForSsSr}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, FormEvent, MouseEvent} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport s from './Login.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\n\r\nexport type LoginPropsType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    setEmail: (s: string) => void,\r\n    setPassword: (s: string) => void,\r\n    setRememberMe: (s: boolean) => void,\r\n    LoggedIn: (e: FormEvent<HTMLFormElement>) => void\r\n}\r\n\r\n\r\nexport const Login: React.FC<LoginPropsType> = (props) => {\r\n    const changeLogin = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n    const changePassword = (e:ChangeEvent<HTMLInputElement>) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n    const changeRemember = (e:ChangeEvent<HTMLInputElement>) => {\r\n        props.setRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const error = useSelector<AppStoreType, string | null>(state => state.auth.error)\r\n    return (\r\n        <div className={s.form}>\r\n            <form onSubmit={props.LoggedIn}>\r\n                <div className={s.border}>\r\n                    <div className={s.text}>Sign In</div>\r\n                    <div><SuperInputText value={props.email} onChange={changeLogin}/></div>\r\n                    <div><SuperInputText type={\"password\"} value={props.password} onChange={changePassword}/></div>\r\n                    {error ? <span>{error}</span> : null}\r\n                    <div><SuperCheckbox checked={props.rememberMe} onChange={changeRemember} className={s.checkbox} children={'Remember Me'}/></div>\r\n                    <div><SuperButton children={'Login'} /></div>\r\n                    <NavLink to={'/passwordrecovery'}>Forgot password</NavLink>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, {FormEvent, useState} from 'react';\r\nimport {Login} from \"./Login\";\r\nimport {authAPI} from \"./AuthApi\";\r\nimport {LoginTC} from \"../../../n1-main/m2-bll/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const LoginContainer: React.FC = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const LoggedIn = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(LoginTC(email, password, rememberMe));\r\n        setEmail('');\r\n        setPassword('');\r\n\r\n    }\r\n    if (isLoggedIn) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    return <Login email={email} password={password} rememberMe={rememberMe}\r\n                  setEmail={setEmail} setPassword={setPassword} setRememberMe={setRememberMe} LoggedIn={LoggedIn}/>\r\n}","import {Dispatch} from \"react\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {cardsPackApi, CardsPackType} from \"./api/cardsPack-api\";\r\n\r\n\r\n export type SortPackType = '0name' | '1name' | '0cardsCount' | '1cardsCount' | '0updated'| '1updated'| null\r\nconst initialState: InitialStateType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 10,\r\n    pageCount: 5,\r\n    page: 1,\r\n    userIdAfterRadio: '',\r\n    packName: '',\r\n    sortPacks:null,\r\n    max: 4,\r\n    min: 0,\r\n    selectedCardPackId: ''\r\n\r\n}\r\n\r\nexport const cardsPackReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TABLE/SET-CARD-PACKS\":\r\n            return {...state, cardPacks: action.cardPack}\r\n        case \"TABLE/SET-CURRENT-PAGE\":\r\n            return {...state, page: action.page}\r\n        case \"TABLE/SET-TOTAL-COUNT\":\r\n            return {...state, cardPacksTotalCount: action.cardPacksTotalCount}\r\n        case \"TABLE/SET-PAGE-COUNT\":\r\n            return {...state, pageCount: action.pageCount}\r\n        case \"TABLE/SET-USER-ID-AFTER-RADIO\":\r\n            return {...state, userIdAfterRadio: action.userIdAfterRadio}\r\n        case \"TABLE/SET-SEARCH-PACK-NAME\":\r\n            return {...state, packName: action.packName}\r\n        case \"TABLE/SORT-PACKS\":\r\n            return {...state, sortPacks: action.sortPacks}\r\n        case \"TABLE/SET-CARDS-COUNT\":\r\n            return {...state, max: action.max, min: action.min}\r\n        case \"TABLE/SET-SELECTED-CARD-PACK\":\r\n            return {...state, selectedCardPackId: action.cardPackId}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    cardPacks: Array<CardsPackType>\r\n    cardPacksTotalCount: number\r\n    pageCount: number\r\n    page: number\r\n    userIdAfterRadio: string\r\n    packName: string\r\n    sortPacks: SortPackType\r\n    min: number\r\n    max: number\r\n    selectedCardPackId: string\r\n}\r\n\r\nexport const setSearchPackNameAC = (packName: string) =>\r\n    ({type: 'TABLE/SET-SEARCH-PACK-NAME', packName} as const)\r\n\r\nexport const setCardPacksAC = (cardPack: Array<CardsPackType>) =>\r\n    ({type: 'TABLE/SET-CARD-PACKS', cardPack} as const)\r\n\r\nexport const setCurrentPageAC = (page: number) =>\r\n    ({type: 'TABLE/SET-CURRENT-PAGE', page} as const)\r\n\r\nexport const setTotalCountAC = (cardPacksTotalCount: number) =>\r\n    ({type: 'TABLE/SET-TOTAL-COUNT', cardPacksTotalCount,} as const)\r\n\r\nexport const setPageCountAC = (pageCount: number) =>\r\n    ({type: 'TABLE/SET-PAGE-COUNT', pageCount,} as const)\r\n\r\nexport const setUserIdAfterRadioAC = (userIdAfterRadio: string) =>\r\n    ({type: 'TABLE/SET-USER-ID-AFTER-RADIO', userIdAfterRadio} as const)\r\n\r\nexport const sortPacksAC = (sortPacks: SortPackType) =>\r\n    ({type: 'TABLE/SORT-PACKS', sortPacks} as const)\r\n\r\nexport const setCardsCountAC = (min: number,max: number ) =>  //минимальное и максимальное число карт\r\n    ({type: 'TABLE/SET-CARDS-COUNT', min, max,} as const)\r\n\r\nexport const setSelectedCardPack = (cardPackId: string) =>\r\n    ({type: 'TABLE/SET-SELECTED-CARD-PACK', cardPackId} as const)\r\n\r\nexport const getCardsPackTC = () => {\r\n    return (dispatch: Dispatch<ActionType>, getState: () => AppStoreType) => {\r\n        const page = getState().table.page\r\n        const packName = getState().table.packName\r\n        const pageCount = getState().table.pageCount.toString()\r\n        const userIdAfterRadio = getState().table.userIdAfterRadio\r\n        const sortPacks = getState().table.sortPacks\r\n        const min = getState().table.min\r\n        const max = getState().table.max\r\n\r\n        cardsPackApi.getCardsPack(userIdAfterRadio, pageCount, page,\r\n            packName, sortPacks, min, max,)\r\n            .then((res) => {\r\n                dispatch(setCardPacksAC(res.data.cardPacks))\r\n                dispatch(setTotalCountAC(res.data.cardPacksTotalCount))\r\n                dispatch(setCurrentPageAC(res.data.page))\r\n                console.log('getCardsPack then:', res.data.cardPacks)\r\n            })\r\n            .catch((res) => {\r\n                console.log('getCardsPack catch:', res.response.data.error)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const addCardsPackTC = (cardPackName: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsPackApi.addCardPack(cardPackName)\r\n            .then(res => {\r\n                console.log('addCardsPackTC then:', res.data)\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('addCardsPackTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCardsPackTC = (cardPackId: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsPackApi.deleteCardPack(cardPackId)\r\n            .then(res => {\r\n                console.log('deleteCardsPackTC then:', res)\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('deleteCardsPackTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateCardPackTC = (cardPackId: string, newName: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsPackApi.updateCardPack(cardPackId, newName)\r\n            .then(res => {\r\n                console.log('updateCardPackTC then:', res)\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('updateCardPackTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setCardPacksAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalCountAC>\r\n    | ReturnType<typeof setPageCountAC>\r\n    | ReturnType<typeof setUserIdAfterRadioAC>\r\n    | ReturnType<typeof setSearchPackNameAC>\r\n    | ReturnType<typeof sortPacksAC>\r\n    | ReturnType<typeof setCardsCountAC>\r\n    | ReturnType<typeof setSearchPackNameAC>\r\n    | ReturnType<typeof setSelectedCardPack>\r\n\r\ntype AppThunk = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport style from './Pagination.module.css'\r\nimport {getCardsPackTC, setCurrentPageAC} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport SuperButton from '../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton';\r\n\r\nconst Pagination = () => {\r\n    const dispatch = useDispatch()\r\n    let pageCount = useSelector<AppStoreType, number>(state => state.table.pageCount) // кол-во элементов на одной стр\r\n    let cardPacksTotalCount = useSelector<AppStoreType, number>(state => state.table.cardPacksTotalCount)// кол-во колод\r\n    let page = useSelector<AppStoreType, number>(state => state.table.page)// выбранная страница\r\n\r\n\r\n    const currentPageHandler = (page: number) => {\r\n        dispatch(setCurrentPageAC(page))\r\n    }\r\n\r\n    let pagesCount = Math.ceil(cardPacksTotalCount / pageCount); //количество страниц всех!!! до пагинатора\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionSize = 10; // порция которая видна в пагинации\r\n    const portionCount = Math.ceil(pagesCount / portionSize) // количество порций по 10 страниц\r\n\r\n    const [portion, setPortion] = useState(1)\r\n    const leftNumber = (portion - 1) * portionSize + 1\r\n    const rightNumber = portion * portionSize\r\n    const correctValue = pages.filter((p) => p ? p >= leftNumber && p <= rightNumber : '')\r\n\r\n    return (\r\n        <div className={style.pagination}> {portion > 1 &&\r\n        <SuperButton onClick={() => {\r\n            setPortion(portion - 1)\r\n        }} className={style.btn}>Prev\r\n        </SuperButton>\r\n        }\r\n            {correctValue.map(p => {\r\n                return (\r\n                    <span\r\n                        key={p}\r\n                        className={`${style.item} ${page === p ? style.select : style.item}`}\r\n                        onClick={() => currentPageHandler(p)}>{p}\r\n                    </span>\r\n                )\r\n\r\n            })}\r\n            {portionCount > portion && <SuperButton onClick={() => {\r\n                setPortion(portion + 1)\r\n            }} className={style.btn}>Next\r\n            </SuperButton>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {getTrackBackground, Range} from 'react-range';\r\nimport style from './Range.module.css'\r\n\r\ntype  PropsType = {\r\n    values: number[]\r\n    setValues: ([]: number[]) => void\r\n}\r\nconst PriceRange: React.FC<PropsType> =props=> {\r\n    const {values, setValues} = props\r\n\r\n    return (\r\n        <div className={style.block}>\r\n            <h3>amount of cards</h3>\r\n        <Range\r\n            values={values}\r\n            step={1}\r\n            min={0}\r\n            max={100}\r\n            onChange={values => setValues(values)}\r\n            renderTrack={({props, children}) => (\r\n                <div\r\n                    onMouseDown={props.onMouseDown} //выполняется при нажатии клавиши\r\n                    onTouchStart={props.onTouchStart} //срабатывает при касании элемента(длинная)\r\n                    className={style.band}>\r\n\r\n                    <div\r\n                        ref={props.ref}\r\n                        style={{\r\n                            height: '5px',\r\n                            width: '100%',\r\n                            borderRadius: '4px',\r\n                            background: getTrackBackground({\r\n                                values: values,\r\n                                colors: ['#ccc', 'yellow', '#ccc'],\r\n                                min: 0,\r\n                                max: 100,\r\n                            }),\r\n                            alignSelf: 'center'}}>\r\n                        {children}\r\n\r\n                    </div>\r\n                </div>)}\r\n\r\n            renderThumb={({index, props, isDragged}) => (\r\n                <div\r\n                    {...props}\r\n                    className={style.slider}>\r\n\r\n                    <div className={style.numSlider}>\r\n                        {values[index].toFixed(0)}\r\n                        {/*// 10.12345 => 10; (1) => 10.1; (2) > 10.12; ...*/}\r\n                    </div>\r\n\r\n                    <div style={{\r\n                            height: '16px',\r\n                            width: '5px',\r\n                            backgroundColor: isDragged ? '#fbbf62' : '#CCC'}}/>\r\n                </div>)}\r\n        />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PriceRange;","import React, {ChangeEvent} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport style from './Search.module.css'\r\nimport PriceRange from \"../Range/Range\";\r\n\r\ntype PropsType = {\r\n    setSearchTerm: (search: string) => void\r\n    searchTerm: string\r\n    setValues: ([]: number[]) => void\r\n    values: number[]\r\n}\r\nconst Search = (props: PropsType) => {\r\n    const {\r\n        setSearchTerm,\r\n        searchTerm,\r\n        setValues,\r\n        values\r\n    } = props\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchTerm(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.block}>\r\n\r\n            <SuperInputText\r\n                value={searchTerm}\r\n                onChange={onChangeHandler}\r\n                placeholder={'enter name'}/>\r\n\r\n            <PriceRange\r\n                values={values}\r\n                setValues={setValues}\r\n            />\r\n        </div>)\r\n}\r\n\r\nexport default Search;","import React, {ChangeEvent} from 'react';\r\nimport s from './Settings.module.scss';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\ntype PropsType = {\r\n    setPageCountHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n    superRadioArr: Array<string>\r\n    profileOrPublic: string\r\n    onChangeProfileOrPublic: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nexport const Settings = (props: PropsType) => {\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.table.pageCount).toString()\r\n\r\n    return <div className={s.settings}>\r\n        <h2>Settings:</h2>\r\n        <label className={s.settingEl}>\r\n            How much Card Packs to show:\r\n            <SuperInputText value={pageCount} onChange={props.setPageCountHandler} className={s.input}\r\n                            type={\"number\"}/>\r\n        </label>\r\n        <label className={`${s.radioLabel} ${s.settingEl}`}>\r\n            <div>Profile Card Packs only or Public:</div>\r\n            <SuperRadio\r\n                options={props.superRadioArr}\r\n                value={props.profileOrPublic}\r\n                onChangeOption={props.onChangeProfileOrPublic}\r\n                className={s.radio}\r\n            />\r\n        </label>\r\n    </div>\r\n}","import React from 'react';\r\nimport s from './TableContent.module.scss'\r\nimport {TableHeaderModelType} from \"../Table/Table\";\r\n\r\ntype BodyType = {\r\n    id: string,\r\n    element: Array<string | number | JSX.Element>\r\n}\r\ntype PropsType = {\r\n    headerModel: TableHeaderModelType\r\n    bodyModel: Array<BodyType>\r\n}\r\n\r\n\r\nexport const TableContent: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.tableContent}>\r\n            <div className={s.tableHeader}>\r\n                {props.headerModel.map(m =>  <div key={m.id}>\r\n                    {m.element}</div>)}\r\n            </div>\r\n            <div className={s.tableBody}>\r\n                {props.bodyModel.map(e => {\r\n                    let cardPackId = e.id\r\n                    return <div className={s.bodyModel} key={e.id}>{\r\n                        e.element.map((e, index) => {\r\n                            return <div key={cardPackId + index}>{e}</div>\r\n                        })\r\n                    }</div>\r\n                })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport style from './SortPacks.module.css';\r\nimport {sortPacksAC, SortPackType} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\n\r\ntype PropsType = {\r\n    upperSort: SortPackType\r\n    lowerCount: SortPackType\r\n}\r\nconst SortPacks = (props: PropsType) => {\r\n    const dispatch = useDispatch()\r\n    const sortPack = useSelector<AppStoreType, SortPackType>((state)=> state.table.sortPacks)\r\n    const upperSortHandler = () => {\r\n        dispatch(sortPacksAC(props.upperSort))\r\n    }\r\n    const lowerSortHandler = () => {\r\n            dispatch(sortPacksAC(props.lowerCount))\r\n\r\n    }\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.block}>\r\n                <SuperButton className={style.btn} onClick={upperSortHandler}>\r\n                    ^\r\n                </SuperButton>\r\n                <SuperButton className={style.btn} onClick={lowerSortHandler}>\r\n                    v\r\n                </SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortPacks;","const initialState: InitialStateType = {\r\n    activeCardPackId: '',\r\n    modalDelCardsPackShowHide: false,\r\n    modalAddCardsPackShowHide: false,\r\n    modalUpdateCardsPackShowHide: false,\r\n    activeCardId: '',\r\n    modalDelCardShowHide: false,\r\n    modalAddCardShowHide: false,\r\n    modalUpdateCardShowHide: false,\r\n}\r\n\r\nexport const modalReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'MODAL/SET-ACTIVE-CARDS-PACK-ID':\r\n            return {...state, activeCardPackId: action.activeCardPackId}\r\n        case 'MODAL/CLOSE-ALL-MODALS':\r\n            return {...state, modalDelCardsPackShowHide: false, modalAddCardsPackShowHide: false,\r\n                modalUpdateCardsPackShowHide: false, modalDelCardShowHide: false, modalAddCardShowHide: false,\r\n                modalUpdateCardShowHide: false\r\n            }\r\n        case 'MODAL/SHOW-MODAL-DEL-CARDS-PACK':\r\n            return {...state, modalDelCardsPackShowHide: true}\r\n        case \"MODAL/SHOW-MODAL-ADD-CARDS-PACK\":\r\n            return {...state, modalAddCardsPackShowHide: true}\r\n        case \"MODAL/SHOW-MODAL-UPDATE-CARDS-PACK\":\r\n            return {...state, modalUpdateCardsPackShowHide: true}\r\n        case \"MODAL/SET-ACTIVE-CARD-ID\":\r\n            return {...state, activeCardId: action.activeCardId}\r\n        case \"MODAL/SHOW-MODAL-DEL-CARD\":\r\n            return {...state, modalDelCardShowHide: true}\r\n        case \"MODAL/SHOW-MODAL-ADD-CARD\":\r\n            return {...state, modalAddCardShowHide: true}\r\n        case \"MODAL/SHOW-MODAL-UPDATE-CARD\":\r\n            return {...state, modalUpdateCardShowHide: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setActiveCardPackAC = (activeCardPackId: string) =>\r\n    ({type: 'MODAL/SET-ACTIVE-CARDS-PACK-ID', activeCardPackId} as const)\r\nexport const closeAllModalsAC = () =>\r\n    ({type: 'MODAL/CLOSE-ALL-MODALS'} as const)\r\nexport const showModalDelCardsPackAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-DEL-CARDS-PACK'} as const)\r\nexport const showModalAddCardsPackAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-ADD-CARDS-PACK'} as const)\r\nexport const showModalUpdateCardsPackAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-UPDATE-CARDS-PACK'} as const)\r\nexport const showModalDelCardAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-DEL-CARD'} as const)\r\nexport const setActiveCardAC = (activeCardId: string) =>\r\n    ({type: 'MODAL/SET-ACTIVE-CARD-ID', activeCardId} as const)\r\nexport const showModalAddCardAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-ADD-CARD'} as const)\r\nexport const showModalUpdateCardAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-UPDATE-CARD'} as const)\r\n\r\ntype InitialStateType = {\r\n    activeCardPackId: string\r\n    modalDelCardsPackShowHide: boolean\r\n    modalAddCardsPackShowHide: boolean\r\n    modalUpdateCardsPackShowHide: boolean\r\n    activeCardId: string\r\n    modalDelCardShowHide: boolean\r\n    modalAddCardShowHide: boolean\r\n    modalUpdateCardShowHide: boolean\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setActiveCardPackAC>\r\n    | ReturnType<typeof closeAllModalsAC>\r\n    | ReturnType<typeof showModalDelCardsPackAC>\r\n    | ReturnType<typeof showModalAddCardsPackAC>\r\n    | ReturnType<typeof showModalUpdateCardsPackAC>\r\n    | ReturnType<typeof setActiveCardAC>\r\n    | ReturnType<typeof showModalDelCardAC>\r\n    | ReturnType<typeof showModalAddCardAC>\r\n    | ReturnType<typeof showModalUpdateCardAC>\r\n\r\n// todo: maybe possible to optimize boilerplate code is cases","import React from 'react';\r\nimport s from './Modal.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\n\r\ntype ModalPropsType = {\r\n    modalShowHide: boolean\r\n}\r\n\r\n\r\nexport const Modal: React.FC<ModalPropsType> = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    if (!props.modalShowHide) return null\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return <div className={s.modalBackground}>\r\n        <div className={s.modalWindow}>\r\n            <div className={s.modalContent}>\r\n                {props.children}\r\n            </div>\r\n            <div className={s.close} onClick={onCloseHandler}>X</div>\r\n        </div>\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport {addCardsPackTC} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\n\r\nexport const ModalAddCardsPack = () => {\r\n    const dispatch = useDispatch()\r\n    const [cardPackNameInModal, setCardPackNameInModal] = useState('')\r\n\r\n    const modalAddCardPackShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalAddCardsPackShowHide)\r\n\r\n    const addCardPackInModalButtonHandler = () => {\r\n        dispatch(addCardsPackTC(cardPackNameInModal))\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return <Modal modalShowHide={modalAddCardPackShowHide}>\r\n        Enter Card Pack name.\r\n        <div>\r\n            <SuperInputText value={cardPackNameInModal}\r\n                            onChangeText={setCardPackNameInModal}/>\r\n        </div>\r\n        <SuperButton onClick={addCardPackInModalButtonHandler}>Add Card Pack</SuperButton>\r\n    </Modal>\r\n}","import {deleteCardsPackTC} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const ModalDelCardsPack = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const activeCardPackId = useSelector<AppStoreType, string>(state => state.modal.activeCardPackId)\r\n    const modalDelCardPackShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalDelCardsPackShowHide)\r\n\r\n    const modalYesDelCardPackHandler = () => {\r\n        dispatch(deleteCardsPackTC(activeCardPackId))\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n    const modalNoDelCardPackHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n\r\n    }\r\n\r\n    return <Modal modalShowHide={modalDelCardPackShowHide}>\r\n        Are you sure you want to delete the Card Pack?\r\n        <div>\r\n            <SuperButton onClick={modalYesDelCardPackHandler}>Yes</SuperButton>\r\n            <SuperButton onClick={modalNoDelCardPackHandler}>No</SuperButton>\r\n        </div>\r\n    </Modal>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardsPackType} from \"../../../n1-main/m2-bll/api/cardsPack-api\";\r\nimport {updateCardPackTC} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport s from './ModalUpdateCardsPack.module.scss'\r\n\r\nexport const ModalUpdateCardsPack = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [cardsPackName, setCardPackName] = useState('')\r\n\r\n    const activeCardPackId = useSelector<AppStoreType, string>(state => state.modal.activeCardPackId)\r\n    const cardsPacks = useSelector<AppStoreType, Array<CardsPackType>>(state => state.table.cardPacks)\r\n\r\n    const cardsPack = cardsPacks.find(e => e._id === activeCardPackId)\r\n    let oldCardsPackName = ''\r\n    if (cardsPack) oldCardsPackName = cardsPack.name\r\n\r\n    useEffect(() => {\r\n        setCardPackName(oldCardsPackName)\r\n    }, [oldCardsPackName])\r\n\r\n    const modalUpdateCardsPackShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalUpdateCardsPackShowHide)\r\n\r\n    const buttonHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n        dispatch(updateCardPackTC(activeCardPackId, cardsPackName))\r\n    }\r\n\r\n    return <Modal modalShowHide={modalUpdateCardsPackShowHide}>\r\n        Enter new Cards Pack name.\r\n        <div>\r\n            <SuperInputText value={cardsPackName}\r\n                            onChangeText={setCardPackName}/>\r\n        </div>\r\n        <SuperButton onClick={buttonHandler} className={s.button}>Change Cards Pack name</SuperButton>\r\n    </Modal>\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport sContainer from '../../../n1-main/m1-ui/common/components/Container.module.scss'\r\nimport s from './Table.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCardsPackTC,\r\n    setCardsCountAC,\r\n    setPageCountAC,\r\n    setSearchPackNameAC,\r\n    setUserIdAfterRadioAC\r\n} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Search from \"../Search/Search\";\r\nimport {Settings} from \"../Settings/Settings\";\r\nimport {TableContent} from \"../TableContent/TableContent\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {CardsPackType} from \"../../../n1-main/m2-bll/api/cardsPack-api\";\r\nimport {v1} from \"uuid\";\r\nimport SortPacks from \"../SortPacks/SortPacks\";\r\nimport {\r\n    setActiveCardPackAC,\r\n    showModalAddCardsPackAC,\r\n    showModalDelCardsPackAC,\r\n    showModalUpdateCardsPackAC\r\n} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {ModalAddCardsPack} from \"../../f3-modal/ModalAddCardsPack/ModalAddCardsPack\";\r\nimport {ModalDelCardsPack} from \"../../f3-modal/ModalDelCardsPack/ModalDelCardsPack\";\r\nimport {ModalUpdateCardsPack} from \"../../f3-modal/ModalUpdateCardsPack/ModalUpdateCardsPack\";\r\nimport {useCustomDebounce} from \"../CustomHooks/CustomDebounce\";\r\nimport {useCustomRangeDebounce} from \"../CustomHooks/CustomRangeDebounse\";\r\n\r\nexport const Table = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userID = useSelector<AppStoreType, string>(state => state.profile._id)\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.table.pageCount).toString()\r\n    const page = useSelector<AppStoreType, number>(state => state.table.page)\r\n    const superRadioArr = ['Profile', 'Public']  // for SuperRadio in Settings\r\n    const cardsPacks = useSelector<AppStoreType, Array<CardsPackType>>(state => state.table.cardPacks)\r\n\r\n    const [profileOrPublic, onChangeProfileOrPublic] = useState(superRadioArr[0]) // for SuperRadio is Settings\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [values, setValues] = useState<number[]>([0, 100])\r\n    const debouncedSearchTerm = useCustomDebounce(searchTerm, 2000);\r\n    const debouncedRange = useCustomRangeDebounce(values, 2000)\r\n\r\n    useEffect(() => {\r\n        if (profileOrPublic === 'Public') {\r\n            dispatch(setUserIdAfterRadioAC(''))\r\n        } else {\r\n            dispatch(setUserIdAfterRadioAC(userID))\r\n        }\r\n        dispatch(setSearchPackNameAC(debouncedSearchTerm))\r\n        dispatch(setCardsCountAC(debouncedRange[0], debouncedRange[1]))\r\n        dispatch(getCardsPackTC())\r\n\r\n    }, [profileOrPublic, pageCount, page, debouncedSearchTerm, debouncedRange[0], debouncedRange[1]])\r\n\r\n    const setPageCountHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (Number(e.currentTarget.value) < 1) e.currentTarget.value = '1'\r\n        dispatch(setPageCountAC(Number(e.currentTarget.value)))\r\n    }\r\n    const delCardsPackHandler = (cardPackId: string) => {\r\n        dispatch(showModalDelCardsPackAC())\r\n        dispatch(setActiveCardPackAC(cardPackId))\r\n    }\r\n    const updateCardsPackHandler = (cardPackId: string) => {\r\n        dispatch(showModalUpdateCardsPackAC())\r\n        dispatch(setActiveCardPackAC(cardPackId))\r\n    }\r\n    const addCardPackButtonHandler = () => {\r\n        dispatch(showModalAddCardsPackAC())\r\n    }\r\n\r\n    const CardsPackHeader: TableHeaderModelType = [\r\n        {id: v1(), element: <div><span>Name</span><SortPacks upperSort={'0name'} lowerCount={'1name'}/></div>},\r\n        {\r\n            id: v1(),\r\n            element: <div><span>cardsCount</span><SortPacks upperSort={'0cardsCount'} lowerCount={'1cardsCount'}/></div>\r\n        },\r\n        {id: v1(), element: <div><span>updated</span><SortPacks upperSort={'0updated'} lowerCount={'1updated'}/></div>},\r\n        {id: v1(), element: <SuperButton onClick={addCardPackButtonHandler}>Add CardPack</SuperButton>},\r\n    ]\r\n\r\n    // remapping arrays for TableContent\r\n    const cardsPackMapped = cardsPacks.map(e => {\r\n        return {\r\n            id: e._id,\r\n            element: [\r\n                <NavLink className={s.item} exact to={`/cards/${e._id}`}>{e.name}</NavLink>,\r\n                e.cardsCount,\r\n                e.updated,\r\n                e.user_id === userID\r\n                    ? <div>\r\n                        <SuperButton className={s.button} onClick={() => delCardsPackHandler(e._id)}>del</SuperButton>\r\n                        <SuperButton className={s.button} onClick={() => updateCardsPackHandler(e._id)}>update</SuperButton>\r\n                        <NavLink className={s.item} exact to={`/learn/${e._id}`}> <SuperButton\r\n                            className={s.button}>Learn</SuperButton>\r\n                        </NavLink>\r\n                    </div>\r\n                    : <div>\r\n                        <NavLink className={s.item} exact to={`/learn/${e._id}`}> <SuperButton\r\n                            className={s.button}>Learn</SuperButton>\r\n                        </NavLink>\r\n                    </div>,\r\n            ]\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={`${sContainer.container} ${s.table}`}>\r\n            <ModalAddCardsPack/>\r\n            <ModalDelCardsPack/>\r\n            <ModalUpdateCardsPack/>\r\n            <h1>This is table of Card Packs.</h1>\r\n            <Search\r\n                searchTerm={searchTerm}\r\n                setSearchTerm={setSearchTerm}\r\n                values={values}\r\n                setValues={setValues}/>\r\n\r\n            <Settings setPageCountHandler={setPageCountHandler}\r\n                      superRadioArr={superRadioArr}\r\n                      profileOrPublic={profileOrPublic}\r\n                      onChangeProfileOrPublic={onChangeProfileOrPublic}\r\n            />\r\n\r\n            <TableContent headerModel={CardsPackHeader} bodyModel={cardsPackMapped}/>\r\n            <Pagination/>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype HeaderModelElementType = {\r\n    id: string,\r\n    element: string | JSX.Element\r\n}\r\n\r\nexport type TableHeaderModelType = Array<HeaderModelElementType>","import React, {useEffect, useState} from 'react';\r\n\r\nexport const useCustomDebounce = (value: string, delay: number) => {\r\n    const [state, setState] = useState(value)\r\n\r\n    useEffect(() => {\r\n        const setTime = setTimeout(() => {\r\n            setState(value)\r\n        }, delay)\r\n\r\n        return () => {\r\n            clearTimeout(setTime)\r\n        }\r\n    }, [value])\r\n    return state\r\n};\r\n\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nexport const useCustomRangeDebounce = (value: number[], delay: number) => {\r\n    const [range, setRange] = useState(value)\r\n    useEffect(()=>{\r\n        const setTime = setTimeout(()=>{\r\n            setRange(value)\r\n        }, delay)\r\n        return () =>{\r\n            clearTimeout(setTime)\r\n        }\r\n    },[value])\r\n    return range\r\n};\r\n\r\n","import {cardsPackInstance} from \"./cardsPack-api\";\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardsPack_id: string, page: number, pageCount: number) {\r\n        return cardsPackInstance.get<GetCardsResponseType>('/cards/card', {params: {cardsPack_id, page, pageCount}})\r\n    },\r\n    addCard(cardsPack_id: string, question: string, answer: string) {\r\n        const dataForPost = {\r\n            card: {\r\n                cardsPack_id,\r\n                question,\r\n                answer\r\n            }\r\n        }\r\n        return cardsPackInstance.post('cards/card', dataForPost)\r\n    },\r\n    deleteCard(card_id: string) {\r\n        return cardsPackInstance.delete(`cards/card?id=${card_id}`)\r\n    },\r\n    updateCard(card_id: string, newQuestion: string, newAnswer: string) {\r\n        const dataForPost = {\r\n            card: {\r\n                _id: card_id,\r\n                question: newQuestion,\r\n                answer: newAnswer,\r\n            }\r\n        }\r\n        return cardsPackInstance.put('cards/card', dataForPost)\r\n    },\r\n    updateCardGrade(card_id: string, grade: number){\r\n        return cardsPackInstance.put<UpdateCardGradeType>('cards/grade',{card_id, grade})\r\n    }\r\n}\r\n\r\ntype UpdateCardGradeType = {\r\n    _id: ''\r\n    cardsPack_id: ''\r\n    card_id: ''\r\n    user_id: ''\r\n    grade: number\r\n    shots: number\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\ntype GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n    response? : {data: {error: string}}\r\n}\r\n// DeleteCardResponseType and UpdateCardResponseType not typed because in task no need.\r\n\r\n// todo: Maybe need to type error.","import {cardsAPI, CardType} from \"./api/cards-api\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState: InitialStateType = {\r\n    cards: [],\r\n    pageCount: 1,\r\n    page: 1,\r\n    cardsTotalCount: 20,\r\n    grade: 3,\r\n    card_id: ''\r\n}\r\n\r\nexport const cardsReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"CARDS/SET-CARDS\":\r\n            return {...state, cards: action.cards}\r\n        case \"CARDS/SET-CURRENT-PAGE-CARDS\":\r\n            return {...state, page: action.page}\r\n        case \"CARDS/SET-TOTAL-COUNT-CARDS\":\r\n            return {...state, cardsTotalCount: action.cardsTotalCount}\r\n        case \"CARDS/SET-PAGE-COUNT-CARDS\":\r\n            return {...state, pageCount: action.pageCount}\r\n        case \"CARDS/SET-CARDS-GRADE\":\r\n            return {...state, cards: state.cards.map(c => c._id === action.card_id ? {...c , grade: action.grade } : c)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    cards: Array<CardType>\r\n    pageCount: number\r\n    page: number\r\n    cardsTotalCount: number\r\n    grade: number\r\n    card_id: string\r\n}\r\n\r\nexport const setCardsGradeAC = (card_id: string, grade: number) =>\r\n    ({type: 'CARDS/SET-CARDS-GRADE', card_id, grade} as const)\r\n\r\nexport const setCardsAC = (cards: Array<CardType>) =>\r\n    ({type: 'CARDS/SET-CARDS', cards} as const)\r\nexport const setCurrentPageCardsAC = (page: number) =>\r\n    ({type: 'CARDS/SET-CURRENT-PAGE-CARDS', page} as const)\r\nexport const setTotalCountCardsAC = (cardsTotalCount: number) =>\r\n    ({type: 'CARDS/SET-TOTAL-COUNT-CARDS', cardsTotalCount,} as const)\r\nexport const setPageCountCardsAC = (pageCount: number) =>\r\n    ({type: 'CARDS/SET-PAGE-COUNT-CARDS', pageCount,} as const)\r\n\r\nexport const getCardsTC = (): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        const cardsPack_id = getState().table.selectedCardPackId;\r\n        const page = getState().cards.page\r\n        const pageCount = getState().cards.pageCount\r\n        cardsAPI.getCards(cardsPack_id, page, pageCount)\r\n            .then(res => {\r\n                console.log('getCardsTC then:', res.data)\r\n                dispatch(setCardsAC(res.data.cards))\r\n                dispatch(setCurrentPageCardsAC(res.data.page))\r\n                dispatch(setPageCountCardsAC(res.data.pageCount))\r\n                dispatch(setTotalCountCardsAC(res.data.cardsTotalCount))\r\n            })\r\n            .catch(res => {\r\n                console.log('getCardsTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const addCardTC = (question: string, answer: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        const cardsPack_id = getState().table.selectedCardPackId;\r\n\r\n        cardsAPI.addCard(cardsPack_id, question, answer)\r\n            .then(res => {\r\n                console.log('addCardTC then:', res)\r\n                dispatch(getCardsTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('addCardTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateCardTC = (cardId: string, newQuestion: string, newAnswer: string): AppThunk => {\r\n    return (dispatch) => {\r\n        cardsAPI.updateCard(cardId, newQuestion, newAnswer)\r\n            .then(res => {\r\n                dispatch(getCardsTC())\r\n                console.log('updateCardTC then:', res)\r\n\r\n            })\r\n            .catch(res => {\r\n                console.log('updateCardTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCardTC = (cardId: string): AppThunk => {\r\n    return (dispatch) => {\r\n        cardsAPI.deleteCard(cardId)\r\n            .then(res => {\r\n                dispatch(getCardsTC())\r\n                console.log('deleteCardTC then:', res)\r\n            })\r\n            .catch(res => {\r\n                console.log('deleteCardTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const setCardsGrade = (cardId: string, grade: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        cardsAPI.updateCardGrade(cardId, grade)\r\n            .then(res => {\r\n               dispatch(setCardsGradeAC(res.data.card_id, res.data.grade))\r\n            })\r\n            .catch(res =>{\r\n                console.log(res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setCurrentPageCardsAC>\r\n    | ReturnType<typeof setTotalCountCardsAC>\r\n    | ReturnType<typeof setPageCountCardsAC>\r\n    | ReturnType<typeof setCardsGradeAC>\r\n\r\ntype AppThunk = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {setPageCountCardsAC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from './Select.module.scss'\r\n\r\ntype PropsType = {\r\n    pageCountCards: number\r\n}\r\nconst Select =(props: PropsType) => {\r\n    const {pageCountCards} = props\r\n    const dispatch = useDispatch()\r\n    const [state, setState] = useState<number>(pageCountCards)\r\n\r\n    const onClickHandler = () =>{\r\n        dispatch(setPageCountCardsAC(state))\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLSelectElement>)=>{\r\n        setState(+e.currentTarget.value)\r\n    }\r\n    const arOptions = Array.from(Array(30).keys())\r\n    const option = arOptions.map((index,arr)=> {\r\n        return <option key={index}>{arr}</option>\r\n    })\r\n    return (\r\n        <div>\r\n            <select value={state}\r\n                    onChange={onChangeHandler}\r\n                    onClick={onClickHandler}\r\n                    className={style.select}>\r\n                {option}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;","import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from './Pagination.module.css'\r\nimport SuperButton from '../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton';\r\nimport {setCurrentPageCardsAC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport Select from \"../Select/Select\";\r\n\r\n\r\ntype PropsType = {\r\n    pageCard: number\r\n    pageCountCards: number\r\n    cardsTotalCountCards: number\r\n\r\n}\r\nconst CardsPagination = (props: PropsType) => {\r\n    const {pageCard, pageCountCards,cardsTotalCountCards } = props\r\n    const dispatch = useDispatch()\r\n\r\n    const currentPageHandler = (page: number) => {\r\n        dispatch(setCurrentPageCardsAC(page))\r\n    }\r\n\r\n    let pagesCountCards = Math.ceil(cardsTotalCountCards / pageCountCards); //количество страниц всех!!! до пагинатора\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCountCards; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionSize = 10; // порция которая видна в пагинации\r\n    const portionCount = Math.ceil(pagesCountCards / portionSize) // количество порций по 5 страниц\r\n\r\n    const [portion, setPortion] = useState(1)\r\n    const leftNumber = (portion - 1) * portionSize + 1\r\n    const rightNumber = portion * portionSize\r\n    const correctValue = pages.filter((p) => p ? p >= leftNumber && p <= rightNumber : '')\r\n\r\n\r\n    return (\r\n        <div className={style.pagination}>\r\n           <Select pageCountCards={pageCountCards}/>\r\n\r\n            {portion > 1 &&\r\n        <SuperButton onClick={() => {\r\n            setPortion(portion - 1)\r\n        }} className={style.btn}>Prev\r\n        </SuperButton>\r\n        }\r\n            {correctValue.map(p => {\r\n                return (\r\n                    <span\r\n                        key={p}\r\n                        className={`${style.item} ${pageCard === p ? style.select : style.item}`}\r\n                        onClick={() => currentPageHandler(p)}>{p}\r\n                    </span>\r\n                )\r\n\r\n            })}\r\n            {portionCount > portion && <SuperButton onClick={() => {\r\n                setPortion(portion + 1)\r\n            }} className={style.btn}>Next\r\n            </SuperButton>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default CardsPagination;","import React from \"react\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {deleteCardTC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\n\r\nexport const ModalDelCard = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const modalDelCardShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalDelCardShowHide)\r\n    const activeCardId = useSelector<AppStoreType, string>(state => state.modal.activeCardId)\r\n\r\n    const modalYesDelCardPackHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n        dispatch(deleteCardTC(activeCardId))\r\n    }\r\n    const modalNoDelCardPackHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n\r\n    }\r\n\r\n    return <Modal modalShowHide={modalDelCardShowHide}>\r\n        Are you sure you want to delete the Card?\r\n        <div>\r\n            <SuperButton onClick={modalYesDelCardPackHandler}>Yes</SuperButton>\r\n            <SuperButton onClick={modalNoDelCardPackHandler}>No</SuperButton>\r\n        </div>\r\n    </Modal>\r\n}","import React, {useState} from \"react\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {addCardTC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport sInput from '../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss'\r\n\r\nexport const ModalAddCard = () => {\r\n    const dispatch = useDispatch()\r\n    const modalAddCardShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalAddCardShowHide)\r\n\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const buttonHandler = () => {\r\n        dispatch(addCardTC(question, answer))\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return <Modal modalShowHide={modalAddCardShowHide}>\r\n        <div>Enter Card question:</div>\r\n        <textarea className={sInput.input} value={question} onChange={(e) => {setQuestion(e.target.value)}} />\r\n        <div>Enter Card answer:</div>\r\n        <textarea className={sInput.input} value={answer} onChange={(e) => {setAnswer(e.target.value)}} />\r\n        <SuperButton onClick={buttonHandler}>Add Card</SuperButton>\r\n    </Modal>\r\n}\r\n\r\n// todo: Separate textarea to common component","import React, {useEffect, useState} from \"react\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\nimport {updateCardTC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\n\r\nexport const ModalUpdateCard = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const modalUpdateCardShowHide = useSelector<AppStoreType, boolean>(state =>\r\n        state.modal.modalUpdateCardShowHide)\r\n    const activeCardId = useSelector<AppStoreType, string>(state => state.modal.activeCardId)\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n\r\n    const card = cards.find(e => e._id === activeCardId)\r\n    let oldCardQuestion = ''\r\n    let oldCardAnswer = ''\r\n    if (card) {\r\n        oldCardQuestion = card.question\r\n        oldCardAnswer = card.answer\r\n    }\r\n\r\n    useEffect(() => {\r\n        setQuestion(oldCardQuestion)\r\n        setAnswer(oldCardAnswer)\r\n    },[oldCardQuestion, oldCardAnswer])\r\n\r\n    const buttonHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n        dispatch(updateCardTC(activeCardId, question, answer))\r\n    }\r\n\r\n    return <Modal modalShowHide={modalUpdateCardShowHide}>\r\n        <div>Enter new Card question:</div>\r\n        <SuperInputText value={question} onChangeText={setQuestion}/>\r\n        <div>Enter new Card answer:</div>\r\n        <SuperInputText value={answer} onChangeText={setAnswer}/>\r\n        <SuperButton onClick={buttonHandler}>Change Card</SuperButton>\r\n    </Modal>\r\n}","import React, {useEffect} from 'react';\r\nimport {v1} from \"uuid\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport s from \"../Table/Table.module.scss\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\nimport {getCardsTC, updateCardTC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport {TableHeaderModelType} from \"../Table/Table\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {TableContent} from \"../TableContent/TableContent\";\r\nimport {setSelectedCardPack} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport CardsPagination from \"../Pagination/CardsPagination\";\r\nimport {\r\n    setActiveCardAC,\r\n    showModalAddCardAC,\r\n    showModalDelCardAC,\r\n    showModalUpdateCardAC\r\n} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {ModalDelCard} from \"../../f3-modal/ModalDelCard/ModalDelCard\";\r\nimport {ModalAddCard} from \"../../f3-modal/ModalAddCard/ModalAddCard\";\r\nimport {ModalUpdateCard} from \"../../f3-modal/ModalUpdateCard/ModalUpdateCard\";\r\n\r\nconst Cards = () => {\r\n    const {packid} = useParams<{ packid: string }>();\r\n    const dispatch = useDispatch()\r\n\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n    const userID = useSelector<AppStoreType, string>(state => state.profile._id)\r\n\r\n    let pageCount = useSelector<AppStoreType, number>(state => state.cards.pageCount) // кол-во элементов на одной стр\r\n    let cardsTotalCount = useSelector<AppStoreType, number>(state => state.cards.cardsTotalCount)// кол-во карт\r\n    let page = useSelector<AppStoreType, number>(state => state.cards.page)// выбранная страница\r\n    useEffect(() => {\r\n        if (!!packid) {\r\n            dispatch(setSelectedCardPack(packid))\r\n            dispatch(getCardsTC())\r\n        }\r\n    }, [packid, pageCount, page])\r\n\r\n    const addCardButtonHandler = () => {\r\n        dispatch(showModalAddCardAC())\r\n    }\r\n\r\n    const delCardsHandler = (cardId: string) => {\r\n        dispatch(setActiveCardAC(cardId))\r\n        dispatch(showModalDelCardAC())\r\n    }\r\n\r\n    const updateCardsHandler = (cardId: string) => {\r\n        // dispatch(updateCardTC(cardId, 'UpdatedQuestion'))\r\n        dispatch(setActiveCardAC(cardId))\r\n        dispatch(showModalUpdateCardAC())\r\n    }\r\n\r\n\r\n    const CardsHeader: TableHeaderModelType = [\r\n        {id: v1(), element: 'question'},\r\n        {id: v1(), element: 'answer'},\r\n        {id: v1(), element: 'created'},\r\n        {id: v1(), element: 'shots'},\r\n        {id: v1(), element: 'grade'},\r\n        {id: v1(), element: <SuperButton onClick={addCardButtonHandler}>Add Card</SuperButton>},\r\n    ]\r\n\r\n    let cardHeader = CardsHeader.map(el => {\r\n        return {id: v1(), element: el.element}\r\n    })\r\n    const cardsMapped = cards.map(e => {\r\n        return {\r\n            id: e._id,\r\n            element: [\r\n                e.question,\r\n                e.answer,\r\n                e.created,\r\n                e.shots,\r\n                <div className={s.star}>{\r\n                    Math.round(e.grade) == 1 ? '⁎' : Math.round(e.grade) == 2 ? '⁎⁎' :\r\n                        Math.round(e.grade) == 3 ? '⁎⁎⁎' : Math.round(e.grade) == 4 ? '⁎⁎⁎⁎' :\r\n                            Math.round(e.grade) == 5 ? '⁎⁎⁎⁎⁎' : ''}</div>,\r\n                e.user_id === userID\r\n                    ? <div>\r\n                        <SuperButton className={s.button} onClick={() => delCardsHandler(e._id)}>del</SuperButton>\r\n                        <SuperButton className={s.button} onClick={() => updateCardsHandler(e._id)}>update</SuperButton>\r\n                    </div>\r\n                    : <div> </div>\r\n            ]\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <ModalAddCard />\r\n            <ModalDelCard />\r\n            <ModalUpdateCard />\r\n            <h1>This is table of Cards for selected Card Pack.</h1>\r\n            <TableContent headerModel={cardHeader} bodyModel={cardsMapped}/>\r\n            <CardsPagination pageCard={page} pageCountCards={pageCount} cardsTotalCountCards={cardsTotalCount}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React, {useState} from 'react';\r\nimport s from './Learn.module.scss'\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCardsGrade} from \"../../../n1-main/m2-bll/cards-reducer\";\r\n\r\nexport type LearnPropsType = {\r\n    card: CardType\r\n    nextCard: () => void\r\n}\r\n\r\nexport const Learn = (props: LearnPropsType) => {\r\n    const [hidden, setHidden] = useState(true)\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (grade: number) => {\r\n        dispatch(setCardsGrade(props.card._id, grade))\r\n    }\r\n    const nextCard = () => {\r\n        props.nextCard()\r\n        setHidden(true)\r\n    }\r\n    const grades = [1, 2, 3, 4, 5]\r\n    return <div className={s.body}>\r\n        <span>{props.card.question}</span>\r\n\r\n        <div>\r\n            {hidden ? <SuperButton onClick={() => setHidden(false)}>Answer</SuperButton> :\r\n                <span>{props.card.answer}</span>}\r\n        </div>\r\n\r\n        {!hidden &&\r\n        <div className={s.grade}>\r\n            {grades.map((g, i) => (\r\n                <SuperButton key={i} className={s.gradeBtn} onClick={() => (submitHandler(g))}>{g}</SuperButton>\r\n            ))}\r\n        </div>}\r\n\r\n        <div className={s.btn}>\r\n            <NavLink exact to={`/table`}><SuperButton>Cancel</SuperButton></NavLink>\r\n            <SuperButton onClick={nextCard}>Next</SuperButton>\r\n        </div>\r\n\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\nimport {getCardsTC, setPageCountCardsAC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport {Learn} from \"./Learn\";\r\nimport {setSelectedCardPack} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {CardsPackType} from \"../../../n1-main/m2-bll/api/cardsPack-api\";\r\n\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n\r\n    return cards[res.id + 1];\r\n}\r\nlet initialCard: CardType = {\r\n    answer: '',\r\n    cardsPack_id: '',\r\n    comments: '',\r\n    created: '',\r\n    grade: 1,\r\n    more_id: '',\r\n    question: '',\r\n    rating: 1,\r\n    shots: 1,\r\n    type: '',\r\n    updated: '',\r\n    user_id: '',\r\n    __v: 1,\r\n    _id: '',\r\n}\r\nexport const LearnContainer = () => {\r\n    const {packid} = useParams<{ packid: string }>();\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n    const cardsPacks = useSelector<AppStoreType, Array<CardsPackType>>(state => state.table.cardPacks)\r\n\r\n    const cardsIndex = cardsPacks.find(cp => cp._id === packid)\r\n    let cardsCount = 0\r\n    if (cardsIndex) {\r\n        cardsCount = cardsIndex.cardsCount\r\n    }\r\n    console.log(cardsIndex)\r\n    let [card, setCards] = useState<CardType>(initialCard)\r\n    let [initial, setInitial] = useState<boolean>(false)\r\n\r\n    let nextCard = () => {\r\n        setCards(getCard(cards))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!initial) {\r\n            dispatch(setPageCountCardsAC(cardsCount))\r\n            dispatch(setSelectedCardPack(packid))\r\n            dispatch(getCardsTC())\r\n            setInitial(true)\r\n        }\r\n        if (cards.length > 0) {\r\n            setCards(getCard(cards))\r\n        }\r\n\r\n    }, [packid, cards])\r\n\r\n\r\n    return <Learn card={card} nextCard={nextCard}  />\r\n}","import React, {useState} from 'react';\r\nimport {Header} from \"../p1-header/Header\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {RegistrationContainer} from \"../../../n2-features/f1-auth/a2-register/RegistrationContainer\";\r\nimport {Profile} from \"../../../n2-features/f1-auth/a3-profile/Profile\";\r\nimport {Page404} from \"../../../n2-features/f1-auth/Page404\";\r\nimport {PasswordRecovery} from \"../../../n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery\";\r\nimport {PasswordNew} from \"../../../n2-features/f1-auth/a4-passwordNew/PasswordNew\";\r\nimport {Examples} from \"../../../n2-features/f0-test/Examples/Examples\";\r\nimport {LoginContainer} from \"../../../n2-features/f1-auth/a1-login/LoginContainer\";\r\nimport {Table} from \"../../../n2-features/f2-table/Table/Table\";\r\nimport Cards from \"../../../n2-features/f2-table/Cards/Cards\";\r\nimport { LearnContainer } from '../../../n2-features/f2-table/Learn/LearnContainer';\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Switch>\r\n                <Route path={'/table/:packid?'} render={() => <Table />}/> {/*delete if not need*/}\r\n                <Route path={'/cards/:packid?'} render={() => <Cards />}/>\r\n                <Route path={'/learn/:packid?'} render={() => <LearnContainer />}/>\r\n                <Route exact path={'/login'} render={() => <LoginContainer/>}/>\r\n                <Route exact path={'/registration'} render={() => <RegistrationContainer/>}/>\r\n                <Route exact path={'/profile'} render={() => <Profile/>}/>\r\n                <Route exact path={'/404'} render={() => <Page404/>}/>\r\n                <Route exact path={'/passwordrecovery'} render={() => <PasswordRecovery/>}/>\r\n                <Route exact path={'/passwordnew/:token'} render={() => <PasswordNew/>}/>\r\n                <Route exact path={'/tests'} render={() => <Examples/>}/>\r\n                <Redirect exact from={'/'} to={'/profile'}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"./p2-main/Main\";\r\nimport {InitializeTC} from \"../m2-bll/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../m2-bll/store\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useDispatch()\r\n    const isInitialize = useSelector<AppStoreType, boolean>(state => state.auth.isInitilize)\r\n    useEffect(() => {\r\n        dispatch(InitializeTC())\r\n    }, [])\r\n    return (\r\n        <div className=\"App\">\r\n            {isInitialize && <Main/>}\r\n        </div>\r\n    );\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {testReducer} from \"./test-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {recoveryReducer} from \"./recovery-reducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {cardsPackReducer} from \"./cardsPack-reducer\";\r\nimport {cardsReducer} from \"./cards-reducer\";\r\nimport {modalReducer} from \"./modal-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    testReducer: testReducer,\r\n    registration: registrationReducer,\r\n    recoveryPassword: recoveryReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    table: cardsPackReducer,\r\n    cards: cardsReducer,\r\n    modal: modalReducer,\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./n1-main/m1-ui/App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\n// new branch created\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n//j2\r\n\r\n//hello\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}