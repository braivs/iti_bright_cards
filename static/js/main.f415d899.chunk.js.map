{"version":3,"sources":["n2-features/f0-test/Examples/Examples.module.scss","n2-features/f2-table/Pagination/Pagination.module.css","n2-features/f1-auth/a4-passwordNew/PasswordNew.module.scss","n2-features/f2-table/Table/Table.module.scss","n1-main/m1-ui/p1-header/Header.module.scss","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.module.scss","n2-features/f2-table/Settings/Settings.module.scss","n2-features/f1-auth/a2-register/Registration.module.scss","n2-features/f1-auth/a1-login/Login.module.scss","n2-features/f2-table/Range/Range.module.css","n2-features/f2-table/TableContent/TableContent.module.scss","n2-features/f2-table/SortPacks/SortPacks.module.css","n2-features/f3-modal/Modal/Modal.module.scss","n2-features/f2-table/Learn/Learn.module.scss","n1-main/m1-ui/common/c2-SuperButton/SuperButton.module.scss","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","n2-features/f1-auth/a3-profile/profile.module.scss","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.module.scss","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.module.scss","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.module.scss","n2-features/f0-test/TestForReducer/TestForReducer.module.scss","n1-main/m1-ui/common/components/Container.module.scss","n2-features/f2-table/Search/Search.module.css","n2-features/f3-modal/ModalUpdateCardsPack/ModalUpdateCardsPack.module.scss","n2-features/f2-table/Select/Select.module.scss","reportWebVitals.ts","n1-main/m2-bll/api/AuthApi.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/authReducer.ts","n1-main/m1-ui/p1-header/Header.tsx","n2-features/f1-auth/a2-register/RegistrationAPI.ts","n1-main/m2-bll/registrationReducer.ts","n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/c2-SuperButton/SuperButton.tsx","n2-features/f1-auth/a2-register/Registration.tsx","n2-features/f1-auth/a2-register/RegistrationContainer.tsx","n2-features/f1-auth/a3-profile/ChangeAvatar.tsx","n2-features/f1-auth/a3-profile/Profile.tsx","n2-features/f1-auth/Page404.tsx","n1-main/m2-bll/api/cardsPack-api.ts","n1-main/m2-bll/api/passwordRecovery-api.ts","n1-main/m2-bll/recovery-reducer.ts","n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery.tsx","n2-features/f1-auth/a4-passwordNew/PasswordNew.tsx","n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/c5-SuperSelect/SuperSelect.tsx","n1-main/m1-ui/common/c6-SuperRadio/SuperRadio.tsx","n1-main/m2-bll/test-reducer.ts","n2-features/f0-test/TestForReducer/TestForReducer.tsx","n2-features/f0-test/Examples/Examples.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a1-login/LoginContainer.tsx","n1-main/m2-bll/cardsPack-reducer.ts","n2-features/f2-table/Pagination/Pagination.tsx","n2-features/f2-table/Range/Range.tsx","n2-features/f2-table/Search/Search.tsx","n2-features/f2-table/Settings/Settings.tsx","n2-features/f2-table/TableContent/TableContent.tsx","n2-features/f2-table/SortPacks/SortPacks.tsx","n1-main/m2-bll/modal-reducer.ts","n2-features/f3-modal/Modal/Modal.tsx","n2-features/f3-modal/ModalAddCardsPack/ModalAddCardsPack.tsx","n2-features/f3-modal/ModalDelCardsPack/ModalDelCardsPack.tsx","n2-features/f3-modal/ModalUpdateCardsPack/ModalUpdateCardsPack.tsx","n2-features/f2-table/Table/Table.tsx","n2-features/f2-table/CustomHooks/CustomDebounce.tsx","n2-features/f2-table/CustomHooks/CustomRangeDebounse.tsx","n1-main/m2-bll/api/cards-api.ts","n1-main/m2-bll/cards-reducer.ts","n2-features/f2-table/Select/Select.tsx","n2-features/f2-table/Pagination/CardsPagination.tsx","n2-features/f3-modal/ModalDelCard/ModalDelCard.tsx","n2-features/f3-modal/ModalAddCard/ModalAddCard.tsx","n2-features/f3-modal/ModalUpdateCard/ModalUpdateCard.tsx","n2-features/f2-table/Cards/Cards.tsx","n2-features/f2-table/Learn/Learn.tsx","n2-features/f2-table/Learn/LearnContainer.tsx","n1-main/m1-ui/p2-main/Main.tsx","n1-main/m1-ui/App.tsx","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","withCredentials","authAPI","data","post","delete","changeAPI","name","avatar","put","initialState","email","publicCardPacksCount","_id","setProfile","type","isLoggedIn","error","isInitilize","setIsLoggedId","value","setIsError","Header","dispatch","useDispatch","useSelector","state","auth","className","s","header","to","logo","links","item","link","onClick","res","catch","e","response","message","registrationAPI","password","isRegistered","registrationAC","setErrorMessageAC","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","currentTarget","key","SuperButton","red","finalClassName","button","default","Registration","props","setEmail","setPassword","repeatPassword","setRepeatPassword","register","registration","style","block","form","text","testSpanError","placeholder","superButton","RegistrationContainer","useState","a","errorMessage","registrationTC","ChangeAvatar","reader","FileReader","change","setChange","setFileURL","file64","setFile64","accept","newFile","target","files","onloadend","result","readAsDataURL","window","URL","createObjectURL","getState","profile","console","log","Profile","profileContainer","src","alt","Page404","cardsPackInstance","cardsPackApi","userId","pageCount","page","packName","sortPacks","min","max","get","params","user_id","cardPackName","dataForPost","cardsPack","cardPackId","newName","recoveryPasswordInstanceHeroku","passwordRecoveryApi","from","resetPasswordToken","forgot","info","errorText","setNew","forgotShowInfoAndErrorAC","infoText","setNewShowInfoAndErrorAC","PasswordRecovery","recoveryPassword","statusText","classColor","green","passwordRecovery","element","forgotPasswordTC","PasswordNew","newPassword","setNewPassword","newPassword2","setNewPassword2","matchStatus","setMatchStatus","token","useParams","passwordNew","oneSizeEl","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","editableSpan","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","select","SuperRadio","onChangeCallback","radio","testValue","TestForReducer","reducerValue","testReducer","testForReducer","newValue","Examples","setText","setChecked","setValue","arr","valueForSsSr","showAlert","alert","examples","column","inputContainer","blue","disabled","SuperEditableSpanContainer","undefined","radioContainer","Login","onSubmit","LoggedIn","border","rememberMe","setRememberMe","LoginContainer","preventDefault","LoginTC","cardPacks","cardPacksTotalCount","userIdAfterRadio","selectedCardPackId","setCurrentPageAC","setUserIdAfterRadioAC","sortPacksAC","setSelectedCardPack","getCardsPackTC","table","toString","cardPack","Pagination","pagesCount","Math","ceil","pages","push","portionCount","portion","setPortion","leftNumber","rightNumber","correctValue","filter","p","pagination","btn","currentPageHandler","PriceRange","values","setValues","step","renderTrack","onMouseDown","onTouchStart","band","ref","height","width","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","slider","numSlider","toFixed","backgroundColor","Search","setSearchTerm","searchTerm","Settings","settings","settingEl","setPageCountHandler","radioLabel","superRadioArr","profileOrPublic","onChangeProfileOrPublic","TableContent","tableContent","tableHeader","headerModel","m","id","tableBody","bodyModel","SortPacks","container","upperSort","lowerCount","activeCardPackId","modalDelCardsPackShowHide","modalAddCardsPackShowHide","modalUpdateCardsPackShowHide","activeCardId","modalDelCardShowHide","modalAddCardShowHide","modalUpdateCardShowHide","setActiveCardPackAC","setActiveCardAC","Modal","modalShowHide","modalBackground","modalWindow","modalContent","close","ModalAddCardsPack","cardPackNameInModal","setCardPackNameInModal","modalAddCardPackShowHide","modal","ModalDelCardsPack","modalDelCardPackShowHide","ModalUpdateCardsPack","cardsPackName","setCardPackName","find","oldCardsPackName","useEffect","Table","userID","cardsPacks","debouncedSearchTerm","delay","setState","setTime","setTimeout","clearTimeout","useCustomDebounce","debouncedRange","range","setRange","useCustomRangeDebounce","CardsPackHeader","v1","cardsPackMapped","exact","cardsCount","updated","sContainer","Number","setPageCountAC","cardsAPI","cardsPack_id","question","answer","card","card_id","newQuestion","newAnswer","grade","cards","cardsTotalCount","setCurrentPageCardsAC","setPageCountCardsAC","getCardsTC","Select","pageCountCards","Array","keys","CardsPagination","pageCard","cardsTotalCountCards","pagesCountCards","ModalDelCard","cardId","ModalAddCard","setQuestion","setAnswer","sInput","addCardTC","ModalUpdateCard","oldCardQuestion","oldCardAnswer","Cards","packid","cardHeader","el","cardsMapped","created","shots","star","round","Learn","hidden","setHidden","submitHandler","setCardsGradeAC","setCardsGrade","body","g","gradeBtn","nextCard","getCard","sum","reduce","acc","rand","random","newSum","initialCard","comments","more_id","rating","__v","LearnContainer","cardsIndex","cp","setCards","initial","setInitial","length","Main","path","render","App","isInitialize","finally","reducers","combineReducers","action","c","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f415d899.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"examples\":\"Examples_examples__1PA5-\",\"column\":\"Examples_column__3de2W\",\"testSpanError\":\"Examples_testSpanError__1goKw\",\"blue\":\"Examples_blue__1Wnao\",\"superButton\":\"Examples_superButton__2PFCB\",\"inputContainer\":\"Examples_inputContainer__K90ym\",\"SuperEditableSpanContainer\":\"Examples_SuperEditableSpanContainer__GpbGd\",\"radioContainer\":\"Examples_radioContainer__3mRm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2Z7GN\",\"select\":\"Pagination_select__3M6-8\",\"item\":\"Pagination_item__2mXyU\",\"btn\":\"Pagination_btn__3wM1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordNew\":\"PasswordNew_passwordNew__19ruJ\",\"button\":\"PasswordNew_button__15Z5r\",\"element\":\"PasswordNew_element__2Aiwo\",\"oneSizeEl\":\"PasswordNew_oneSizeEl__mtqpk\",\"input\":\"PasswordNew_input__1VOw_\",\"green\":\"PasswordNew_green__39vlT\",\"red\":\"PasswordNew_red__AiYN-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__Az-hv\",\"input\":\"Table_input__1UWk-\",\"button\":\"Table_button__2CNgD\",\"selectedCardPackInfo\":\"Table_selectedCardPackInfo__3BYQj\",\"element\":\"Table_element__PGYMO\",\"elementHeader\":\"Table_elementHeader__9Bv4y\",\"elementValue\":\"Table_elementValue__1kNZD\",\"star\":\"Table_star__2QPPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3ggz9\",\"links\":\"Header_links__1zRqM\",\"link\":\"Header_link__3wkcV\",\"logo\":\"Header_logo__2VoAe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2Vwyo\",\"superInput\":\"SuperInputText_superInput__1b-gQ\",\"errorInput\":\"SuperInputText_errorInput__226Rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecovery\":\"PasswordRecovery_passwordRecovery__31h1G\",\"element\":\"PasswordRecovery_element__JawCr\",\"input\":\"PasswordRecovery_input__2X72f\",\"green\":\"PasswordRecovery_green__QYopk\",\"red\":\"PasswordRecovery_red__1C9QX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__iUbfL\",\"settingEl\":\"Settings_settingEl__1qztq\",\"radioLabel\":\"Settings_radioLabel__292Rn\",\"input\":\"Settings_input__3cBzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Registration_block__dW0ER\",\"form\":\"Registration_form__1ZbN-\",\"text\":\"Registration_text__LYvR3\",\"error\":\"Registration_error__22jZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__39g83\",\"border\":\"Login_border__X9pwz\",\"text\":\"Login_text__15jpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Range_block__1E3GE\",\"band\":\"Range_band__H79ay\",\"slider\":\"Range_slider__Zjksr\",\"numSlider\":\"Range_numSlider__ZVPW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContent\":\"TableContent_tableContent__1aE3G\",\"tableHeader\":\"TableContent_tableHeader__2O6Pt\",\"tableBody\":\"TableContent_tableBody__2jZSz\",\"bodyModel\":\"TableContent_bodyModel__1i2vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SortPacks_container__3K6Fg\",\"block\":\"SortPacks_block__Tr1D3\",\"btn\":\"SortPacks_btn__1KxVX\",\"elem\":\"SortPacks_elem__2q6vL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackground\":\"Modal_modalBackground__Aqttw\",\"modalWindow\":\"Modal_modalWindow__iy7De\",\"modalContent\":\"Modal_modalContent__2h1bv\",\"close\":\"Modal_close__1BrmX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Learn_body__2Gt-G\",\"grade\":\"Learn_grade__33tCA\",\"gradeBtn\":\"Learn_gradeBtn__1ea58\",\"btn\":\"Learn_btn__JB3DZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__3EvFB\",\"default\":\"SuperButton_default__3Wjt_\",\"red\":\"SuperButton_red__3EhJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__PPQ3k\",\"checkbox\":\"SuperCheckbox_checkbox__1-Bpy\",\"spanClassName\":\"SuperCheckbox_spanClassName__1-zgL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"profile_profileContainer__2TUCN\",\"profile\":\"profile_profile__b7tbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__3GCbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__88I3o\",\"label\":\"SuperRadio_label__2meMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableSpan\":\"SuperEditableSpan_editableSpan__3_Ofw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testForReducer\":\"TestForReducer_testForReducer__1UG8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3W29F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Search_block__1Ku8T\",\"search\":\"Search_search__2bIiJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ModalUpdateCardsPack_button__1fpRa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3WohE\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios, {AxiosResponse} from 'axios'\r\nimport {InitialProfileType, SetProfileType} from \"../profileReducer\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: AuthLoginType) {\r\n        return instance.post<InitialProfileType>('/auth/login', data);\r\n    },\r\n    me() {\r\n        return instance.post<InitialProfileType>('/auth/me',{})\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/me')\r\n    }\r\n}\r\n\r\n\r\nexport  const  changeAPI = {\r\n    changeProfile(name: string, avatar: string) {\r\n        return instance.put('/auth/me', {name, avatar})\r\n    }\r\n}\r\n\r\n\r\nexport type AuthLoginType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI, changeAPI} from \"./api/AuthApi\";\r\nimport {setIsError, setIsLoggedId} from \"./authReducer\";\r\nimport {log} from \"util\";\r\nimport {AppStoreType} from \"./store\";\r\n\r\n\r\nlet initialState = {\r\n    avatar: '',\r\n    email: '',\r\n    name: '',\r\n    publicCardPacksCount: 0,\r\n    _id: '',\r\n}\r\n\r\nexport type InitialProfileType = {\r\n    avatar: string\r\n    email: string\r\n    name: string\r\n    publicCardPacksCount: number\r\n    _id: string\r\n}\r\n//1\r\nexport const profileReducer = (state: InitialProfileType = initialState, action: ActionsType): InitialProfileType => {\r\n    debugger\r\n    switch (action.type) {\r\n        case 'profile/SET-PROFILE':\r\n            return {\r\n                ...state, avatar: action.avatar, email: action.email, name: action.name,\r\n                publicCardPacksCount: action.publicCardPacksCount, _id: action._id\r\n            }\r\n        case 'profile/SET-AVATAR' :\r\n            return {\r\n                ...state, avatar: action.avatar\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport const setAvatarAC = (avatar: string) => {\r\n    return ({type: 'profile/SET-AVATAR', avatar} as const)\r\n}\r\nexport const ChangeProfileTC = () => (dispatch: Dispatch, getState: () => any) => {\r\n    const name = getState().profile.name\r\n    const avatar = getState().profile.avatar\r\n    console.log(avatar)\r\n    changeAPI.changeProfile(name, avatar).then(res => console.log(res))\r\n}\r\n/*\r\nexport const LoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType | SetProfileType>) => {\r\n    authAPI.login({email, password, rememberMe}).then(res => {\r\n            dispatch(setIsLoggedId(true))\r\n            dispatch(setProfile(res.data))\r\n\r\n        }\r\n    ).catch(e => {\r\n            e.response ? dispatch(setIsError(e.response.data.error))\r\n                : dispatch(setIsError(e.message + ', more details in the console'));\r\n        }\r\n    )\r\n}\r\n*/\r\n\r\n\r\n\r\n//ActionsCreators\r\n\r\nexport const setProfile = (data: InitialProfileType) => {\r\n    const {avatar, email, name, publicCardPacksCount, _id} = data\r\n    return ({type: 'profile/SET-PROFILE', avatar, email, name, publicCardPacksCount, _id} as const)\r\n}\r\n\r\n\r\n//Thunks\r\n\r\n\r\n//Types\r\n\r\nexport type SetProfileType = ReturnType<typeof setProfile>\r\nexport type SetAvatarType = ReturnType<typeof setAvatarAC>\r\n\r\n\r\ntype ActionsType = SetProfileType | SetAvatarType","import {Dispatch} from 'redux'\r\nimport {authAPI, AuthLoginType} from \"./api/AuthApi\";\r\nimport {setProfile, SetProfileType} from \"./profileReducer\";\r\n\r\n\r\nlet initialState = {\r\n    isLoggedIn: false,\r\n    error: null,\r\n    isInitilize: false\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n    error: string | null\r\n    isInitilize: boolean\r\n}\r\n\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'login/SET-IS-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'login/SET-IS-INITIALIZE':\r\n            return {...state, isInitilize: action.isInitilize}\r\n        default:\r\n            return {...state}\r\n    }\r\n\r\n}\r\n\r\n\r\n//ActionsCreators\r\n\r\nexport const setIsLoggedId = (value: boolean) => {\r\n    return ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n}\r\nexport const setIsInitialize = (isInitilize: boolean) => {\r\n    return ({type: 'login/SET-IS-INITIALIZE', isInitilize} as const)\r\n}\r\n\r\nexport const setIsError = (error: string) => {\r\n    return ({type: 'login/SET-IS-ERROR', error} as const)\r\n}\r\n\r\n//Thunks\r\nexport const LoginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType | SetProfileType>) => {\r\n    authAPI.login({email, password, rememberMe}).then(res => {\r\n            dispatch(setIsLoggedId(true))\r\n            dispatch(setProfile(res.data))\r\n\r\n        }\r\n    ).catch(e => {\r\n            e.response ? dispatch(setIsError(e.response.data.error))\r\n                : dispatch(setIsError(e.message + ', more details in the console'));\r\n        }\r\n    )\r\n}\r\n\r\nexport const InitializeTC = () => (dispatch: Dispatch) => {\r\n    authAPI.me().then(res => {\r\n            dispatch(setIsLoggedId(true))\r\n            dispatch(setProfile(res.data))\r\n        }\r\n    ).catch(e => {\r\n            dispatch(setIsLoggedId(false))\r\n        }\r\n    ).finally(() => {\r\n        dispatch(setIsInitialize(true))\r\n    })\r\n}\r\nexport const LogoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI.logout().then(res => {\r\n            dispatch(setIsLoggedId(false))\r\n\r\n        }\r\n    ).catch(e => {\r\n            e.response ? dispatch(setIsError(e.response.data.error))\r\n                : dispatch(setIsError(e.message + ', more details in the console'));\r\n        }\r\n    )\r\n}\r\n\r\n\r\n//Types\r\n\r\ntype SetIsLoggedIdType = ReturnType<typeof setIsLoggedId>\r\ntype SetIsErrorType = ReturnType<typeof setIsError>\r\ntype SetIsInitializeType = ReturnType<typeof setIsInitialize>\r\n\r\ntype ActionsType = SetIsLoggedIdType | SetIsErrorType | SetIsInitializeType","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LogoutTC} from \"../../m2-bll/authReducer\";\r\nimport {AppStoreType} from \"../../m2-bll/store\";\r\n\r\nexport const Header = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const logout = () => {\r\n        dispatch(LogoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to={'/profile'}>\r\n                <div className={s.logo}>BrightCards</div>\r\n            </NavLink>\r\n            {isLoggedIn ? <div className={s.links}>\r\n                <NavLink className={s.item} to={'/table'}>Table</NavLink>\r\n                <NavLink className={s.item} to={'/profile'}>Profile</NavLink>\r\n                <a className={s.link} onClick={logout}>Log out</a>\r\n            </div> : <div className={s.links}>\r\n                <NavLink className={s.item} to={'/login'}>Login</NavLink>\r\n                <NavLink className={s.item} to={'/registration'}>Registration</NavLink>\r\n                <NavLink className={s.item} to={'/passwordrecovery'}>PasswordRecovery</NavLink>\r\n                {/*<NavLink className={s.item} to={'/tests'}>Tests</NavLink> for tests type /tests in address*/}\r\n            </div>}\r\n\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\ntype ResponseType = {\r\n    addedUser: {\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        rememberMe: boolean\r\n        updated: string\r\n        _id: string\r\n    }\r\n}\r\n\r\nexport const registrationAPI = {\r\n    registration(email: string, password: string ){\r\n        return instance.post<ResponseType>(`auth/register`, { email, password} )\r\n    }\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"../../n2-features/f1-auth/a2-register/RegistrationAPI\";\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const initialState = {\r\n    error: null as null | string,\r\n    isRegistered: false\r\n}\r\nexport const registrationReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case  'REGISTRATION-USER':\r\n            return {...state, isRegistered: action.isRegistered}\r\n\r\n        case  'SET-ERROR-MESSAGE':\r\n            return {...state, error: action.error}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const registrationAC = (isRegistered: boolean) => ({type: 'REGISTRATION-USER', isRegistered} as const)\r\nexport const setErrorMessageAC = (error: string | null) => ({type: 'SET-ERROR-MESSAGE', error} as const)\r\n\r\nexport const registrationTC = (email: string, password: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            const response = await registrationAPI.registration(email, password)\r\n            dispatch(registrationAC(true))\r\n\r\n        } catch (e: any) {\r\n            const errorMessage = e.response ? e.response.data.error :\r\n                (e.message + ', more details in the the console')\r\n            dispatch(setErrorMessageAC(errorMessage))\r\n            dispatch(registrationAC(false))\r\n        }\r\n    }\r\n}\r\nexport type RegistrationType = ReturnType<typeof registrationAC>\r\nexport type SetErrorMessageType = ReturnType<typeof setErrorMessageAC>\r\n\r\ntype ActionType = RegistrationType | SetErrorMessageType","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                // type={'password'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from '../../../n1-main/m2-bll/store'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"../../f0-test/Examples/Examples.module.scss\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport style from './Registration.module.scss'\r\nimport {setErrorMessageAC} from \"../../../n1-main/m2-bll/registrationReducer\";\r\n\r\n\r\ntype PropsType = {\r\n    email: string\r\n    setEmail: (email: string) => void\r\n    password: string\r\n    setPassword: (password: string) => void\r\n    repeatPassword: string\r\n    setRepeatPassword: (repeatPassword: string) => void\r\n    register: () => void\r\n}\r\nexport const Registration = (props: PropsType) => {\r\n    const {\r\n        email,\r\n        setEmail,\r\n        password,\r\n        setPassword,\r\n        repeatPassword,\r\n        setRepeatPassword,\r\n        register\r\n    } = props\r\n\r\n    const error = useSelector<AppStoreType, null | string>(state => state.registration.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const emailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        dispatch(setErrorMessageAC(''))\r\n    }\r\n\r\n    const setPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n        dispatch(setErrorMessageAC(''))\r\n    }\r\n    const setRepeatPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatPassword(e.currentTarget.value)\r\n        dispatch(setErrorMessageAC(''))\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={style.block}>\r\n            <div className={style.form}>\r\n                <p className={style.text}>Registration</p>\r\n\r\n                <label>\r\n                    <SuperInputText\r\n                        value={email}\r\n                        onChange={emailHandler}\r\n                        className={`${s.testSpanError}${style.placeholder}`}\r\n                        placeholder={'enter your email'}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <SuperInputText\r\n                        type={'password'}\r\n                        value={password}\r\n                        onChange={setPasswordHandler}\r\n                        className={s.testSpanError}\r\n                        placeholder={'enter  your password'}\r\n                    />\r\n                </label>\r\n\r\n                <label>\r\n                    <SuperInputText\r\n                        type={'password'}\r\n                        value={repeatPassword}\r\n                        onChange={setRepeatPasswordHandler}\r\n                        className={s.testSpanError}\r\n                        placeholder={'repeat  your password'}\r\n                    />\r\n                </label>\r\n\r\n                {error !== null && <div className={style.error}>{error}</div>}\r\n\r\n                <div>\r\n                    <SuperButton onClick={register} className={s.superButton}>\r\n                        registration\r\n                    </SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {registrationTC, setErrorMessageAC} from \"../../../n1-main/m2-bll/registrationReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Registration} from \"./Registration\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const RegistrationContainer = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.registration.isRegistered)\r\n\r\n    const register = () => {\r\n        dispatch(setErrorMessageAC(null))\r\n        if (password === repeatPassword) {\r\n            dispatch(registrationTC(email, password))\r\n        } else {\r\n            dispatch(setErrorMessageAC('password mismatch'))\r\n        }\r\n        setEmail('')\r\n        setPassword('')\r\n        setRepeatPassword('')\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Registration\r\n                email={email}\r\n                setEmail={setEmail}\r\n                password={password}\r\n                repeatPassword={repeatPassword}\r\n                setPassword={setPassword}\r\n                setRepeatPassword={setRepeatPassword}\r\n                register={register}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {ChangeProfileTC, setAvatarAC} from \"../../../n1-main/m2-bll/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\n\r\nexport const ChangeAvatar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const reader = new FileReader()\r\n    const [change, setChange] = useState(false)\r\n    const [file, setFile] = useState<any>();\r\n    const [fileURL, setFileURL] = useState<any>()\r\n    const [file64, setFile64] = useState<any>()\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n\r\n        const newFile = e.target.files && e.target.files[0]\r\n        reader.onloadend = () => {\r\n            setFile64(reader.result)\r\n        }\r\n        // @ts-ignore\r\n        reader.readAsDataURL(newFile)\r\n        // @ts-ignore\r\n\r\n\r\n        if (newFile) {\r\n\r\n            setFileURL(window.URL.createObjectURL(newFile))\r\n        }\r\n    }\r\n\r\n    const changeAvatar = () => {\r\n        dispatch(setAvatarAC(file64))\r\n        dispatch(ChangeProfileTC())\r\n        setChange(false)\r\n    }\r\n    return <>\r\n        {change ?\r\n            <div>\r\n                <input type=\"file\" accept='.jpg, .jpeg, .png' onChange={upload}/>\r\n                <div>\r\n                    <button onClick={changeAvatar}>Send</button>\r\n                </div>\r\n            </div> : <button onClick={() => setChange(true)}>Change avatar</button>}\r\n\r\n    </>\r\n}","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {InitialProfileType, SetProfileType} from \"../../../n1-main/m2-bll/profileReducer\";\r\nimport s from './profile.module.scss'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {ChangeAvatar} from \"./ChangeAvatar\";\r\n\r\nexport const Profile = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const {\r\n        avatar,\r\n        email,\r\n        name,\r\n        publicCardPacksCount,\r\n        _id\r\n    } = useSelector<AppStoreType, InitialProfileType>(state => state.profile)\r\n\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to='/login' />\r\n    }\r\n    return (\r\n            <div className={s.profileContainer}>\r\n                <div className={s.profile}>\r\n                    {avatar ? <img src={avatar} alt=\"\"/> : null}\r\n                    <ChangeAvatar />\r\n                    <span>{name}</span>\r\n                    <span>Количество карт: {publicCardPacksCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div>Page404</div>\r\n    );\r\n}","import axios from \"axios\";\r\nimport {SortPackType} from \"../cardsPack-reducer\";\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\n\r\nexport const cardsPackInstance = axios.create({\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    ...settings\r\n})\r\n\r\nexport const cardsPackApi = {\r\n    getCardsPack(userId: string, pageCount: string, page: number,\r\n                 packName: string,sortPacks: SortPackType, min: number, max: number) {\r\n        return cardsPackInstance.get<GetCardsPackResponseType>(`cards/pack`, {params: {\r\n                user_id: userId, pageCount, page, packName,\r\n                sortPacks, min, max,\r\n            }})\r\n    },\r\n    addCardPack(cardPackName: string) {\r\n        const dataForPost: addCardsPackPostType = {\r\n            cardsPack: {\r\n                name: cardPackName\r\n            }\r\n        }\r\n        return cardsPackInstance.post<AddCardsPackResponseType>('cards/pack', dataForPost)\r\n    },\r\n    deleteCardPack(cardPackId: string) {\r\n        return cardsPackInstance.delete(`cards/pack?id=${cardPackId}`)\r\n    },\r\n    updateCardPack(cardPackId: string, newName: string) {\r\n        const dataForPost: updateCardsPackPostType = {\r\n            cardsPack: {\r\n                _id: cardPackId,\r\n                name: newName,\r\n            }\r\n        }\r\n        return cardsPackInstance.put('cards/pack', dataForPost)\r\n    },\r\n}\r\n\r\nexport type CardsPackType = {\r\n    cardsCount: number\r\n    created: string\r\n    deckCover?: string\r\n    grade: number // средняя оценка карточек\r\n    more_id: string\r\n    name: string\r\n    path: string // папка\r\n    private: boolean\r\n    rating: number // лайки\r\n    shots: number // количество попыток\r\n    type: string // ещё будет \"folder\" (папка)\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\ntype addCardsPackPostType = {\r\n    cardsPack: {\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: \"url\" | \"base64\"\r\n        private?: boolean\r\n        type?: string\r\n    }\r\n}\r\ntype updateCardsPackPostType = {\r\n    cardsPack: {\r\n        _id: string\r\n        name?: string // не обязательно\r\n    }\r\n}\r\ntype GetCardsPackResponseType = {\r\n    cardPacks: Array<CardsPackType>\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n\r\n}\r\ntype AddCardsPackResponseType = GetCardsPackResponseType & {\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n//DeleteCardPackResponse and updateCardPackResponse not typed because in task no need.\r\n\r\n// todo: Maybe need to type error.","import {cardsPackInstance} from \"./cardsPack-api\";\r\nimport axios from \"axios\";\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\n\r\nconst recoveryPasswordInstanceHeroku = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/', // this works only with heroku\r\n    ...settings\r\n})\r\n\r\nexport const passwordRecoveryApi = {\r\n    recoveryPassword(email: string) {\r\n        const dataForPost = {\r\n            email,\r\n            from: \"Briws <brightwiths@gmail.com>\",\r\n            /*message: `<div>password recovery link:<a href='http://localhost:3000/#/passwordnew/$token$'>link</a></div>`*/\r\n            message: `<div>password recovery link:<a href='https://neko-back.herokuapp.com/2.0/#/passwordnew/$token$'>link</a></div>`\r\n            // todo: need to change this before yarn deploy\r\n        }\r\n        return recoveryPasswordInstanceHeroku.post<ResponseType>('auth/forgot', dataForPost)\r\n    },\r\n    changePassword(password: string, resetPasswordToken: string) {\r\n        return cardsPackInstance.post<ResponseType>('auth/set-new-password', {password, resetPasswordToken})\r\n    },\r\n}\r\n\r\ntype ResponseType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\n\r\n// todo: Maybe need to type error.\r\n","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi} from \"./api/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    forgot: {\r\n        info: '',\r\n        errorText: ''\r\n    },\r\n    setNew: {\r\n        info: '',\r\n        errorText: ''\r\n    }\r\n}\r\n\r\nexport const recoveryReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"FORGOT-PASS/SHOW-INFO-AND-ERROR\":\r\n            return {...state, forgot: {info: action.forgot.infoText, errorText: action.forgot.errorText}}\r\n        case \"RESTORE-PASS/SHOW-INFO-AND-ERROR\":\r\n            return {...state, setNew: {info: action.setNew.infoText, errorText: action.setNew.errorText}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const forgotShowInfoAndErrorAC = (infoText: string, errorText: string) =>\r\n    ({type: 'FORGOT-PASS/SHOW-INFO-AND-ERROR', forgot: {infoText, errorText}} as const)\r\nexport const setNewShowInfoAndErrorAC = (infoText: string, errorText: string) =>\r\n    ({type: 'RESTORE-PASS/SHOW-INFO-AND-ERROR', setNew: {infoText, errorText}} as const)\r\n\r\nexport const forgotPasswordTC = (email: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        passwordRecoveryApi.recoveryPassword(email)\r\n            .then(res => {\r\n                dispatch(forgotShowInfoAndErrorAC(res.data.info, ''))\r\n            })\r\n            .catch(res => {\r\n                dispatch(forgotShowInfoAndErrorAC('', res.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setNewPasswordTC = (password: string, resetPasswordToken: string) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        passwordRecoveryApi.changePassword(password, resetPasswordToken)\r\n            .then(res => {\r\n                dispatch(setNewShowInfoAndErrorAC(res.data.info, ''))\r\n            })\r\n            .catch(res => {\r\n                dispatch(setNewShowInfoAndErrorAC('', res.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    forgot: {\r\n        info: string\r\n        errorText: string\r\n    }\r\n    setNew: {\r\n        info: string\r\n        errorText: string\r\n    }\r\n\r\n}\r\ntype ActionType = ReturnType<typeof forgotShowInfoAndErrorAC> | ReturnType<typeof setNewShowInfoAndErrorAC>\r\n","import React, {useState} from 'react';\r\nimport s from './PasswordRecovery.module.scss'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordTC} from \"../../../n1-main/m2-bll/recovery-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    let infoText = useSelector<AppStoreType, string>(state => state.recoveryPassword.forgot.info)\r\n    let errorText = useSelector<AppStoreType, string>(state => state.recoveryPassword.forgot.errorText)\r\n\r\n    let statusText = ''\r\n    let classColor = ''\r\n    if (infoText !== '') {\r\n        statusText = infoText + ' You need to click recover link in you email.'\r\n        classColor = s.green\r\n    } else {\r\n        statusText = errorText\r\n        classColor = s.red\r\n    }\r\n    const onClickHandler = () => {\r\n        dispatch(forgotPasswordTC(email))\r\n    }\r\n\r\n    return (\r\n        <div className={s.passwordRecovery}>\r\n            <h1>This page will recover you password.</h1>\r\n            <p className={s.element}>Please enter you email to input bellow and click recover.</p>\r\n            <div className={s.element}>\r\n                <label>\r\n                    Your email:\r\n                    <SuperInputText value={email} onChangeText={setEmail} className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}><SuperButton onClick={onClickHandler} >Recover</SuperButton></div>\r\n            <div className={classColor}>{statusText}</div>\r\n        </div>\r\n\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport s from './PasswordNew.module.scss'\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewPasswordTC} from \"../../../n1-main/m2-bll/recovery-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const PasswordNew = () => {\r\n    // test\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const [newPassword2, setNewPassword2] = useState<string>('')\r\n    let infoText = useSelector<AppStoreType, string>(state => state.recoveryPassword.setNew.info)\r\n    let errorText = useSelector<AppStoreType, string>(state => state.recoveryPassword.setNew.errorText)\r\n    const dispatch = useDispatch()\r\n    const [matchStatus, setMatchStatus] = useState('')\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n\r\n\r\n    const onClickHandler = () => {\r\n        if (newPassword !== newPassword2) {\r\n            setMatchStatus('passwords do not match')\r\n        } else {\r\n            setMatchStatus('')\r\n            dispatch(setNewPasswordTC(newPassword, token))\r\n        }\r\n    }\r\n\r\n    let statusText = ''\r\n    let classColor = ''\r\n    if (infoText !== '') {\r\n        statusText = infoText\r\n        classColor = s.green\r\n    } else {\r\n        statusText = errorText\r\n        classColor = s.red\r\n    }\r\n\r\n    return (\r\n        <div className={s.passwordNew}>\r\n            <h1>This page for changing you password.</h1>\r\n            <p className={s.element}>It will take token from address link and new password from inputs and then new\r\n                password will be set to you.</p>\r\n            <div className={s.element}>\r\n                <label className={s.oneSizeEl}>\r\n                    <div>New password:</div>\r\n                    <SuperInputText value={newPassword} onChangeText={setNewPassword} type={'password'}\r\n                                    className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}>\r\n                <label className={s.oneSizeEl}>\r\n                    <div>Password confirmation:</div>\r\n                    <SuperInputText value={newPassword2} onChangeText={setNewPassword2} type={'password'}\r\n                                    className={s.input}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.element}><SuperButton onClick={onClickHandler} className={s.button}>Change\r\n                password</SuperButton></div>\r\n            <div className={s.red}>{matchStatus}</div>\r\n            <div className={classColor}>{statusText}</div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n  onChangeChecked?: (checked: boolean) => void\r\n  spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n  {\r\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n    onChange, onChangeChecked,\r\n    className, spanClassName,\r\n    children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n  }\r\n\r\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type={'checkbox'}\r\n        onChange={onChangeCallback}\r\n        className={finalInputClassName}\r\n\r\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n      />\r\n      {children && <span className={s.spanClassName}>{children}</span>}\r\n    </label> // благодаря label нажатие на спан передастся в инпут\r\n  )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport s from './SuperEditableSpan.module.scss'\r\nimport SuperInputText from \"../c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n\r\n  spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n  {\r\n    autoFocus, // игнорировать изменение этого пропса\r\n    onBlur,\r\n    onEnter,\r\n    spanProps,\r\n\r\n    ...restProps// все остальные пропсы попадут в объект restProps\r\n  }\r\n) => {\r\n  const [editMode, setEditMode] = useState<boolean>(false)\r\n  const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n  const onEnterCallback = () => {\r\n    setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n    onEnter && onEnter() // оставлено на будущее, чтобы можно было возвращать событие по enter\r\n  }\r\n  const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n    onBlur && onBlur(e)\r\n  }\r\n  const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    setEditMode(true) // включить editMode при двойном клике\r\n\r\n    onDoubleClick && onDoubleClick(e)\r\n  }\r\n\r\n  const spanClassName = `${s.editableSpan} ${className}`\r\n\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <SuperInputText\r\n            autoFocus // пропсу с булевым значением не обязательно указывать true\r\n            onBlur={onBlurCallback}\r\n            onEnter={onEnterCallback}\r\n\r\n            {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n          />\r\n        ) : (\r\n          <span\r\n            onDoubleClick={onDoubleClickCallBack}\r\n            className={spanClassName}\r\n\r\n            {...restSpanProps}\r\n          >\r\n            {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n            ✎ {children || restProps.value}\r\n                    </span>\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n  options?: string[]\r\n  onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n  {\r\n    options,\r\n    onChange, onChangeOption,\r\n    ...restProps\r\n  }\r\n) => {\r\n  const mappedOptions: any[] = options ? options.map((o, i) => (\r\n    <option className={s.option} key={'option-' + i} value={o}>{o}</option>\r\n  )) : []\r\n\r\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    onChange && onChange(e)\r\n    onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n  }\r\n\r\n  return (\r\n    <select className={s.select} onChange={onChangeCallback} {...restProps}>\r\n      {mappedOptions}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.scss'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n      onChange && onChange(e)\r\n      onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => { // map options with key\r\n        return <label className={s.label} key={name + '-' + i}>\r\n            <input\r\n                className={s.radio}\r\n                type={'radio'}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","const initialState: InitialStateType = {\r\n    testValue: ''\r\n}\r\n\r\nexport const testReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-TEST-VALUE':\r\n            return {...state, testValue: action.newValue}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTestValueAC = (newValue: string) =>\r\n    ({type: 'SET-TEST-VALUE', newValue} as const)\r\n\r\n\r\ntype InitialStateType = {\r\n    testValue: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setTestValueAC>","import React from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {setTestValueAC} from \"../../../n1-main/m2-bll/test-reducer\";\r\nimport s from './TestForReducer.module.scss'\r\n\r\nexport const TestForReducer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let reducerValue = useSelector<AppStoreType, string>(state => state.testReducer.testValue)\r\n\r\n    return <div className={s.testForReducer}>\r\n        <div>Hi, I am test for reducer. I will set 'test value' to state and will show it at the input, if you click the\r\n            button.\r\n        </div>\r\n        <div>\r\n            <SuperInputText value={reducerValue}/>\r\n            <SuperButton onClick={() => {dispatch(setTestValueAC('test value'))}}>Click Me</SuperButton>\r\n        </div>\r\n    </div>\r\n\r\n\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport s from './Examples.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperEditableSpan from \"../../../n1-main/m1-ui/common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperSelect from \"../../../n1-main/m1-ui/common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {TestForReducer} from \"../TestForReducer/TestForReducer\";\r\n\r\nexport const Examples = () => {\r\n    const [text, setText] = useState<string>('') // for SuperInputText\r\n    const [checked, setChecked] = useState<boolean>(false) // for SuperCheckbox\r\n    const [value, setValue] = useState<string>('') // for SuperEditableSpan\r\n    const arr = ['x', 'y', 'z'] // for SuperSelect & SuperRadio\r\n    const [valueForSsSr, onChangeOption] = useState(arr[1]) // for SuperSelect & SuperRadio\r\n\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => { // for SuperButton\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div className={s.examples}>\r\n            <TestForReducer />\r\n            <h1>This is examples of common components.</h1>\r\n            <hr/>\r\n            <div className={s.column}>\r\n                <h2>с1-SuperInputText:</h2>\r\n                <div className={s.inputContainer}>\r\n                    <SuperInputText\r\n                        value={text}\r\n                        onChangeText={setText}\r\n                        onEnter={showAlert}\r\n                        error={error}\r\n                        spanClassName={s.testSpanError}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <SuperInputText\r\n                        className={s.blue} // проверьте, работает ли смешивание классов\r\n                    />\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с2-SuperButton:</h2>\r\n                <SuperButton className={s.superButton}>\r\n                    default\r\n                </SuperButton>\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.superButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n                <SuperButton disabled className={s.superButton}>\r\n                    disabled\r\n                </SuperButton>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с3-SuperCheckbox:</h2>\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div>\r\n                <h2>с4-SuperEditableSpan:</h2>\r\n                <div className={s.SuperEditableSpanContainer}>\r\n                    <SuperEditableSpan\r\n                        value={value}\r\n                        onChangeText={setValue}\r\n                        spanProps={{children: value ? undefined : 'enter text...'}}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <div className={s.column}>\r\n                <h2>с5-SuperSelect and SuperRadio:</h2>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={valueForSsSr}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n                <div className={s.radioContainer}>\r\n                    <SuperRadio\r\n                        options={arr}\r\n                        value={valueForSsSr}\r\n                        onChangeOption={onChangeOption}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, FormEvent, MouseEvent} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../n1-main/m1-ui/common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport s from './Login.module.scss'\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\n\r\nexport type LoginPropsType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    setEmail: (s: string) => void,\r\n    setPassword: (s: string) => void,\r\n    setRememberMe: (s: boolean) => void,\r\n    LoggedIn: (e: FormEvent<HTMLFormElement>) => void\r\n}\r\n\r\n\r\nexport const Login: React.FC<LoginPropsType> = (props) => {\r\n    const changeLogin = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n    const changePassword = (e:ChangeEvent<HTMLInputElement>) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n    const changeRemember = (e:ChangeEvent<HTMLInputElement>) => {\r\n        props.setRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const error = useSelector<AppStoreType, string | null>(state => state.auth.error)\r\n    return (\r\n        <div className={s.form}>\r\n            <form onSubmit={props.LoggedIn}>\r\n                <div className={s.border}>\r\n                    <div className={s.text}>Sign In</div>\r\n                    <div><SuperInputText value={props.email} onChange={changeLogin}/></div>\r\n                    <div><SuperInputText type={\"password\"} value={props.password} onChange={changePassword}/></div>\r\n                    {error ? <span>{error}</span> : null}\r\n                    <div><SuperCheckbox checked={props.rememberMe} onChange={changeRemember} className={s.checkbox} children={'Remember Me'}/></div>\r\n                    <div><SuperButton children={'Login'} /></div>\r\n                    <NavLink to={'/passwordrecovery'}>Forgot password</NavLink>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, {FormEvent, useState} from 'react';\r\nimport {Login} from \"./Login\";\r\nimport {authAPI} from \"../../../n1-main/m2-bll/api/AuthApi\";\r\nimport {LoginTC} from \"../../../n1-main/m2-bll/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const LoginContainer: React.FC = () => {\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const LoggedIn = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        dispatch(LoginTC(email, password, rememberMe));\r\n        setEmail('');\r\n        setPassword('');\r\n\r\n    }\r\n    if (isLoggedIn) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    return <Login email={email} password={password} rememberMe={rememberMe}\r\n                  setEmail={setEmail} setPassword={setPassword} setRememberMe={setRememberMe} LoggedIn={LoggedIn}/>\r\n}","import {Dispatch} from \"react\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {cardsPackApi, CardsPackType} from \"./api/cardsPack-api\";\r\n\r\n\r\n export type SortPackType = '0name' | '1name' | '0cardsCount' | '1cardsCount' | '0updated'| '1updated'| null\r\nconst initialState: InitialStateType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 10,\r\n    pageCount: 5,\r\n    page: 1,\r\n    userIdAfterRadio: '',\r\n    packName: '',\r\n    sortPacks:null,\r\n    max: 4,\r\n    min: 0,\r\n    selectedCardPackId: ''\r\n\r\n}\r\n\r\nexport const cardsPackReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"TABLE/SET-CARD-PACKS\":\r\n            return {...state, cardPacks: action.cardPack}\r\n        case \"TABLE/SET-CURRENT-PAGE\":\r\n            return {...state, page: action.page}\r\n        case \"TABLE/SET-TOTAL-COUNT\":\r\n            return {...state, cardPacksTotalCount: action.cardPacksTotalCount}\r\n        case \"TABLE/SET-PAGE-COUNT\":\r\n            return {...state, pageCount: action.pageCount}\r\n        case \"TABLE/SET-USER-ID-AFTER-RADIO\":\r\n            return {...state, userIdAfterRadio: action.userIdAfterRadio}\r\n        case \"TABLE/SET-SEARCH-PACK-NAME\":\r\n            return {...state, packName: action.packName}\r\n        case \"TABLE/SORT-PACKS\":\r\n            return {...state, sortPacks: action.sortPacks}\r\n        case \"TABLE/SET-CARDS-COUNT\":\r\n            return {...state, max: action.max, min: action.min}\r\n        case \"TABLE/SET-SELECTED-CARD-PACK\":\r\n            return {...state, selectedCardPackId: action.cardPackId}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    cardPacks: Array<CardsPackType>\r\n    cardPacksTotalCount: number\r\n    pageCount: number\r\n    page: number\r\n    userIdAfterRadio: string\r\n    packName: string\r\n    sortPacks: SortPackType\r\n    min: number\r\n    max: number\r\n    selectedCardPackId: string\r\n}\r\n\r\nexport const setSearchPackNameAC = (packName: string) =>\r\n    ({type: 'TABLE/SET-SEARCH-PACK-NAME', packName} as const)\r\n\r\nexport const setCardPacksAC = (cardPack: Array<CardsPackType>) =>\r\n    ({type: 'TABLE/SET-CARD-PACKS', cardPack} as const)\r\n\r\nexport const setCurrentPageAC = (page: number) =>\r\n    ({type: 'TABLE/SET-CURRENT-PAGE', page} as const)\r\n\r\nexport const setTotalCountAC = (cardPacksTotalCount: number) =>\r\n    ({type: 'TABLE/SET-TOTAL-COUNT', cardPacksTotalCount,} as const)\r\n\r\nexport const setPageCountAC = (pageCount: number) =>\r\n    ({type: 'TABLE/SET-PAGE-COUNT', pageCount,} as const)\r\n\r\nexport const setUserIdAfterRadioAC = (userIdAfterRadio: string) =>\r\n    ({type: 'TABLE/SET-USER-ID-AFTER-RADIO', userIdAfterRadio} as const)\r\n\r\nexport const sortPacksAC = (sortPacks: SortPackType) =>\r\n    ({type: 'TABLE/SORT-PACKS', sortPacks} as const)\r\n\r\nexport const setCardsCountAC = (min: number,max: number ) =>  //минимальное и максимальное число карт\r\n    ({type: 'TABLE/SET-CARDS-COUNT', min, max,} as const)\r\n\r\nexport const setSelectedCardPack = (cardPackId: string) =>\r\n    ({type: 'TABLE/SET-SELECTED-CARD-PACK', cardPackId} as const)\r\n\r\nexport const getCardsPackTC = () => {\r\n    return (dispatch: Dispatch<ActionType>, getState: () => AppStoreType) => {\r\n        const page = getState().table.page\r\n        const packName = getState().table.packName\r\n        const pageCount = getState().table.pageCount.toString()\r\n        const userIdAfterRadio = getState().table.userIdAfterRadio\r\n        const sortPacks = getState().table.sortPacks\r\n        const min = getState().table.min\r\n        const max = getState().table.max\r\n\r\n        cardsPackApi.getCardsPack(userIdAfterRadio, pageCount, page,\r\n            packName, sortPacks, min, max,)\r\n            .then((res) => {\r\n                dispatch(setCardPacksAC(res.data.cardPacks))\r\n                dispatch(setTotalCountAC(res.data.cardPacksTotalCount))\r\n                dispatch(setCurrentPageAC(res.data.page))\r\n                console.log('getCardsPack then:', res.data.cardPacks)\r\n            })\r\n            .catch((res) => {\r\n                console.log('getCardsPack catch:', res.response.data.error)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const addCardsPackTC = (cardPackName: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsPackApi.addCardPack(cardPackName)\r\n            .then(res => {\r\n                console.log('addCardsPackTC then:', res.data)\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('addCardsPackTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCardsPackTC = (cardPackId: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsPackApi.deleteCardPack(cardPackId)\r\n            .then(res => {\r\n                console.log('deleteCardsPackTC then:', res)\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('deleteCardsPackTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateCardPackTC = (cardPackId: string, newName: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        cardsPackApi.updateCardPack(cardPackId, newName)\r\n            .then(res => {\r\n                console.log('updateCardPackTC then:', res)\r\n                dispatch(getCardsPackTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('updateCardPackTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setCardPacksAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalCountAC>\r\n    | ReturnType<typeof setPageCountAC>\r\n    | ReturnType<typeof setUserIdAfterRadioAC>\r\n    | ReturnType<typeof setSearchPackNameAC>\r\n    | ReturnType<typeof sortPacksAC>\r\n    | ReturnType<typeof setCardsCountAC>\r\n    | ReturnType<typeof setSearchPackNameAC>\r\n    | ReturnType<typeof setSelectedCardPack>\r\n\r\ntype AppThunk = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport style from './Pagination.module.css'\r\nimport {getCardsPackTC, setCurrentPageAC} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport SuperButton from '../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton';\r\n\r\nconst Pagination = () => {\r\n    const dispatch = useDispatch()\r\n    let pageCount = useSelector<AppStoreType, number>(state => state.table.pageCount) // кол-во элементов на одной стр\r\n    let cardPacksTotalCount = useSelector<AppStoreType, number>(state => state.table.cardPacksTotalCount)// кол-во колод\r\n    let page = useSelector<AppStoreType, number>(state => state.table.page)// выбранная страница\r\n\r\n\r\n    const currentPageHandler = (page: number) => {\r\n        dispatch(setCurrentPageAC(page))\r\n    }\r\n\r\n    let pagesCount = Math.ceil(cardPacksTotalCount / pageCount); //количество страниц всех!!! до пагинатора\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionSize = 10; // порция которая видна в пагинации\r\n    const portionCount = Math.ceil(pagesCount / portionSize) // количество порций по 10 страниц\r\n\r\n    const [portion, setPortion] = useState(1)\r\n    const leftNumber = (portion - 1) * portionSize + 1\r\n    const rightNumber = portion * portionSize\r\n    const correctValue = pages.filter((p) => p ? p >= leftNumber && p <= rightNumber : '')\r\n\r\n    return (\r\n        <div className={style.pagination}> {portion > 1 &&\r\n        <SuperButton onClick={() => {\r\n            setPortion(portion - 1)\r\n        }} className={style.btn}>Prev\r\n        </SuperButton>\r\n        }\r\n            {correctValue.map(p => {\r\n                return (\r\n                    <span\r\n                        key={p}\r\n                        className={`${style.item} ${page === p ? style.select : style.item}`}\r\n                        onClick={() => currentPageHandler(p)}>{p}\r\n                    </span>\r\n                )\r\n\r\n            })}\r\n            {portionCount > portion && <SuperButton onClick={() => {\r\n                setPortion(portion + 1)\r\n            }} className={style.btn}>Next\r\n            </SuperButton>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport {getTrackBackground, Range} from 'react-range';\r\nimport style from './Range.module.css'\r\n\r\ntype  PropsType = {\r\n    values: number[]\r\n    setValues: ([]: number[]) => void\r\n}\r\nconst PriceRange: React.FC<PropsType> =props=> {\r\n    const {values, setValues} = props\r\n\r\n    return (\r\n        <div className={style.block}>\r\n            <h3>amount of cards</h3>\r\n        <Range\r\n            values={values}\r\n            step={1}\r\n            min={0}\r\n            max={100}\r\n            onChange={values => setValues(values)}\r\n            renderTrack={({props, children}) => (\r\n                <div\r\n                    onMouseDown={props.onMouseDown} //выполняется при нажатии клавиши\r\n                    onTouchStart={props.onTouchStart} //срабатывает при касании элемента(длинная)\r\n                    className={style.band}>\r\n\r\n                    <div\r\n                        ref={props.ref}\r\n                        style={{\r\n                            height: '5px',\r\n                            width: '100%',\r\n                            borderRadius: '4px',\r\n                            background: getTrackBackground({\r\n                                values: values,\r\n                                colors: ['#ccc', 'yellow', '#ccc'],\r\n                                min: 0,\r\n                                max: 100,\r\n                            }),\r\n                            alignSelf: 'center'}}>\r\n                        {children}\r\n\r\n                    </div>\r\n                </div>)}\r\n\r\n            renderThumb={({index, props, isDragged}) => (\r\n                <div\r\n                    {...props}\r\n                    className={style.slider}>\r\n\r\n                    <div className={style.numSlider}>\r\n                        {values[index].toFixed(0)}\r\n                        {/*// 10.12345 => 10; (1) => 10.1; (2) > 10.12; ...*/}\r\n                    </div>\r\n\r\n                    <div style={{\r\n                            height: '16px',\r\n                            width: '5px',\r\n                            backgroundColor: isDragged ? '#fbbf62' : '#CCC'}}/>\r\n                </div>)}\r\n        />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PriceRange;","import React, {ChangeEvent} from 'react';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport style from './Search.module.css'\r\nimport PriceRange from \"../Range/Range\";\r\n\r\ntype PropsType = {\r\n    setSearchTerm: (search: string) => void\r\n    searchTerm: string\r\n    setValues: ([]: number[]) => void\r\n    values: number[]\r\n}\r\nconst Search = (props: PropsType) => {\r\n    const {\r\n        setSearchTerm,\r\n        searchTerm,\r\n        setValues,\r\n        values\r\n    } = props\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchTerm(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.block}>\r\n\r\n            <SuperInputText\r\n                value={searchTerm}\r\n                onChange={onChangeHandler}\r\n                placeholder={'enter name'}/>\r\n\r\n            <PriceRange\r\n                values={values}\r\n                setValues={setValues}\r\n            />\r\n        </div>)\r\n}\r\n\r\nexport default Search;","import React, {ChangeEvent} from 'react';\r\nimport s from './Settings.module.scss';\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperRadio from \"../../../n1-main/m1-ui/common/c6-SuperRadio/SuperRadio\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\ntype PropsType = {\r\n    setPageCountHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n    superRadioArr: Array<string>\r\n    profileOrPublic: string\r\n    onChangeProfileOrPublic: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nexport const Settings = (props: PropsType) => {\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.table.pageCount).toString()\r\n\r\n    return <div className={s.settings}>\r\n        <h2>Settings:</h2>\r\n        <label className={s.settingEl}>\r\n            How much Card Packs to show:\r\n            <SuperInputText value={pageCount} onChange={props.setPageCountHandler} className={s.input}\r\n                            type={\"number\"}/>\r\n        </label>\r\n        <label className={`${s.radioLabel} ${s.settingEl}`}>\r\n            <div>Profile Card Packs only or Public:</div>\r\n            <SuperRadio\r\n                options={props.superRadioArr}\r\n                value={props.profileOrPublic}\r\n                onChangeOption={props.onChangeProfileOrPublic}\r\n                className={s.radio}\r\n            />\r\n        </label>\r\n    </div>\r\n}","import React from 'react';\r\nimport s from './TableContent.module.scss'\r\nimport {TableHeaderModelType} from \"../Table/Table\";\r\n\r\ntype BodyType = {\r\n    id: string,\r\n    element: Array<string | number | JSX.Element>\r\n}\r\ntype PropsType = {\r\n    headerModel: TableHeaderModelType\r\n    bodyModel: Array<BodyType>\r\n}\r\n\r\n\r\nexport const TableContent: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.tableContent}>\r\n            <div className={s.tableHeader}>\r\n                {props.headerModel.map(m =>  <div key={m.id}>\r\n                    {m.element}</div>)}\r\n            </div>\r\n            <div className={s.tableBody}>\r\n                {props.bodyModel.map(e => {\r\n                    let cardPackId = e.id\r\n                    return <div className={s.bodyModel} key={e.id}>{\r\n                        e.element.map((e, index) => {\r\n                            return <div key={cardPackId + index}>{e}</div>\r\n                        })\r\n                    }</div>\r\n                })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport style from './SortPacks.module.css';\r\nimport {sortPacksAC, SortPackType} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\n\r\ntype PropsType = {\r\n    upperSort: SortPackType\r\n    lowerCount: SortPackType\r\n}\r\nconst SortPacks = (props: PropsType) => {\r\n    const dispatch = useDispatch()\r\n    const sortPack = useSelector<AppStoreType, SortPackType>((state)=> state.table.sortPacks)\r\n    const upperSortHandler = () => {\r\n        dispatch(sortPacksAC(props.upperSort))\r\n    }\r\n    const lowerSortHandler = () => {\r\n            dispatch(sortPacksAC(props.lowerCount))\r\n\r\n    }\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.block}>\r\n                <SuperButton className={style.btn} onClick={upperSortHandler}>\r\n                    ^\r\n                </SuperButton>\r\n                <SuperButton className={style.btn} onClick={lowerSortHandler}>\r\n                    v\r\n                </SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortPacks;","const initialState: InitialStateType = {\r\n    activeCardPackId: '',\r\n    modalDelCardsPackShowHide: false,\r\n    modalAddCardsPackShowHide: false,\r\n    modalUpdateCardsPackShowHide: false,\r\n    activeCardId: '',\r\n    modalDelCardShowHide: false,\r\n    modalAddCardShowHide: false,\r\n    modalUpdateCardShowHide: false,\r\n}\r\n\r\nexport const modalReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'MODAL/SET-ACTIVE-CARDS-PACK-ID':\r\n            return {...state, activeCardPackId: action.activeCardPackId}\r\n        case 'MODAL/CLOSE-ALL-MODALS':\r\n            return {...state, modalDelCardsPackShowHide: false, modalAddCardsPackShowHide: false,\r\n                modalUpdateCardsPackShowHide: false, modalDelCardShowHide: false, modalAddCardShowHide: false,\r\n                modalUpdateCardShowHide: false\r\n            }\r\n        case 'MODAL/SHOW-MODAL-DEL-CARDS-PACK':\r\n            return {...state, modalDelCardsPackShowHide: true}\r\n        case \"MODAL/SHOW-MODAL-ADD-CARDS-PACK\":\r\n            return {...state, modalAddCardsPackShowHide: true}\r\n        case \"MODAL/SHOW-MODAL-UPDATE-CARDS-PACK\":\r\n            return {...state, modalUpdateCardsPackShowHide: true}\r\n        case \"MODAL/SET-ACTIVE-CARD-ID\":\r\n            return {...state, activeCardId: action.activeCardId}\r\n        case \"MODAL/SHOW-MODAL-DEL-CARD\":\r\n            return {...state, modalDelCardShowHide: true}\r\n        case \"MODAL/SHOW-MODAL-ADD-CARD\":\r\n            return {...state, modalAddCardShowHide: true}\r\n        case \"MODAL/SHOW-MODAL-UPDATE-CARD\":\r\n            return {...state, modalUpdateCardShowHide: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setActiveCardPackAC = (activeCardPackId: string) =>\r\n    ({type: 'MODAL/SET-ACTIVE-CARDS-PACK-ID', activeCardPackId} as const)\r\nexport const closeAllModalsAC = () =>\r\n    ({type: 'MODAL/CLOSE-ALL-MODALS'} as const)\r\nexport const showModalDelCardsPackAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-DEL-CARDS-PACK'} as const)\r\nexport const showModalAddCardsPackAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-ADD-CARDS-PACK'} as const)\r\nexport const showModalUpdateCardsPackAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-UPDATE-CARDS-PACK'} as const)\r\nexport const showModalDelCardAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-DEL-CARD'} as const)\r\nexport const setActiveCardAC = (activeCardId: string) =>\r\n    ({type: 'MODAL/SET-ACTIVE-CARD-ID', activeCardId} as const)\r\nexport const showModalAddCardAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-ADD-CARD'} as const)\r\nexport const showModalUpdateCardAC = () =>\r\n    ({type: 'MODAL/SHOW-MODAL-UPDATE-CARD'} as const)\r\n\r\ntype InitialStateType = {\r\n    activeCardPackId: string\r\n    modalDelCardsPackShowHide: boolean\r\n    modalAddCardsPackShowHide: boolean\r\n    modalUpdateCardsPackShowHide: boolean\r\n    activeCardId: string\r\n    modalDelCardShowHide: boolean\r\n    modalAddCardShowHide: boolean\r\n    modalUpdateCardShowHide: boolean\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setActiveCardPackAC>\r\n    | ReturnType<typeof closeAllModalsAC>\r\n    | ReturnType<typeof showModalDelCardsPackAC>\r\n    | ReturnType<typeof showModalAddCardsPackAC>\r\n    | ReturnType<typeof showModalUpdateCardsPackAC>\r\n    | ReturnType<typeof setActiveCardAC>\r\n    | ReturnType<typeof showModalDelCardAC>\r\n    | ReturnType<typeof showModalAddCardAC>\r\n    | ReturnType<typeof showModalUpdateCardAC>\r\n\r\n// todo: maybe possible to optimize boilerplate code is cases","import React from 'react';\r\nimport s from './Modal.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\n\r\ntype ModalPropsType = {\r\n    modalShowHide: boolean\r\n}\r\n\r\n\r\nexport const Modal: React.FC<ModalPropsType> = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    if (!props.modalShowHide) return null\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return <div className={s.modalBackground}>\r\n        <div className={s.modalWindow}>\r\n            <div className={s.modalContent}>\r\n                {props.children}\r\n            </div>\r\n            <div className={s.close} onClick={onCloseHandler}>X</div>\r\n        </div>\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport {addCardsPackTC} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\n\r\nexport const ModalAddCardsPack = () => {\r\n    const dispatch = useDispatch()\r\n    const [cardPackNameInModal, setCardPackNameInModal] = useState('')\r\n\r\n    const modalAddCardPackShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalAddCardsPackShowHide)\r\n\r\n    const addCardPackInModalButtonHandler = () => {\r\n        dispatch(addCardsPackTC(cardPackNameInModal))\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return <Modal modalShowHide={modalAddCardPackShowHide}>\r\n        Enter Card Pack name.\r\n        <div>\r\n            <SuperInputText value={cardPackNameInModal}\r\n                            onChangeText={setCardPackNameInModal}/>\r\n        </div>\r\n        <SuperButton onClick={addCardPackInModalButtonHandler}>Add Card Pack</SuperButton>\r\n    </Modal>\r\n}","import {deleteCardsPackTC} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\n\r\nexport const ModalDelCardsPack = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const activeCardPackId = useSelector<AppStoreType, string>(state => state.modal.activeCardPackId)\r\n    const modalDelCardPackShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalDelCardsPackShowHide)\r\n\r\n    const modalYesDelCardPackHandler = () => {\r\n        dispatch(deleteCardsPackTC(activeCardPackId))\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n    const modalNoDelCardPackHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n\r\n    }\r\n\r\n    return <Modal modalShowHide={modalDelCardPackShowHide}>\r\n        Are you sure you want to delete the Card Pack?\r\n        <div>\r\n            <SuperButton onClick={modalYesDelCardPackHandler}>Yes</SuperButton>\r\n            <SuperButton onClick={modalNoDelCardPackHandler}>No</SuperButton>\r\n        </div>\r\n    </Modal>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardsPackType} from \"../../../n1-main/m2-bll/api/cardsPack-api\";\r\nimport {updateCardPackTC} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport s from './ModalUpdateCardsPack.module.scss'\r\n\r\nexport const ModalUpdateCardsPack = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [cardsPackName, setCardPackName] = useState('')\r\n\r\n    const activeCardPackId = useSelector<AppStoreType, string>(state => state.modal.activeCardPackId)\r\n    const cardsPacks = useSelector<AppStoreType, Array<CardsPackType>>(state => state.table.cardPacks)\r\n\r\n    const cardsPack = cardsPacks.find(e => e._id === activeCardPackId)\r\n    let oldCardsPackName = ''\r\n    if (cardsPack) oldCardsPackName = cardsPack.name\r\n\r\n    useEffect(() => {\r\n        setCardPackName(oldCardsPackName)\r\n    }, [oldCardsPackName])\r\n\r\n    const modalUpdateCardsPackShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalUpdateCardsPackShowHide)\r\n\r\n    const buttonHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n        dispatch(updateCardPackTC(activeCardPackId, cardsPackName))\r\n    }\r\n\r\n    return <Modal modalShowHide={modalUpdateCardsPackShowHide}>\r\n        Enter new Cards Pack name.\r\n        <div>\r\n            <SuperInputText value={cardsPackName}\r\n                            onChangeText={setCardPackName}/>\r\n        </div>\r\n        <SuperButton onClick={buttonHandler} className={s.button}>Change Cards Pack name</SuperButton>\r\n    </Modal>\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport sContainer from '../../../n1-main/m1-ui/common/components/Container.module.scss'\r\nimport s from './Table.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCardsPackTC,\r\n    setCardsCountAC,\r\n    setPageCountAC,\r\n    setSearchPackNameAC,\r\n    setUserIdAfterRadioAC\r\n} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport Search from \"../Search/Search\";\r\nimport {Settings} from \"../Settings/Settings\";\r\nimport {TableContent} from \"../TableContent/TableContent\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {CardsPackType} from \"../../../n1-main/m2-bll/api/cardsPack-api\";\r\nimport {v1} from \"uuid\";\r\nimport SortPacks from \"../SortPacks/SortPacks\";\r\nimport {\r\n    setActiveCardPackAC,\r\n    showModalAddCardsPackAC,\r\n    showModalDelCardsPackAC,\r\n    showModalUpdateCardsPackAC\r\n} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {ModalAddCardsPack} from \"../../f3-modal/ModalAddCardsPack/ModalAddCardsPack\";\r\nimport {ModalDelCardsPack} from \"../../f3-modal/ModalDelCardsPack/ModalDelCardsPack\";\r\nimport {ModalUpdateCardsPack} from \"../../f3-modal/ModalUpdateCardsPack/ModalUpdateCardsPack\";\r\nimport {useCustomDebounce} from \"../CustomHooks/CustomDebounce\";\r\nimport {useCustomRangeDebounce} from \"../CustomHooks/CustomRangeDebounse\";\r\n\r\nexport const Table = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userID = useSelector<AppStoreType, string>(state => state.profile._id)\r\n    const pageCount = useSelector<AppStoreType, number>(state => state.table.pageCount).toString()\r\n    const page = useSelector<AppStoreType, number>(state => state.table.page)\r\n    const superRadioArr = ['Profile', 'Public']  // for SuperRadio in Settings\r\n    const cardsPacks = useSelector<AppStoreType, Array<CardsPackType>>(state => state.table.cardPacks)\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const [profileOrPublic, onChangeProfileOrPublic] = useState(superRadioArr[0]) // for SuperRadio is Settings\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [values, setValues] = useState<number[]>([0, 100])\r\n    const debouncedSearchTerm = useCustomDebounce(searchTerm, 2000);\r\n    const debouncedRange = useCustomRangeDebounce(values, 2000)\r\n\r\n    useEffect(() => {\r\n        if (profileOrPublic === 'Public') {\r\n            dispatch(setUserIdAfterRadioAC(''))\r\n        } else {\r\n            dispatch(setUserIdAfterRadioAC(userID))\r\n        }\r\n        dispatch(setSearchPackNameAC(debouncedSearchTerm))\r\n        dispatch(setCardsCountAC(debouncedRange[0], debouncedRange[1]))\r\n        dispatch(getCardsPackTC())\r\n\r\n    }, [profileOrPublic, pageCount, page, debouncedSearchTerm, debouncedRange[0], debouncedRange[1]])\r\n\r\n    const setPageCountHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (Number(e.currentTarget.value) < 1) e.currentTarget.value = '1'\r\n        dispatch(setPageCountAC(Number(e.currentTarget.value)))\r\n    }\r\n    const delCardsPackHandler = (cardPackId: string) => {\r\n        dispatch(showModalDelCardsPackAC())\r\n        dispatch(setActiveCardPackAC(cardPackId))\r\n    }\r\n    const updateCardsPackHandler = (cardPackId: string) => {\r\n        dispatch(showModalUpdateCardsPackAC())\r\n        dispatch(setActiveCardPackAC(cardPackId))\r\n    }\r\n    const addCardPackButtonHandler = () => {\r\n        dispatch(showModalAddCardsPackAC())\r\n    }\r\n    if (!isLoggedIn) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    const CardsPackHeader: TableHeaderModelType = [\r\n        {id: v1(), element: <div><span>Name</span><SortPacks upperSort={'0name'} lowerCount={'1name'}/></div>},\r\n        {\r\n            id: v1(),\r\n            element: <div><span>cardsCount</span><SortPacks upperSort={'0cardsCount'} lowerCount={'1cardsCount'}/></div>\r\n        },\r\n        {id: v1(), element: <div><span>updated</span><SortPacks upperSort={'0updated'} lowerCount={'1updated'}/></div>},\r\n        {id: v1(), element: <SuperButton onClick={addCardPackButtonHandler}>Add CardPack</SuperButton>},\r\n    ]\r\n\r\n    // remapping arrays for TableContent\r\n    const cardsPackMapped = cardsPacks.map(e => {\r\n        return {\r\n            id: e._id,\r\n            element: [\r\n                <NavLink className={s.item} exact to={`/cards/${e._id}`}>{e.name}</NavLink>,\r\n                e.cardsCount,\r\n                e.updated,\r\n                e.user_id === userID\r\n                    ? <div>\r\n                        <SuperButton className={s.button} onClick={() => delCardsPackHandler(e._id)}>del</SuperButton>\r\n                        <SuperButton className={s.button} onClick={() => updateCardsPackHandler(e._id)}>update</SuperButton>\r\n                        <NavLink className={s.item} exact to={`/learn/${e._id}`}> <SuperButton\r\n                            className={s.button}  disabled={!e.cardsCount}>Learn</SuperButton>\r\n                        </NavLink>\r\n                    </div>\r\n                    : <div>\r\n                        <NavLink className={s.item} exact to={`/learn/${e._id}`}> <SuperButton\r\n                            className={s.button} disabled={!e.cardsCount}>Learn</SuperButton>\r\n                        </NavLink>\r\n                    </div>,\r\n            ]\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={`${sContainer.container} ${s.table}`}>\r\n            <ModalAddCardsPack/>\r\n            <ModalDelCardsPack/>\r\n            <ModalUpdateCardsPack/>\r\n            <h1>This is table of Card Packs.</h1>\r\n            <Search\r\n                searchTerm={searchTerm}\r\n                setSearchTerm={setSearchTerm}\r\n                values={values}\r\n                setValues={setValues}/>\r\n\r\n            <Settings setPageCountHandler={setPageCountHandler}\r\n                      superRadioArr={superRadioArr}\r\n                      profileOrPublic={profileOrPublic}\r\n                      onChangeProfileOrPublic={onChangeProfileOrPublic}\r\n            />\r\n\r\n            <TableContent headerModel={CardsPackHeader} bodyModel={cardsPackMapped}/>\r\n            <Pagination/>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype HeaderModelElementType = {\r\n    id: string,\r\n    element: string | JSX.Element\r\n}\r\n\r\nexport type TableHeaderModelType = Array<HeaderModelElementType>","import React, {useEffect, useState} from 'react';\r\n\r\nexport const useCustomDebounce = (value: string, delay: number) => {\r\n    const [state, setState] = useState(value)\r\n\r\n    useEffect(() => {\r\n        const setTime = setTimeout(() => {\r\n            setState(value)\r\n        }, delay)\r\n\r\n        return () => {\r\n            clearTimeout(setTime)\r\n        }\r\n    }, [value])\r\n    return state\r\n};\r\n\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nexport const useCustomRangeDebounce = (value: number[], delay: number) => {\r\n    const [range, setRange] = useState(value)\r\n    useEffect(()=>{\r\n        const setTime = setTimeout(()=>{\r\n            setRange(value)\r\n        }, delay)\r\n        return () =>{\r\n            clearTimeout(setTime)\r\n        }\r\n    },[value])\r\n    return range\r\n};\r\n\r\n","import {cardsPackInstance} from \"./cardsPack-api\";\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardsPack_id: string, page: number, pageCount: number) {\r\n        return cardsPackInstance.get<GetCardsResponseType>('/cards/card', {params: {cardsPack_id, page, pageCount}})\r\n    },\r\n    addCard(cardsPack_id: string, question: string, answer: string) {\r\n        const dataForPost = {\r\n            card: {\r\n                cardsPack_id,\r\n                question,\r\n                answer\r\n            }\r\n        }\r\n        return cardsPackInstance.post('cards/card', dataForPost)\r\n    },\r\n    deleteCard(card_id: string) {\r\n        return cardsPackInstance.delete(`cards/card?id=${card_id}`)\r\n    },\r\n    updateCard(card_id: string, newQuestion: string, newAnswer: string) {\r\n        const dataForPost = {\r\n            card: {\r\n                _id: card_id,\r\n                question: newQuestion,\r\n                answer: newAnswer,\r\n            }\r\n        }\r\n        return cardsPackInstance.put('cards/card', dataForPost)\r\n    },\r\n    updateCardGrade(card_id: string, grade: number){\r\n        return cardsPackInstance.put<UpdateCardGradeType>('cards/grade',{card_id, grade})\r\n    }\r\n}\r\n\r\ntype UpdateCardGradeType = {\r\n    _id: ''\r\n    cardsPack_id: ''\r\n    card_id: ''\r\n    user_id: ''\r\n    grade: number\r\n    shots: number\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\ntype GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    packUserId: string\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n// DeleteCardResponseType and UpdateCardResponseType not typed because in task no need.\r\n\r\n// todo: Maybe need to type error.","import {cardsAPI, CardType} from \"./api/cards-api\";\r\nimport {AppStoreType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState: InitialStateType = {\r\n    cards: [],\r\n    pageCount: 1,\r\n    page: 1,\r\n    cardsTotalCount: 20,\r\n    grade: 3,\r\n    card_id: ''\r\n}\r\n\r\nexport const cardsReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"CARDS/SET-CARDS\":\r\n            return {...state, cards: action.cards}\r\n        case \"CARDS/SET-CURRENT-PAGE-CARDS\":\r\n            return {...state, page: action.page}\r\n        case \"CARDS/SET-TOTAL-COUNT-CARDS\":\r\n            return {...state, cardsTotalCount: action.cardsTotalCount}\r\n        case \"CARDS/SET-PAGE-COUNT-CARDS\":\r\n            return {...state, pageCount: action.pageCount}\r\n        case \"CARDS/SET-CARDS-GRADE\":\r\n            return {...state, cards: state.cards.map(c => c._id === action.card_id ? {...c , grade: action.grade } : c)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialStateType = {\r\n    cards: Array<CardType>\r\n    pageCount: number\r\n    page: number\r\n    cardsTotalCount: number\r\n    grade: number\r\n    card_id: string\r\n}\r\n\r\nexport const setCardsGradeAC = (card_id: string, grade: number) =>\r\n    ({type: 'CARDS/SET-CARDS-GRADE', card_id, grade} as const)\r\n\r\nexport const setCardsAC = (cards: Array<CardType>) =>\r\n    ({type: 'CARDS/SET-CARDS', cards} as const)\r\nexport const setCurrentPageCardsAC = (page: number) =>\r\n    ({type: 'CARDS/SET-CURRENT-PAGE-CARDS', page} as const)\r\nexport const setTotalCountCardsAC = (cardsTotalCount: number) =>\r\n    ({type: 'CARDS/SET-TOTAL-COUNT-CARDS', cardsTotalCount,} as const)\r\nexport const setPageCountCardsAC = (pageCount: number) =>\r\n    ({type: 'CARDS/SET-PAGE-COUNT-CARDS', pageCount,} as const)\r\n\r\nexport const getCardsTC = (): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        const cardsPack_id = getState().table.selectedCardPackId;\r\n        const page = getState().cards.page\r\n        const pageCount = getState().cards.pageCount\r\n        cardsAPI.getCards(cardsPack_id, page, pageCount)\r\n            .then(res => {\r\n                console.log('getCardsTC then:', res.data)\r\n                dispatch(setCardsAC(res.data.cards))\r\n                dispatch(setCurrentPageCardsAC(res.data.page))\r\n                dispatch(setPageCountCardsAC(res.data.pageCount))\r\n                dispatch(setTotalCountCardsAC(res.data.cardsTotalCount))\r\n            })\r\n            .catch(res => {\r\n                console.log('getCardsTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const addCardTC = (question: string, answer: string): AppThunk => {\r\n    return (dispatch, getState: () => AppStoreType) => {\r\n        const cardsPack_id = getState().table.selectedCardPackId;\r\n\r\n        cardsAPI.addCard(cardsPack_id, question, answer)\r\n            .then(res => {\r\n                console.log('addCardTC then:', res)\r\n                dispatch(getCardsTC())\r\n            })\r\n            .catch(res => {\r\n                console.log('addCardTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const updateCardTC = (cardId: string, newQuestion: string, newAnswer: string): AppThunk => {\r\n    return (dispatch) => {\r\n        cardsAPI.updateCard(cardId, newQuestion, newAnswer)\r\n            .then(res => {\r\n                dispatch(getCardsTC())\r\n                console.log('updateCardTC then:', res)\r\n\r\n            })\r\n            .catch(res => {\r\n                console.log('updateCardTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const deleteCardTC = (cardId: string): AppThunk => {\r\n    return (dispatch) => {\r\n        cardsAPI.deleteCard(cardId)\r\n            .then(res => {\r\n                dispatch(getCardsTC())\r\n                console.log('deleteCardTC then:', res)\r\n            })\r\n            .catch(res => {\r\n                console.log('deleteCardTC catch:', res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const setCardsGrade = (cardId: string, grade: number) => {\r\n    return (dispatch: Dispatch<ActionType>) => {\r\n        cardsAPI.updateCardGrade(cardId, grade)\r\n            .then(res => {\r\n               dispatch(setCardsGradeAC(res.data.card_id, res.data.grade))\r\n            })\r\n            .catch(res =>{\r\n                console.log(res.response.data.error)\r\n            })\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setCurrentPageCardsAC>\r\n    | ReturnType<typeof setTotalCountCardsAC>\r\n    | ReturnType<typeof setPageCountCardsAC>\r\n    | ReturnType<typeof setCardsGradeAC>\r\n\r\ntype AppThunk = ThunkAction<void, AppStoreType, unknown, ActionType>\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {setPageCountCardsAC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from './Select.module.scss'\r\n\r\ntype PropsType = {\r\n    pageCountCards: number\r\n}\r\nconst Select =(props: PropsType) => {\r\n    const {pageCountCards} = props\r\n    const dispatch = useDispatch()\r\n    const [state, setState] = useState<number>(pageCountCards)\r\n\r\n    const onClickHandler = () =>{\r\n        dispatch(setPageCountCardsAC(state))\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLSelectElement>)=>{\r\n        setState(+e.currentTarget.value)\r\n    }\r\n    const arOptions = Array.from(Array(30).keys())\r\n    const option = arOptions.map((index,arr)=> {\r\n        return <option key={index}>{arr}</option>\r\n    })\r\n    return (\r\n        <div>\r\n            <select value={state}\r\n                    onChange={onChangeHandler}\r\n                    onClick={onClickHandler}\r\n                    className={style.select}>\r\n                {option}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;","import React, {useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from './Pagination.module.css'\r\nimport SuperButton from '../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton';\r\nimport {setCurrentPageCardsAC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport Select from \"../Select/Select\";\r\n\r\n\r\ntype PropsType = {\r\n    pageCard: number\r\n    pageCountCards: number\r\n    cardsTotalCountCards: number\r\n\r\n}\r\nconst CardsPagination = (props: PropsType) => {\r\n    const {pageCard, pageCountCards,cardsTotalCountCards } = props\r\n    const dispatch = useDispatch()\r\n\r\n    const currentPageHandler = (page: number) => {\r\n        dispatch(setCurrentPageCardsAC(page))\r\n    }\r\n\r\n    let pagesCountCards = Math.ceil(cardsTotalCountCards / pageCountCards); //количество страниц всех!!! до пагинатора\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCountCards; i++) {\r\n        pages.push(i)\r\n    }\r\n    const portionSize = 10; // порция которая видна в пагинации\r\n    const portionCount = Math.ceil(pagesCountCards / portionSize) // количество порций по 5 страниц\r\n\r\n    const [portion, setPortion] = useState(1)\r\n    const leftNumber = (portion - 1) * portionSize + 1\r\n    const rightNumber = portion * portionSize\r\n    const correctValue = pages.filter((p) => p ? p >= leftNumber && p <= rightNumber : '')\r\n\r\n\r\n    return (\r\n        <div className={style.pagination}>\r\n           <Select pageCountCards={pageCountCards}/>\r\n\r\n            {portion > 1 &&\r\n        <SuperButton onClick={() => {\r\n            setPortion(portion - 1)\r\n        }} className={style.btn}>Prev\r\n        </SuperButton>\r\n        }\r\n            {correctValue.map(p => {\r\n                return (\r\n                    <span\r\n                        key={p}\r\n                        className={`${style.item} ${pageCard === p ? style.select : style.item}`}\r\n                        onClick={() => currentPageHandler(p)}>{p}\r\n                    </span>\r\n                )\r\n\r\n            })}\r\n            {portionCount > portion && <SuperButton onClick={() => {\r\n                setPortion(portion + 1)\r\n            }} className={style.btn}>Next\r\n            </SuperButton>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default CardsPagination;","import React from \"react\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {deleteCardTC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\n\r\nexport const ModalDelCard = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const modalDelCardShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalDelCardShowHide)\r\n    const activeCardId = useSelector<AppStoreType, string>(state => state.modal.activeCardId)\r\n\r\n    const modalYesDelCardPackHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n        dispatch(deleteCardTC(activeCardId))\r\n    }\r\n    const modalNoDelCardPackHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n\r\n    }\r\n\r\n    return <Modal modalShowHide={modalDelCardShowHide}>\r\n        Are you sure you want to delete the Card?\r\n        <div>\r\n            <SuperButton onClick={modalYesDelCardPackHandler}>Yes</SuperButton>\r\n            <SuperButton onClick={modalNoDelCardPackHandler}>No</SuperButton>\r\n        </div>\r\n    </Modal>\r\n}","import React, {useState} from \"react\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {addCardTC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport sInput from '../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText.module.scss'\r\n\r\nexport const ModalAddCard = () => {\r\n    const dispatch = useDispatch()\r\n    const modalAddCardShowHide = useSelector<AppStoreType, boolean>(state => state.modal.modalAddCardShowHide)\r\n\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const buttonHandler = () => {\r\n        dispatch(addCardTC(question, answer))\r\n        dispatch(closeAllModalsAC())\r\n    }\r\n\r\n    return <Modal modalShowHide={modalAddCardShowHide}>\r\n        <div>Enter Card question:</div>\r\n        <textarea className={sInput.input} value={question} onChange={(e) => {setQuestion(e.target.value)}} />\r\n        <div>Enter Card answer:</div>\r\n        <textarea className={sInput.input} value={answer} onChange={(e) => {setAnswer(e.target.value)}} />\r\n        <SuperButton onClick={buttonHandler}>Add Card</SuperButton>\r\n    </Modal>\r\n}\r\n\r\n// todo: Separate textarea to common component","import React, {useEffect, useState} from \"react\";\r\nimport {closeAllModalsAC} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {Modal} from \"../Modal/Modal\";\r\nimport SuperInputText from \"../../../n1-main/m1-ui/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\nimport {updateCardTC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\n\r\nexport const ModalUpdateCard = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [question, setQuestion] = useState('')\r\n    const [answer, setAnswer] = useState('')\r\n\r\n    const modalUpdateCardShowHide = useSelector<AppStoreType, boolean>(state =>\r\n        state.modal.modalUpdateCardShowHide)\r\n    const activeCardId = useSelector<AppStoreType, string>(state => state.modal.activeCardId)\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n\r\n    const card = cards.find(e => e._id === activeCardId)\r\n    let oldCardQuestion = ''\r\n    let oldCardAnswer = ''\r\n    if (card) {\r\n        oldCardQuestion = card.question\r\n        oldCardAnswer = card.answer\r\n    }\r\n\r\n    useEffect(() => {\r\n        setQuestion(oldCardQuestion)\r\n        setAnswer(oldCardAnswer)\r\n    },[oldCardQuestion, oldCardAnswer])\r\n\r\n    const buttonHandler = () => {\r\n        dispatch(closeAllModalsAC())\r\n        dispatch(updateCardTC(activeCardId, question, answer))\r\n    }\r\n\r\n    return <Modal modalShowHide={modalUpdateCardShowHide}>\r\n        <div>Enter new Card question:</div>\r\n        <SuperInputText value={question} onChangeText={setQuestion}/>\r\n        <div>Enter new Card answer:</div>\r\n        <SuperInputText value={answer} onChangeText={setAnswer}/>\r\n        <SuperButton onClick={buttonHandler}>Change Card</SuperButton>\r\n    </Modal>\r\n}","import React, {useEffect} from 'react';\r\nimport {v1} from \"uuid\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport s from \"../Table/Table.module.scss\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\nimport {getCardsTC, updateCardTC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport {TableHeaderModelType} from \"../Table/Table\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {TableContent} from \"../TableContent/TableContent\";\r\nimport {setSelectedCardPack} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport CardsPagination from \"../Pagination/CardsPagination\";\r\nimport {\r\n    setActiveCardAC,\r\n    showModalAddCardAC,\r\n    showModalDelCardAC,\r\n    showModalUpdateCardAC\r\n} from \"../../../n1-main/m2-bll/modal-reducer\";\r\nimport {ModalDelCard} from \"../../f3-modal/ModalDelCard/ModalDelCard\";\r\nimport {ModalAddCard} from \"../../f3-modal/ModalAddCard/ModalAddCard\";\r\nimport {ModalUpdateCard} from \"../../f3-modal/ModalUpdateCard/ModalUpdateCard\";\r\n\r\nconst Cards = () => {\r\n    const {packid} = useParams<{ packid: string }>();\r\n    const dispatch = useDispatch()\r\n\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n    const userID = useSelector<AppStoreType, string>(state => state.profile._id)\r\n\r\n    let pageCount = useSelector<AppStoreType, number>(state => state.cards.pageCount) // кол-во элементов на одной стр\r\n    let cardsTotalCount = useSelector<AppStoreType, number>(state => state.cards.cardsTotalCount)// кол-во карт\r\n    let page = useSelector<AppStoreType, number>(state => state.cards.page)// выбранная страница\r\n    useEffect(() => {\r\n        if (!!packid) {\r\n            dispatch(setSelectedCardPack(packid))\r\n            dispatch(getCardsTC())\r\n        }\r\n    }, [packid, pageCount, page])\r\n\r\n    const addCardButtonHandler = () => {\r\n        dispatch(showModalAddCardAC())\r\n    }\r\n\r\n    const delCardsHandler = (cardId: string) => {\r\n        dispatch(setActiveCardAC(cardId))\r\n        dispatch(showModalDelCardAC())\r\n    }\r\n\r\n    const updateCardsHandler = (cardId: string) => {\r\n        // dispatch(updateCardTC(cardId, 'UpdatedQuestion'))\r\n        dispatch(setActiveCardAC(cardId))\r\n        dispatch(showModalUpdateCardAC())\r\n    }\r\n\r\n\r\n    const CardsHeader: TableHeaderModelType = [\r\n        {id: v1(), element: 'question'},\r\n        {id: v1(), element: 'answer'},\r\n        {id: v1(), element: 'created'},\r\n        {id: v1(), element: 'shots'},\r\n        {id: v1(), element: 'grade'},\r\n        {id: v1(), element: <SuperButton onClick={addCardButtonHandler}>Add Card</SuperButton>},\r\n    ]\r\n\r\n    let cardHeader = CardsHeader.map(el => {\r\n        return {id: v1(), element: el.element}\r\n    })\r\n    const cardsMapped = cards.map(e => {\r\n        return {\r\n            id: e._id,\r\n            element: [\r\n                e.question,\r\n                e.answer,\r\n                e.created,\r\n                e.shots,\r\n                <div className={s.star}>{\r\n                    Math.round(e.grade) == 1 ? '⁎' : Math.round(e.grade) == 2 ? '⁎⁎' :\r\n                        Math.round(e.grade) == 3 ? '⁎⁎⁎' : Math.round(e.grade) == 4 ? '⁎⁎⁎⁎' :\r\n                            Math.round(e.grade) == 5 ? '⁎⁎⁎⁎⁎' : ''}</div>,\r\n                e.user_id === userID\r\n                    ? <div>\r\n                        <SuperButton className={s.button} onClick={() => delCardsHandler(e._id)}>del</SuperButton>\r\n                        <SuperButton className={s.button} onClick={() => updateCardsHandler(e._id)}>update</SuperButton>\r\n                    </div>\r\n                    : <div> </div>\r\n            ]\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <ModalAddCard />\r\n            <ModalDelCard />\r\n            <ModalUpdateCard />\r\n            <h1>This is table of Cards for selected Card Pack.</h1>\r\n            <TableContent headerModel={cardHeader} bodyModel={cardsMapped}/>\r\n            <CardsPagination pageCard={page} pageCountCards={pageCount} cardsTotalCountCards={cardsTotalCount}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React, {useState} from 'react';\r\nimport s from './Learn.module.scss'\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\nimport SuperButton from \"../../../n1-main/m1-ui/common/c2-SuperButton/SuperButton\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setCardsGrade} from \"../../../n1-main/m2-bll/cards-reducer\";\r\n\r\nexport type LearnPropsType = {\r\n    card: CardType\r\n    nextCard: () => void\r\n}\r\n\r\nexport const Learn = (props: LearnPropsType) => {\r\n    const [hidden, setHidden] = useState(true)\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (grade: number) => {\r\n        dispatch(setCardsGrade(props.card._id, grade))\r\n    }\r\n    const nextCard = () => {\r\n        props.nextCard()\r\n        setHidden(true)\r\n    }\r\n    const grades = [1, 2, 3, 4, 5]\r\n    return <div className={s.body}>\r\n        <span>{props.card.question}</span>\r\n\r\n        <div>\r\n            {hidden ? <SuperButton onClick={() => setHidden(false)}>Answer</SuperButton> :\r\n                <span>{props.card.answer}</span>}\r\n        </div>\r\n\r\n        {!hidden &&\r\n        <div className={s.grade}>\r\n            {grades.map((g, i) => (\r\n                <SuperButton key={i} className={s.gradeBtn} onClick={() => (submitHandler(g))}>{g}</SuperButton>\r\n            ))}\r\n        </div>}\r\n\r\n        <div className={s.btn}>\r\n            <NavLink exact to={`/table`}><SuperButton>Cancel</SuperButton></NavLink>\r\n            <SuperButton onClick={nextCard}>Next</SuperButton>\r\n        </div>\r\n\r\n    </div>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../n1-main/m2-bll/store\";\r\nimport {CardType} from \"../../../n1-main/m2-bll/api/cards-api\";\r\nimport {getCardsTC, setPageCountCardsAC} from \"../../../n1-main/m2-bll/cards-reducer\";\r\nimport {Learn} from \"./Learn\";\r\nimport {setSelectedCardPack} from \"../../../n1-main/m2-bll/cardsPack-reducer\";\r\nimport {CardsPackType} from \"../../../n1-main/m2-bll/api/cardsPack-api\";\r\n\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n\r\n    return cards[res.id + 1];\r\n}\r\nlet initialCard: CardType = {\r\n    answer: '',\r\n    cardsPack_id: '',\r\n    comments: '',\r\n    created: '',\r\n    grade: 1,\r\n    more_id: '',\r\n    question: '',\r\n    rating: 1,\r\n    shots: 1,\r\n    type: '',\r\n    updated: '',\r\n    user_id: '',\r\n    __v: 1,\r\n    _id: '',\r\n}\r\nexport const LearnContainer = () => {\r\n    const {packid} = useParams<{ packid: string }>();\r\n    const dispatch = useDispatch()\r\n    const cards = useSelector<AppStoreType, Array<CardType>>(state => state.cards.cards)\r\n    const cardsPacks = useSelector<AppStoreType, Array<CardsPackType>>(state => state.table.cardPacks)\r\n\r\n    const cardsIndex = cardsPacks.find(cp => cp._id === packid)\r\n    let cardsCount = 0\r\n    if (cardsIndex) {\r\n        cardsCount = cardsIndex.cardsCount\r\n    }\r\n    console.log(cardsIndex)\r\n    let [card, setCards] = useState<CardType>(initialCard)\r\n    let [initial, setInitial] = useState<boolean>(false)\r\n\r\n    let nextCard = () => {\r\n        setCards(getCard(cards))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!initial) {\r\n            dispatch(setPageCountCardsAC(cardsCount))\r\n            dispatch(setSelectedCardPack(packid))\r\n            dispatch(getCardsTC())\r\n            setInitial(true)\r\n        }\r\n        if (cards.length > 0) {\r\n            setCards(getCard(cards))\r\n        }\r\n\r\n    }, [packid, cards])\r\n\r\n\r\n    return <Learn card={card} nextCard={nextCard}  />\r\n}","import React from 'react';\r\nimport {Header} from \"../p1-header/Header\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {RegistrationContainer} from \"../../../n2-features/f1-auth/a2-register/RegistrationContainer\";\r\nimport {Profile} from \"../../../n2-features/f1-auth/a3-profile/Profile\";\r\nimport {Page404} from \"../../../n2-features/f1-auth/Page404\";\r\nimport {PasswordRecovery} from \"../../../n2-features/f1-auth/a3-passwordRecovery/PasswordRecovery\";\r\nimport {PasswordNew} from \"../../../n2-features/f1-auth/a4-passwordNew/PasswordNew\";\r\nimport {Examples} from \"../../../n2-features/f0-test/Examples/Examples\";\r\nimport {LoginContainer} from \"../../../n2-features/f1-auth/a1-login/LoginContainer\";\r\nimport {Table} from \"../../../n2-features/f2-table/Table/Table\";\r\nimport Cards from \"../../../n2-features/f2-table/Cards/Cards\";\r\nimport {LearnContainer} from '../../../n2-features/f2-table/Learn/LearnContainer';\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Switch>\r\n                <Route path={'/table'} render={() => <Table/>}/>\r\n                <Route path={'/cards/:packid?'} render={() => <Cards/>}/>\r\n                <Route path={'/learn/:packid?'} render={() => <LearnContainer/>}/>\r\n                <Route exact path={'/login'} render={() => <LoginContainer/>}/>\r\n                <Route exact path={'/registration'} render={() => <RegistrationContainer/>}/>\r\n                <Route exact path={'/profile'} render={() => <Profile/>}/>\r\n                <Route exact path={'/404'} render={() => <Page404/>}/>\r\n                <Route exact path={'/passwordrecovery'} render={() => <PasswordRecovery/>}/>\r\n                <Route exact path={'/passwordnew/:token'} render={() => <PasswordNew/>}/>\r\n                <Route exact path={'/tests'} render={() => <Examples/>}/>\r\n                <Redirect exact from={'/'} to={'/profile'}/>\r\n                <Redirect from={'*'} to={'/404'}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"./p2-main/Main\";\r\nimport {InitializeTC} from \"../m2-bll/authReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../m2-bll/store\";\r\n\r\nexport const App = () => {\r\n    const dispatch = useDispatch()\r\n    const isInitialize = useSelector<AppStoreType, boolean>(state => state.auth.isInitilize)\r\n    useEffect(() => {\r\n        dispatch(InitializeTC())\r\n    }, [])\r\n    return (\r\n        <div className=\"App\">\r\n            {isInitialize && <Main/>}\r\n        </div>\r\n    );\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {testReducer} from \"./test-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {recoveryReducer} from \"./recovery-reducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {cardsPackReducer} from \"./cardsPack-reducer\";\r\nimport {cardsReducer} from \"./cards-reducer\";\r\nimport {modalReducer} from \"./modal-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    testReducer: testReducer,\r\n    registration: registrationReducer,\r\n    recoveryPassword: recoveryReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    table: cardsPackReducer,\r\n    cards: cardsReducer,\r\n    modal: modalReducer,\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {App} from \"./n1-main/m1-ui/App\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./n1-main/m2-bll/store\";\r\n\r\n// new branch created\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n//j2\r\n\r\n//hello\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}